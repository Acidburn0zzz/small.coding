--- refpolicy.orig/policy/modules/admin/portage.te	2010-08-03 15:11:03.000000000 +0200
+++ refpolicy/policy/modules/admin/portage.te	2011-07-21 09:51:27.363000226 +0200
@@ -1,10 +1,33 @@
-policy_module(portage, 1.10.0)
+policy_module(portage, 1.10.0.r1)
 
 ########################################
 #
 # Declarations
 #
 
+## <desc>
+## <p>
+##   Set dontaudit statements where Gentoo developers believe they are indeed
+##   cosmetic
+## </p>
+## </desc>
+gen_tunable(gentoo_try_dontaudit, false)
+
+## <desc>
+## <p>
+##   Allow the portage domains to use NFS mounts (regular nfs_t)
+## </p>
+## </desc>
+gen_tunable(gentoo_portage_allow_nfs, false)
+
+## <desc>
+## <p>
+##   Enables rules that should not be necessary anymore when upstream updates or
+##   enhances their application(s).
+## </p>
+## </desc>
+gen_tunable(gentoo_wait_requests, true)
+
 type gcc_config_t;
 type gcc_config_exec_t;
 application_domain(gcc_config_t, gcc_config_exec_t)
@@ -36,6 +59,9 @@
 type portage_ebuild_t;
 files_type(portage_ebuild_t)
 
+type portage_srcrepo_t;
+files_type(portage_srcrepo_t)
+
 type portage_fetch_tmp_t;
 files_tmp_file(portage_fetch_tmp_t)
 
@@ -57,6 +83,13 @@
 type portage_tmpfs_t;
 files_tmpfs_file(portage_tmpfs_t)
 
+tunable_policy(`gentoo_portage_allow_nfs',`
+	fs_getattr_nfs(portage_fetch_t)
+	fs_manage_nfs_dirs(portage_fetch_t)
+	fs_manage_nfs_files(portage_fetch_t)
+	fs_manage_nfs_symlinks(portage_fetch_t)
+')
+
 ########################################
 #
 # gcc-config policy
@@ -94,6 +127,8 @@
 
 # seems to be ok without this
 init_dontaudit_read_script_status_files(gcc_config_t)
+# since openrc, gcc-config calls rc (but transitioning isn't needed) through the color eval stuff
+init_exec_script_files(gcc_config_t)
 
 libs_read_lib_files(gcc_config_t)
 libs_domtrans_ldconfig(gcc_config_t)
@@ -122,7 +157,7 @@
 # - setexec to run portage fetch
 allow portage_t self:process { setfscreate setexec };
 # - kill for mysql merging, at least
-allow portage_t self:capability { sys_nice kill };
+allow portage_t self:capability { sys_nice kill setfcap };
 
 # user post-sync scripts
 can_exec(portage_t, portage_conf_t)
@@ -132,6 +167,8 @@
 
 allow portage_t { portage_fetch_t portage_sandbox_t }:process signal;
 
+logging_dontaudit_search_logs(portage_fetch_t)
+
 # transition for rsync and wget
 corecmd_shell_spec_domtrans(portage_t, portage_fetch_t)
 rsync_entry_domtrans(portage_t, portage_fetch_t)
@@ -145,6 +182,7 @@
 allow portage_sandbox_t portage_t:fd use;
 allow portage_sandbox_t portage_t:fifo_file rw_file_perms;
 allow portage_sandbox_t portage_t:process sigchld;
+allow portage_sandbox_t self:process ptrace;
 
 # run scripts out of the build directory
 can_exec(portage_t, portage_tmp_t)
@@ -173,6 +211,17 @@
 # if sesandbox is disabled, compiling is performed in this domain
 portage_compile_domain(portage_t)
 
+tunable_policy(`gentoo_try_dontaudit',`
+	dontaudit portage_t self:capability { dac_read_search };
+')
+
+tunable_policy(`gentoo_portage_allow_nfs',`
+	fs_getattr_nfs(portage_t)
+	fs_manage_nfs_dirs(portage_t)
+	fs_manage_nfs_files(portage_t)
+	fs_manage_nfs_symlinks(portage_t)
+')
+
 optional_policy(`
 	bootloader_domtrans(portage_t)
 ')
@@ -237,6 +286,10 @@
 # it occasionally comes up
 corenet_tcp_connect_all_reserved_ports(portage_fetch_t)
 corenet_tcp_connect_generic_port(portage_fetch_t)
+corenet_tcp_connect_http_cache_port(portage_fetch_t) # In case of cache server connections/proxy
+tunable_policy(`gentoo_wait_requests',`
+corenet_tcp_connect_http_cache_port(portage_t) # emerge fetches binpkgs from PORTAGE_BINHOST ?
+')
 
 dev_dontaudit_read_rand(portage_fetch_t)
 
@@ -274,3 +327,17 @@
 	dontaudit portage_sandbox_t portage_cache_t:dir { setattr };
 	dontaudit portage_sandbox_t portage_cache_t:file { setattr write };
 ')
+
+tunable_policy(`gentoo_try_dontaudit',`
+	dontaudit portage_t self:netlink_route_socket { create };
+	dontaudit portage_t self:capability { dac_read_search };
+	dontaudit portage_fetch_t portage_devpts_t:chr_file { read write };
+	kernel_dontaudit_request_load_module(portage_t)
+')
+
+tunable_policy(`gentoo_portage_allow_nfs',`
+	fs_getattr_nfs(portage_sandbox_t)
+	fs_manage_nfs_dirs(portage_sandbox_t)
+	fs_manage_nfs_files(portage_sandbox_t)
+	fs_manage_nfs_symlinks(portage_sandbox_t)
+')
--- refpolicy.orig/policy/modules/admin/portage.if	2010-08-05 14:46:44.000000000 +0200
+++ refpolicy/policy/modules/admin/portage.if	2011-05-02 19:44:59.548000064 +0200
@@ -78,7 +78,7 @@
 	allow $1 self:capability { fowner fsetid mknod setgid setuid chown dac_override net_raw };
 	dontaudit $1 self:capability sys_chroot;
 	allow $1 self:process { setpgid setsched setrlimit signal_perms execmem };
-	allow $1 self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
+	allow $1 self:process ~{ ptrace setcurrent setexec setrlimit execmem execstack execheap setfscreate };
 	allow $1 self:fd use;
 	allow $1 self:fifo_file rw_fifo_file_perms;
 	allow $1 self:shm create_shm_perms;
@@ -123,6 +123,11 @@
 	manage_sock_files_pattern($1, portage_tmpfs_t, portage_tmpfs_t)
 	fs_tmpfs_filetrans($1, portage_tmpfs_t, { dir file lnk_file sock_file fifo_file })
 
+	# Support live ebuilds
+	manage_dirs_pattern($1, portage_srcrepo_t, portage_srcrepo_t)
+	manage_files_pattern($1, portage_srcrepo_t, portage_srcrepo_t)
+	manage_lnk_files_pattern($1, portage_srcrepo_t, portage_srcrepo_t)
+
 	kernel_read_system_state($1)
 	kernel_read_network_state($1)
 	kernel_read_software_raid_state($1)
@@ -281,3 +286,23 @@
 
 	dontaudit $1 portage_tmp_t:file rw_file_perms;
 ')
+
+########################################
+## <summary>
+##	Do not audit attempts to inherit a
+##	portage file descriptor.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain to not audit.
+##	</summary>
+## </param>
+#
+interface(`gentoo_portage_dontaudit_use_fds',`
+	gen_require(`
+		type portage_t;
+	')
+
+	dontaudit $1 portage_t:fd use;
+')
+
--- refpolicy.orig/policy/modules/admin/portage.fc	2010-08-03 15:11:03.000000000 +0200
+++ refpolicy/policy/modules/admin/portage.fc	2011-05-02 19:43:58.196000083 +0200
@@ -13,6 +13,9 @@
 /usr/lib(64)?/portage/bin/sandbox --	gen_context(system_u:object_r:portage_exec_t,s0)
 
 /usr/portage(/.*)?			gen_context(system_u:object_r:portage_ebuild_t,s0)
+/usr/portage/distfiles/svn-src(/.*)?	gen_context(system_u:object_r:portage_srcrepo_t,s0)
+/usr/portage/distfiles/git-src(/.*)?	gen_context(system_u:object_r:portage_srcrepo_t,s0)
+/usr/portage/distfiles/cvs-src(/.*)?	gen_context(system_u:object_r:portage_srcrepo_t,s0)
 
 /var/db/pkg(/.*)?			gen_context(system_u:object_r:portage_db_t,s0)
 /var/cache/edb(/.*)?			gen_context(system_u:object_r:portage_cache_t,s0)
