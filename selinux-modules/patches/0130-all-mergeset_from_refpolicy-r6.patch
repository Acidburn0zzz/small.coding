diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/boinc.fc refpolicy/boinc.fc
--- refpolicy/boinc.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/boinc.fc	2012-09-27 20:03:30.382126498 +0200
@@ -0,0 +1,9 @@
+/etc/rc\.d/init\.d/boinc-client	--	gen_context(system_u:object_r:boinc_initrc_exec_t,s0)
+
+/usr/bin/boinc_client	--	gen_context(system_u:object_r:boinc_exec_t,s0)
+
+/var/lib/boinc(/.*)?	gen_context(system_u:object_r:boinc_var_lib_t,s0)
+/var/lib/boinc/projects(/.*)?	gen_context(system_u:object_r:boinc_project_var_lib_t,s0)
+/var/lib/boinc/slots(/.*)?	gen_context(system_u:object_r:boinc_project_var_lib_t,s0)
+
+/var/log/boinc\.log.*	--	gen_context(system_u:object_r:boinc_log_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/boinc.if refpolicy/boinc.if
--- refpolicy/boinc.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/boinc.if	2012-09-27 20:03:30.383126498 +0200
@@ -0,0 +1,44 @@
+## <summary>Platform for computing using volunteered resources.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an boinc environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`boinc_admin',`
+	gen_require(`
+
+		type boinc_t, boinc_project_t, boinc_log_t;
+		type boinc_var_lib_t, boinc_tmp_t, boinc_initrc_exec_t;
+		type boinc_project_var_lib_t, boinc_project_tmp_t;
+	')
+
+	allow $1 { boinc_t boinc_project_t }:process { ptrace signal_perms };
+	ps_process_pattern($1, { boinc_t boinc_project_t })
+
+	init_labeled_script_domtrans($1, boinc_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 boinc_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, boinc_log_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, { boinc_project_tmp_t boinc_tmp_t })
+
+	files_search_var_lib($1)
+	admin_pattern($1, { boinc_project_var_lib_t boinc_var_lib_t })
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/boinc.te refpolicy/boinc.te
--- refpolicy/boinc.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/boinc.te	2012-09-27 20:03:30.383126498 +0200
@@ -0,0 +1,177 @@
+policy_module(boinc, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type boinc_t;
+type boinc_exec_t;
+init_daemon_domain(boinc_t, boinc_exec_t)
+
+type boinc_initrc_exec_t;
+init_script_file(boinc_initrc_exec_t)
+
+type boinc_tmp_t;
+files_tmp_file(boinc_tmp_t)
+
+type boinc_tmpfs_t;
+files_tmpfs_file(boinc_tmpfs_t)
+
+type boinc_var_lib_t;
+files_type(boinc_var_lib_t)
+
+type boinc_project_var_lib_t;
+files_type(boinc_project_var_lib_t)
+
+type boinc_log_t;
+logging_log_file(boinc_log_t)
+
+type boinc_project_t;
+domain_type(boinc_project_t)
+domain_entry_file(boinc_project_t, boinc_project_var_lib_t)
+role system_r types boinc_project_t;
+
+type boinc_project_tmp_t;
+files_tmp_file(boinc_project_tmp_t)
+
+########################################
+#
+# Local policy
+#
+
+allow boinc_t self:process { setsched setpgid signull sigkill };
+allow boinc_t self:unix_stream_socket { accept listen };
+allow boinc_t self:tcp_socket create_stream_socket_perms;
+allow boinc_t self:shm create_shm_perms;
+allow boinc_t self:fifo_file rw_fifo_file_perms;
+allow boinc_t self:sem create_sem_perms;
+
+manage_dirs_pattern(boinc_t, boinc_tmp_t, boinc_tmp_t)
+manage_files_pattern(boinc_t, boinc_tmp_t, boinc_tmp_t)
+files_tmp_filetrans(boinc_t, boinc_tmp_t, { dir file })
+
+manage_files_pattern(boinc_t, boinc_tmpfs_t, boinc_tmpfs_t)
+fs_tmpfs_filetrans(boinc_t, boinc_tmpfs_t, file)
+
+manage_dirs_pattern(boinc_t, boinc_var_lib_t, boinc_var_lib_t)
+manage_files_pattern(boinc_t, boinc_var_lib_t, boinc_var_lib_t)
+manage_lnk_files_pattern(boinc_t, boinc_var_lib_t, boinc_var_lib_t)
+
+# entry files to the boinc_project_t domain
+manage_dirs_pattern(boinc_t, boinc_project_var_lib_t, boinc_project_var_lib_t)
+manage_files_pattern(boinc_t, boinc_project_var_lib_t, boinc_project_var_lib_t)
+filetrans_pattern(boinc_t, boinc_var_lib_t, boinc_project_var_lib_t, dir, "slots")
+filetrans_pattern(boinc_t, boinc_var_lib_t, boinc_project_var_lib_t, dir, "projects")
+
+append_files_pattern(boinc_t, boinc_log_t, boinc_log_t)
+create_files_pattern(boinc_t, boinc_log_t, boinc_log_t)
+setattr_files_pattern(boinc_t, boinc_log_t, boinc_log_t)
+logging_log_filetrans(boinc_t, boinc_log_t, file)
+
+can_exec(boinc_t, boinc_var_lib_t)
+
+domtrans_pattern(boinc_t, boinc_project_var_lib_t, boinc_project_t)
+
+kernel_read_system_state(boinc_t)
+kernel_search_vm_sysctl(boinc_t)
+
+corenet_all_recvfrom_unlabeled(boinc_t)
+corenet_all_recvfrom_netlabel(boinc_t)
+corenet_tcp_sendrecv_generic_if(boinc_t)
+corenet_tcp_sendrecv_generic_node(boinc_t)
+corenet_tcp_sendrecv_all_ports(boinc_t)
+corenet_tcp_bind_generic_node(boinc_t)
+
+corenet_sendrecv_boinc_client_packets(boinc_t)
+corenet_sendrecv_boinc_server_packets(boinc_t)
+corenet_tcp_bind_boinc_port(boinc_t)
+corenet_tcp_connect_boinc_port(boinc_t)
+
+corenet_sendrecv_boinc_client_server_packets(boinc_t)
+corenet_tcp_bind_boinc_client_port(boinc_t)
+
+corenet_sendrecv_http_client_packets(boinc_t)
+corenet_tcp_connect_http_port(boinc_t)
+
+corenet_sendrecv_http_cache_client_packets(boinc_t)
+corenet_tcp_connect_http_cache_port(boinc_t)
+
+corecmd_exec_bin(boinc_t)
+corecmd_exec_shell(boinc_t)
+
+dev_read_rand(boinc_t)
+dev_read_urand(boinc_t)
+dev_read_sysfs(boinc_t)
+dev_rw_xserver_misc(boinc_t)
+
+domain_read_all_domains_state(boinc_t)
+
+files_dontaudit_getattr_boot_dirs(boinc_t)
+files_getattr_all_dirs(boinc_t)
+files_getattr_all_files(boinc_t)
+files_read_etc_files(boinc_t)
+files_read_etc_runtime_files(boinc_t)
+files_read_usr_files(boinc_t)
+
+fs_getattr_all_fs(boinc_t)
+
+term_getattr_all_ptys(boinc_t)
+term_getattr_unallocated_ttys(boinc_t)
+
+init_read_utmp(boinc_t)
+
+logging_send_syslog_msg(boinc_t)
+
+miscfiles_read_fonts(boinc_t)
+miscfiles_read_localization(boinc_t)
+
+optional_policy(`
+	mta_send_mail(boinc_t)
+')
+
+optional_policy(`
+	sysnet_dns_name_resolve(boinc_t)
+')
+
+########################################
+#
+# Project local policy
+#
+
+allow boinc_project_t self:capability { setuid setgid };
+allow boinc_project_t self:process { execmem execstack noatsecure ptrace setcap getcap setpgid setsched signal_perms };
+
+manage_dirs_pattern(boinc_project_t, boinc_project_tmp_t, boinc_project_tmp_t)
+manage_files_pattern(boinc_project_t, boinc_project_tmp_t, boinc_project_tmp_t)
+manage_sock_files_pattern(boinc_project_t, boinc_project_tmp_t, boinc_project_tmp_t)
+files_tmp_filetrans(boinc_project_t, boinc_project_tmp_t, { dir file sock_file})
+
+manage_dirs_pattern(boinc_project_t, boinc_project_var_lib_t, boinc_project_var_lib_t)
+manage_files_pattern(boinc_project_t, boinc_project_var_lib_t, boinc_project_var_lib_t)
+
+allow boinc_project_t boinc_project_var_lib_t:file execmod;
+can_exec(boinc_project_t, boinc_project_var_lib_t)
+
+allow boinc_project_t boinc_t:shm rw_shm_perms;
+allow boinc_project_t boinc_tmpfs_t:file { read write };
+
+kernel_read_kernel_sysctls(boinc_project_t)
+kernel_read_network_state(boinc_project_t)
+kernel_search_vm_sysctl(boinc_project_t)
+
+corenet_all_recvfrom_unlabeled(boinc_project_t)
+corenet_all_recvfrom_netlabel(boinc_project_t)
+corenet_tcp_sendrecv_generic_if(boinc_project_t)
+corenet_tcp_sendrecv_generic_node(boinc_project_t)
+corenet_tcp_bind_generic_node(boinc_project_t)
+
+corenet_sendrecv_boinc_client_packets(boinc_project_t)
+corenet_tcp_connect_boinc_port(boinc_project_t)
+corenet_tcp_sendrecv_boinc_port(boinc_project_t)
+
+files_dontaudit_search_home(boinc_project_t)
+
+optional_policy(`
+	java_exec(boinc_project_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/cachefilesd.fc refpolicy/cachefilesd.fc
--- refpolicy/cachefilesd.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/cachefilesd.fc	2012-09-27 20:03:30.383126498 +0200
@@ -0,0 +1,9 @@
+/etc/rc\.d/init\.d/cachefilesd	--	gen_context(system_u:object_r:cachefilesd_initrc_exec_t,s0)
+
+/sbin/cachefilesd	--	gen_context(system_u:object_r:cachefilesd_exec_t,s0)
+
+/usr/sbin/cachefilesd	--	gen_context(system_u:object_r:cachefilesd_exec_t,s0)
+
+/var/cache/fscache(/.*)?	gen_context(system_u:object_r:cachefilesd_cache_t,s0)
+
+/var/run/cachefilesd\.pid	--	gen_context(system_u:object_r:cachefilesd_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/cachefilesd.if refpolicy/cachefilesd.if
--- refpolicy/cachefilesd.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/cachefilesd.if	2012-09-27 20:03:30.383126498 +0200
@@ -0,0 +1,39 @@
+## <summary>CacheFiles user-space management daemon.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an cachefilesd environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`cachefilesd_admin',`
+	gen_require(`
+		type cachefilesd_t, cachefilesd_initrc_exec_t, cachefilesd_cache_t;
+		type cachefilesd_var_run_t;
+	')
+
+	allow $1 cachefilesd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, cachefilesd_t)
+
+	init_labeled_script_domtrans($1, cachefilesd_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 cachefilesd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_var($1)
+	admin_pattern($1, cachefilesd_cache_t)
+
+	files_search_pids($1)
+	admin_pattern($1, cachefilesd_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/cachefilesd.te refpolicy/cachefilesd.te
--- refpolicy/cachefilesd.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/cachefilesd.te	2012-09-27 20:03:30.383126498 +0200
@@ -0,0 +1,52 @@
+policy_module(cachefilesd, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type cachefilesd_t;
+type cachefilesd_exec_t;
+init_daemon_domain(cachefilesd_t, cachefilesd_exec_t)
+
+type cachefilesd_initrc_exec_t;
+init_script_file(cachefilesd_initrc_exec_t)
+
+type cachefilesd_cache_t;
+files_type(cachefilesd_cache_t)
+
+type cachefilesd_var_run_t;
+files_pid_file(cachefilesd_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow cachefilesd_t self:capability { setuid setgid sys_admin dac_override };
+
+manage_files_pattern(cachefilesd_t, cachefilesd_var_run_t, cachefilesd_var_run_t)
+files_pid_filetrans(cachefilesd_t, cachefilesd_var_run_t, file)
+
+manage_dirs_pattern(cachefilesd_t, cachefilesd_cache_t, cachefilesd_cache_t)
+manage_files_pattern(cachefilesd_t, cachefilesd_cache_t, cachefilesd_cache_t)
+
+# dev_rw_cachefiles(cachefilesd_t)
+
+# files_create_all_files_as(cachefilesd_t)
+files_read_etc_files(cachefilesd_t)
+
+fs_getattr_xattr_fs(cachefilesd_t)
+
+term_dontaudit_use_generic_ptys(cachefilesd_t)
+term_dontaudit_getattr_unallocated_ttys(cachefilesd_t)
+
+logging_send_syslog_msg(cachefilesd_t)
+
+miscfiles_read_localization(cachefilesd_t)
+
+init_dontaudit_use_script_ptys(cachefilesd_t)
+
+optional_policy(`
+	rpm_use_script_fds(cachefilesd_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/callweaver.fc refpolicy/callweaver.fc
--- refpolicy/callweaver.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/callweaver.fc	2012-09-27 20:03:30.383126498 +0200
@@ -0,0 +1,11 @@
+/etc/rc\.d/init\.d/callweaver	--	gen_context(system_u:object_r:callweaver_initrc_exec_t,s0)
+
+/usr/sbin/callweaver	--	gen_context(system_u:object_r:callweaver_exec_t,s0)
+
+/var/lib/callweaver(/.*)?	gen_context(system_u:object_r:callweaver_var_lib_t,s0)
+
+/var/log/callweaver(/.*)?	gen_context(system_u:object_r:callweaver_log_t,s0)
+
+/var/run/callweaver(/.*)?	gen_context(system_u:object_r:callweaver_var_run_t,s0)
+
+/var/spool/callweaver(/.*)?	gen_context(system_u:object_r:callweaver_spool_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/callweaver.if refpolicy/callweaver.if
--- refpolicy/callweaver.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/callweaver.if	2012-09-27 20:03:30.383126498 +0200
@@ -0,0 +1,42 @@
+## <summary>PBX software.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an callweaver environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`callweaver_admin',`
+	gen_require(`
+		type callweaver_t, callweaver_initrc_exec_t, callweaver_log_t;
+		type callweaver_var_lib_t, callweaver_var_run_t, callweaver_spool_t;
+	')
+
+	allow $1 callweaver_t:process { ptrace signal_perms };
+	ps_process_pattern($1, callweaver_t)
+
+	init_labeled_script_domtrans($1, callweaver_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 callweaver_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, callweaver_log_t)
+
+	files_search_pids($1)
+	admin_pattern($1, callweaver_var_run_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, { callweaver_spool_t callweaver_var_lib_t })
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/callweaver.te refpolicy/callweaver.te
--- refpolicy/callweaver.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/callweaver.te	2012-09-27 20:03:30.383126498 +0200
@@ -0,0 +1,91 @@
+policy_module(callweaver, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type callweaver_t;
+type callweaver_exec_t;
+init_daemon_domain(callweaver_t, callweaver_exec_t)
+
+type callweaver_initrc_exec_t;
+init_script_file(callweaver_initrc_exec_t)
+
+type callweaver_log_t;
+logging_log_file(callweaver_log_t)
+
+type callweaver_var_lib_t;
+files_type(callweaver_var_lib_t)
+
+type callweaver_var_run_t;
+files_pid_file(callweaver_var_run_t)
+
+type callweaver_spool_t;
+files_type(callweaver_spool_t)
+
+########################################
+#
+# Local policy
+#
+
+allow callweaver_t self:capability { setuid sys_nice setgid };
+allow callweaver_t self:process { setsched signal };
+allow callweaver_t self:fifo_file rw_fifo_file_perms;
+allow callweaver_t self:tcp_socket { accept listen };
+allow callweaver_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(callweaver_t, callweaver_log_t, callweaver_log_t)
+append_files_pattern(callweaver_t, callweaver_log_t, callweaver_log_t)
+create_files_pattern(callweaver_t, callweaver_log_t, callweaver_log_t)
+setattr_files_pattern(callweaver_t, callweaver_log_t, callweaver_log_t)
+logging_log_filetrans(callweaver_t, callweaver_log_t, { dir file })
+
+manage_dirs_pattern(callweaver_t, callweaver_var_lib_t, callweaver_var_lib_t)
+manage_files_pattern(callweaver_t, callweaver_var_lib_t, callweaver_var_lib_t)
+files_var_lib_filetrans(callweaver_t, callweaver_var_lib_t, { dir file })
+
+manage_dirs_pattern(callweaver_t, callweaver_var_run_t, callweaver_var_run_t)
+manage_files_pattern(callweaver_t, callweaver_var_run_t, callweaver_var_run_t)
+manage_sock_files_pattern(callweaver_t, callweaver_var_run_t, callweaver_var_run_t)
+files_pid_filetrans(callweaver_t, callweaver_var_run_t, { dir file sock_file })
+
+manage_dirs_pattern(callweaver_t, callweaver_spool_t, callweaver_spool_t)
+manage_files_pattern(callweaver_t, callweaver_spool_t, callweaver_spool_t)
+manage_lnk_files_pattern(callweaver_t, callweaver_spool_t, callweaver_spool_t)
+files_spool_filetrans(callweaver_t, callweaver_spool_t, { dir file })
+
+kernel_read_kernel_sysctls(callweaver_t)
+kernel_read_sysctl(callweaver_t)
+
+corenet_all_recvfrom_unlabeled(callweaver_t)
+corenet_all_recvfrom_netlabel(callweaver_t)
+corenet_tcp_sendrecv_generic_if(callweaver_t)
+corenet_udp_sendrecv_generic_if(callweaver_t)
+corenet_tcp_sendrecv_generic_node(callweaver_t)
+corenet_udp_sendrecv_generic_node(callweaver_t)
+corenet_tcp_sendrecv_all_ports(callweaver_t)
+corenet_udp_sendrecv_all_ports(callweaver_t)
+corenet_tcp_bind_generic_node(callweaver_t)
+corenet_udp_bind_generic_node(callweaver_t)
+
+corenet_sendrecv_asterisk_server_packets(callweaver_t)
+corenet_udp_bind_asterisk_port(callweaver_t)
+
+corenet_sendrecv_generic_server_packets(callweaver_t)
+corenet_udp_bind_generic_port(callweaver_t)
+
+corenet_sendrecv_sip_server_packets(callweaver_t)
+corenet_udp_bind_sip_port(callweaver_t)
+
+dev_manage_generic_symlinks(callweaver_t)
+
+domain_use_interactive_fds(callweaver_t)
+
+term_getattr_pty_fs(callweaver_t)
+term_use_generic_ptys(callweaver_t)
+term_use_ptmx(callweaver_t)
+
+auth_use_nsswitch(callweaver_t)
+
+miscfiles_read_localization(callweaver_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/cfengine.fc refpolicy/cfengine.fc
--- refpolicy/cfengine.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/cfengine.fc	2012-09-27 20:03:30.383126498 +0200
@@ -0,0 +1,10 @@
+/etc/rc\.d/init\.d/((cf-serverd)|(cf-monitord)|(cf-execd))	--	gen_context(system_u:object_r:cfengine_initrc_exec_t,s0)
+
+/usr/sbin/cf-serverd	--	gen_context(system_u:object_r:cfengine_serverd_exec_t,s0)
+/usr/sbin/cf-execd	--	gen_context(system_u:object_r:cfengine_execd_exec_t,s0)
+/usr/sbin/cf-monitord	--	gen_context(system_u:object_r:cfengine_monitord_exec_t,s0)
+
+/var/cfengine(/.*)?	gen_context(system_u:object_r:cfengine_var_lib_t,s0)
+# remove comment as soon as existing conflicting file context spec for this location
+# is removed from the logging module
+# /var/cfengine/outputs(/.*)?	gen_context(system_u:object_r:cfengine_log_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/cfengine.if refpolicy/cfengine.if
--- refpolicy/cfengine.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/cfengine.if	2012-09-27 20:03:30.384126498 +0200
@@ -0,0 +1,99 @@
+## <summary>System administration tool for networks.</summary>
+
+#######################################
+## <summary>
+##	The template to define a cfengine domain.
+## </summary>
+## <param name="domain_prefix">
+##	<summary>
+##	Domain prefix to be used.
+##	</summary>
+## </param>
+#
+template(`cfengine_domain_template',`
+	gen_require(`
+		attribute cfengine_domain;
+		type cfengine_log_t, cfengine_var_lib_t;
+	')
+
+	########################################
+	#
+	# Shared declarations
+	#
+
+	type cfengine_$1_t, cfengine_domain;
+	type cfengine_$1_exec_t;
+	init_daemon_domain(cfengine_$1_t, cfengine_$1_exec_t)
+
+	########################################
+	#
+	# Shared policy
+	#
+
+	allow cfengine_$1_t self:capability { chown kill setgid setuid sys_chroot };
+	allow cfengine_$1_t self:process { setfscreate signal };
+	allow cfengine_$1_t self:fifo_file rw_fifo_file_perms;
+	allow cfengine_$1_t self:unix_stream_socket { accept listen };
+
+	manage_dirs_pattern(cfengine_$1_t, cfengine_var_lib_t, cfengine_var_lib_t)
+	manage_files_pattern(cfengine_$1_t, cfengine_var_lib_t, cfengine_var_lib_t)
+	manage_lnk_files_pattern(cfengine_$1_t, cfengine_var_lib_t, cfengine_var_lib_t)
+	files_var_lib_filetrans(cfengine_$1_t, cfengine_var_lib_t, dir)
+
+	manage_dirs_pattern(cfengine_$1_t, cfengine_log_t, cfengine_log_t)
+	append_files_pattern(cfengine_$1_t, cfengine_log_t, cfengine_log_t)
+	create_files_pattern(cfengine_$1_t, cfengine_log_t, cfengine_log_t)
+	setattr_files_pattern(cfengine_$1_t, cfengine_log_t, cfengine_log_t)
+	logging_log_filetrans(cfengine_$1_t, cfengine_log_t, dir)
+
+	kernel_read_system_state(cfengine_$1_t)
+
+	corecmd_exec_bin(cfengine_$1_t)
+	corecmd_exec_shell(cfengine_$1_t)
+
+	dev_read_urand(cfengine_$1_t)
+	dev_read_sysfs(cfengine_$1_t)
+
+	auth_use_nsswitch(cfengine_$1_t)
+
+	logging_send_syslog_msg(cfengine_$1_t)
+
+	miscfiles_read_localization(cfengine_$1_t)
+
+	sysnet_domtrans_ifconfig(cfengine_$1_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an cfengine environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`cfengine_admin',`
+	gen_require(`
+		attribute cfengine_domain;
+		type cfengine_initrc_exec_t, cfengine_log_t, cfengine_var_lib_t;
+	')
+
+	allow $1 cfengine_domain:process { ptrace signal_perms };
+	ps_process_pattern($1, cfengine_domain)
+
+	init_labeled_script_domtrans($1, cfengine_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 cfengine_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_var_lib($1)
+	admin_pattern($1, { cfengine_log_t cfengine_var_lib_t })
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/cfengine.te refpolicy/cfengine.te
--- refpolicy/cfengine.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/cfengine.te	2012-09-27 20:03:30.384126498 +0200
@@ -0,0 +1,42 @@
+policy_module(cfengine, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+attribute cfengine_domain;
+
+cfengine_domain_template(serverd)
+cfengine_domain_template(execd)
+cfengine_domain_template(monitord)
+
+type cfengine_initrc_exec_t;
+init_script_file(cfengine_initrc_exec_t)
+
+type cfengine_var_lib_t;
+files_type(cfengine_var_lib_t)
+
+type cfengine_log_t;
+logging_log_file(cfengine_log_t)
+
+########################################
+#
+# Exec local policy
+#
+
+kernel_read_sysctl(cfengine_execd_t)
+
+domain_read_all_domains_state(cfengine_execd_t)
+
+########################################
+#
+# Monitord local policy
+#
+
+kernel_read_hotplug_sysctls(cfengine_monitord_t)
+kernel_read_network_state(cfengine_monitord_t)
+
+domain_read_all_domains_state(cfengine_monitord_t)
+
+fs_getattr_xattr_fs(cfengine_monitord_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/collectd.fc refpolicy/collectd.fc
--- refpolicy/collectd.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/collectd.fc	2012-09-27 20:03:30.384126498 +0200
@@ -0,0 +1,9 @@
+/etc/rc\.d/init\.d/collectd	--	gen_context(system_u:object_r:collectd_initrc_exec_t,s0)
+
+/usr/sbin/collectd	--	gen_context(system_u:object_r:collectd_exec_t,s0)
+
+/var/lib/collectd(/.*)?	gen_context(system_u:object_r:collectd_var_lib_t,s0)
+
+/var/run/collectd\.pid	--	gen_context(system_u:object_r:collectd_var_run_t,s0)
+
+/usr/share/collectd/collection3/bin/.*\.cgi	--	gen_context(system_u:object_r:httpd_collectd_script_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/collectd.if refpolicy/collectd.if
--- refpolicy/collectd.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/collectd.if	2012-09-27 20:03:30.384126498 +0200
@@ -0,0 +1,39 @@
+## <summary>Statistics collection daemon for filling RRD files.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an collectd environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`collectd_admin',`
+	gen_require(`
+		type collectd_t, collectd_initrc_exec_t, collectd_var_run_t;
+		type collectd_var_lib_t;
+	')
+
+	allow $1 collectd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, collectd_t)
+
+	init_labeled_script_domtrans($1, collectd_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 collectd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_pids($1)
+	admin_pattern($1, collectd_var_run_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, collectd_var_lib_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/collectd.te refpolicy/collectd.te
--- refpolicy/collectd.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/collectd.te	2012-09-27 20:03:30.384126498 +0200
@@ -0,0 +1,90 @@
+policy_module(collectd, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+## <desc>
+##	<p>
+##	Determine whether collectd can connect
+##	to the network using TCP.
+##	</p>
+## </desc>
+gen_tunable(collectd_tcp_network_connect, false)
+
+type collectd_t;
+type collectd_exec_t;
+init_daemon_domain(collectd_t, collectd_exec_t)
+
+type collectd_initrc_exec_t;
+init_script_file(collectd_initrc_exec_t)
+
+type collectd_var_lib_t;
+files_type(collectd_var_lib_t)
+
+type collectd_var_run_t;
+files_pid_file(collectd_var_run_t)
+
+apache_content_template(collectd)
+
+########################################
+#
+# Local policy
+#
+
+allow collectd_t self:capability { ipc_lock sys_nice };
+allow collectd_t self:process { getsched setsched signal };
+allow collectd_t self:fifo_file rw_fifo_file_perms;
+allow collectd_t self:packet_socket create_socket_perms;
+allow collectd_t self:unix_stream_socket { accept listen };
+
+manage_dirs_pattern(collectd_t, collectd_var_lib_t, collectd_var_lib_t)
+manage_files_pattern(collectd_t, collectd_var_lib_t, collectd_var_lib_t)
+files_var_lib_filetrans(collectd_t, collectd_var_lib_t, dir)
+
+manage_files_pattern(collectd_t, collectd_var_run_t, collectd_var_run_t)
+files_pid_filetrans(collectd_t, collectd_var_run_t, file)
+
+domain_use_interactive_fds(collectd_t)
+
+kernel_read_network_state(collectd_t)
+kernel_read_net_sysctls(collectd_t)
+kernel_read_system_state(collectd_t)
+
+dev_read_rand(collectd_t)
+dev_read_sysfs(collectd_t)
+dev_read_urand(collectd_t)
+
+files_getattr_all_dirs(collectd_t)
+files_read_etc_files(collectd_t)
+files_read_usr_files(collectd_t)
+
+fs_getattr_all_fs(collectd_t)
+
+miscfiles_read_localization(collectd_t)
+
+logging_send_syslog_msg(collectd_t)
+
+sysnet_dns_name_resolve(collectd_t)
+
+tunable_policy(`collectd_tcp_network_connect',`
+	corenet_sendrecv_all_client_packets(collectd_t)
+	corenet_tcp_connect_all_ports(collectd_t)
+	corenet_tcp_sendrecv_all_ports(collectd_t)
+')
+
+optional_policy(`
+	virt_read_config(collectd_t)
+')
+
+########################################
+#
+# Web local policy
+#
+
+optional_policy(`
+	read_files_pattern(httpd_collectd_script_t, collectd_var_lib_t, collectd_var_lib_t)
+	list_dirs_pattern(httpd_collectd_script_t, collectd_var_lib_t, collectd_var_lib_t)
+	miscfiles_setattr_fonts_cache_dirs(httpd_collectd_script_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/config/file_contexts.subs_dist refpolicy/config/file_contexts.subs_dist
--- refpolicy/config/file_contexts.subs_dist	2012-03-30 14:48:20.000000000 +0200
+++ refpolicy/config/file_contexts.subs_dist	2012-08-15 10:07:50.028520056 +0200
@@ -1,7 +1,11 @@
+/etc/init.d /etc/rc.d/init.d
 /lib32 /lib
 /lib64 /lib
 /run /var/run
 /run/lock /var/lock
 /usr/lib32 /usr/lib
 /usr/lib64 /usr/lib
+/usr/local/lib64 /usr/lib
+/usr/local/lib32 /usr/lib
+/usr/local/lib/ /usr/lib/
 /var/run/lock /var/lock
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/couchdb.fc refpolicy/couchdb.fc
--- refpolicy/couchdb.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/couchdb.fc	2012-09-27 20:03:30.384126498 +0200
@@ -0,0 +1,11 @@
+/etc/couchdb(/.*)?	gen_context(system_u:object_r:couchdb_conf_t,s0)
+
+/etc/rc\.d/init\.d/couchdb	--	gen_context(system_u:object_r:couchdb_initrc_exec_t,s0)
+
+/usr/bin/couchdb	--	gen_context(system_u:object_r:couchdb_exec_t,s0)
+
+/var/lib/couchdb(/.*)?	gen_context(system_u:object_r:couchdb_var_lib_t,s0)
+
+/var/log/couchdb(/.*)?	gen_context(system_u:object_r:couchdb_log_t,s0)
+
+/var/run/couchdb(/.*)?	gen_context(system_u:object_r:couchdb_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/couchdb.if refpolicy/couchdb.if
--- refpolicy/couchdb.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/couchdb.if	2012-09-27 20:03:30.384126498 +0200
@@ -0,0 +1,49 @@
+## <summary>Document database server.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an couchdb environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`couchdb_admin',`
+	gen_require(`
+		type couchdb_t, couchdb_conf_t, couchdb_initrc_exec_t;
+		type couchdb_log_t, couchdb_var_lib_t, couchdb_var_run_t;
+		type couchdb_tmp_t;
+	')
+
+	allow $1 couchdb_t:process { ptrace signal_perms };
+	ps_process_pattern($1, couchdb_t)
+
+	init_labeled_script_domtrans($1, couchdb_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 couchdb_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_etc($1)
+	admin_pattern($1, couchdb_conf_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, couchdb_log_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, couchdb_tmp_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, couchdb_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, couchdb_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/couchdb.te refpolicy/couchdb.te
--- refpolicy/couchdb.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/couchdb.te	2012-09-27 20:03:30.384126498 +0200
@@ -0,0 +1,88 @@
+policy_module(couchdb, 1.0.2)
+
+########################################
+#
+# Declarations
+#
+
+type couchdb_t;
+type couchdb_exec_t;
+init_daemon_domain(couchdb_t, couchdb_exec_t)
+
+type couchdb_initrc_exec_t;
+init_script_file(couchdb_initrc_exec_t)
+
+type couchdb_conf_t;
+files_config_file(couchdb_conf_t)
+
+type couchdb_log_t;
+logging_log_file(couchdb_log_t)
+
+type couchdb_tmp_t;
+files_tmp_file(couchdb_tmp_t)
+
+type couchdb_var_lib_t;
+files_type(couchdb_var_lib_t)
+
+type couchdb_var_run_t;
+files_pid_file(couchdb_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow couchdb_t self:process { setsched signal signull sigkill };
+allow couchdb_t self:fifo_file rw_fifo_file_perms;
+allow couchdb_t self:unix_stream_socket create_stream_socket_perms;
+allow couchdb_t self:tcp_socket { accept listen };
+
+allow couchdb_t couchdb_conf_t:dir list_dir_perms;
+allow couchdb_t couchdb_conf_t:file read_file_perms;
+
+manage_dirs_pattern(couchdb_t, couchdb_log_t, couchdb_log_t)
+append_files_pattern(couchdb_t, couchdb_log_t, couchdb_log_t)
+create_files_pattern(couchdb_t, couchdb_log_t, couchdb_log_t)
+setattr_files_pattern(couchdb_t, couchdb_log_t, couchdb_log_t)
+logging_log_filetrans(couchdb_t, couchdb_log_t, dir)
+
+manage_dirs_pattern(couchdb_t, couchdb_tmp_t, couchdb_tmp_t)
+manage_files_pattern(couchdb_t, couchdb_tmp_t, couchdb_tmp_t)
+files_tmp_filetrans(couchdb_t, couchdb_tmp_t, { dir file })
+
+manage_dirs_pattern(couchdb_t, couchdb_var_lib_t, couchdb_var_lib_t)
+manage_files_pattern(couchdb_t, couchdb_var_lib_t, couchdb_var_lib_t)
+files_var_lib_filetrans(couchdb_t, couchdb_var_lib_t, dir)
+
+manage_dirs_pattern(couchdb_t, couchdb_var_run_t, couchdb_var_run_t)
+manage_files_pattern(couchdb_t, couchdb_var_run_t, couchdb_var_run_t)
+files_pid_filetrans(couchdb_t, couchdb_var_run_t, dir)
+
+can_exec(couchdb_t, couchdb_exec_t)
+
+kernel_read_system_state(couchdb_t)
+
+corecmd_exec_bin(couchdb_t)
+corecmd_exec_shell(couchdb_t)
+
+corenet_all_recvfrom_unlabeled(couchdb_t)
+corenet_all_recvfrom_netlabel(couchdb_t)
+corenet_tcp_sendrecv_generic_if(couchdb_t)
+corenet_tcp_sendrecv_generic_node(couchdb_t)
+corenet_tcp_bind_generic_node(couchdb_t)
+
+corenet_sendrecv_couchdb_server_packets(couchdb_t)
+corenet_tcp_bind_couchdb_port(couchdb_t)
+corenet_tcp_sendrecv_couchdb_port(couchdb_t)
+
+dev_list_sysfs(couchdb_t)
+dev_read_sysfs(couchdb_t)
+dev_read_urand(couchdb_t)
+
+files_read_usr_files(couchdb_t)
+
+fs_getattr_xattr_fs(couchdb_t)
+
+auth_use_nsswitch(couchdb_t)
+
+miscfiles_read_localization(couchdb_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/ctdb.fc refpolicy/ctdb.fc
--- refpolicy/ctdb.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/ctdb.fc	2012-09-27 20:03:30.384126498 +0200
@@ -0,0 +1,11 @@
+/etc/rc\.d/init\.d/ctdb	--	gen_context(system_u:object_r:ctdbd_initrc_exec_t,s0)
+
+/usr/sbin/ctdbd	--	gen_context(system_u:object_r:ctdbd_exec_t,s0)
+
+/var/lib/ctdbd(/.*)?	gen_context(system_u:object_r:ctdbd_var_lib_t,s0)
+
+/var/log/log\.ctdb.*	--	gen_context(system_u:object_r:ctdbd_log_t,s0)
+
+/var/run/ctdbd(/.*)?	gen_context(system_u:object_r:ctdbd_var_run_t,s0)
+
+/var/spool/ctdb(/.*)?	gen_context(system_u:object_r:ctdbd_spool_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/ctdb.if refpolicy/ctdb.if
--- refpolicy/ctdb.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/ctdb.if	2012-09-27 20:03:30.384126498 +0200
@@ -0,0 +1,45 @@
+## <summary>Clustered Database based on Samba Trivial Database.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an ctdb environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`ctdb_admin',`
+	gen_require(`
+		type ctdbd_t, ctdbd_initrc_exec_t, ctdbd_tmp_t;
+		type ctdbd_log_t, ctdbd_var_lib_t, ctdbd_var_run_t;
+	')
+
+	allow $1 ctdbd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, ctdbd_t)
+
+	init_labeled_script_domtrans($1, ctdbd_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 ctdbd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, ctdbd_log_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, ctdbd_tmp_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, ctdbd_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, ctdbd_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/ctdb.te refpolicy/ctdb.te
--- refpolicy/ctdb.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/ctdb.te	2012-09-27 20:03:30.384126498 +0200
@@ -0,0 +1,116 @@
+policy_module(ctdb, 1.0.1)
+
+########################################
+#
+# Declarations
+#
+
+type ctdbd_t;
+type ctdbd_exec_t;
+init_daemon_domain(ctdbd_t, ctdbd_exec_t)
+
+type ctdbd_initrc_exec_t;
+init_script_file(ctdbd_initrc_exec_t)
+
+type ctdbd_log_t;
+logging_log_file(ctdbd_log_t)
+
+type ctdbd_spool_t;
+files_type(ctdbd_spool_t)
+
+type ctdbd_tmp_t;
+files_tmp_file(ctdbd_tmp_t)
+
+type ctdbd_var_lib_t;
+files_type(ctdbd_var_lib_t)
+
+type ctdbd_var_run_t;
+files_pid_file(ctdbd_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow ctdbd_t self:capability { chown ipc_lock net_admin net_raw sys_nice };
+allow ctdbd_t self:process { setpgid signal_perms setsched };
+allow ctdbd_t self:fifo_file rw_fifo_file_perms;
+allow ctdbd_t self:unix_stream_socket { accept connectto listen };
+allow ctdbd_t self:netlink_route_socket r_netlink_socket_perms;
+allow ctdbd_t self:packet_socket create_socket_perms;
+allow ctdbd_t self:tcp_socket create_stream_socket_perms;
+
+append_files_pattern(ctdbd_t, ctdbd_log_t, ctdbd_log_t)
+create_files_pattern(ctdbd_t, ctdbd_log_t, ctdbd_log_t)
+setattr_files_pattern(ctdbd_t, ctdbd_log_t, ctdbd_log_t)
+logging_log_filetrans(ctdbd_t, ctdbd_log_t, file)
+
+manage_files_pattern(ctdbd_t, ctdbd_tmp_t, ctdbd_tmp_t)
+manage_sock_files_pattern(ctdbd_t, ctdbd_tmp_t, ctdbd_tmp_t)
+files_tmp_filetrans(ctdbd_t, ctdbd_tmp_t, { file sock_file })
+
+manage_dirs_pattern(ctdbd_t, ctdbd_spool_t, ctdbd_spool_t)
+manage_files_pattern(ctdbd_t, ctdbd_spool_t, ctdbd_spool_t)
+manage_lnk_files_pattern(ctdbd_t, ctdbd_spool_t, ctdbd_spool_t)
+files_spool_filetrans(ctdbd_t, ctdbd_spool_t, dir)
+
+exec_files_pattern(ctdbd_t, ctdbd_var_lib_t, ctdbd_var_lib_t)
+manage_dirs_pattern(ctdbd_t, ctdbd_var_lib_t, ctdbd_var_lib_t)
+manage_files_pattern(ctdbd_t, ctdbd_var_lib_t, ctdbd_var_lib_t)
+files_var_lib_filetrans(ctdbd_t, ctdbd_var_lib_t, dir)
+
+manage_dirs_pattern(ctdbd_t, ctdbd_var_run_t, ctdbd_var_run_t)
+manage_files_pattern(ctdbd_t, ctdbd_var_run_t, ctdbd_var_run_t)
+files_pid_filetrans(ctdbd_t, ctdbd_var_run_t, dir)
+
+kernel_read_network_state(ctdbd_t)
+kernel_read_system_state(ctdbd_t)
+kernel_rw_net_sysctls(ctdbd_t)
+
+corenet_all_recvfrom_unlabeled(ctdbd_t)
+corenet_all_recvfrom_netlabel(ctdbd_t)
+corenet_tcp_sendrecv_generic_if(ctdbd_t)
+corenet_tcp_sendrecv_generic_node(ctdbd_t)
+corenet_tcp_bind_generic_node(ctdbd_t)
+
+corenet_sendrecv_ctdb_server_packets(ctdbd_t)
+corenet_tcp_bind_ctdb_port(ctdbd_t)
+corenet_tcp_sendrecv_ctdb_port(ctdbd_t)
+
+corecmd_exec_bin(ctdbd_t)
+corecmd_exec_shell(ctdbd_t)
+
+dev_read_sysfs(ctdbd_t)
+dev_read_urand(ctdbd_t)
+
+domain_dontaudit_read_all_domains_state(ctdbd_t)
+
+files_read_etc_files(ctdbd_t)
+files_search_all_mountpoints(ctdbd_t)
+
+logging_send_syslog_msg(ctdbd_t)
+
+miscfiles_read_localization(ctdbd_t)
+miscfiles_read_public_files(ctdbd_t)
+
+optional_policy(`
+	consoletype_exec(ctdbd_t)
+')
+
+optional_policy(`
+	hostname_exec(ctdbd_t)
+')
+
+optional_policy(`
+	iptables_domtrans(ctdbd_t)
+')
+
+optional_policy(`
+	samba_initrc_domtrans(ctdbd_t)
+	samba_domtrans_net(ctdbd_t)
+	samba_rw_var_files(ctdbd_t)
+')
+
+optional_policy(`
+	sysnet_domtrans_ifconfig(ctdbd_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/dnssectrigger.fc refpolicy/dnssectrigger.fc
--- refpolicy/dnssectrigger.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/dnssectrigger.fc	2012-09-27 20:03:30.385126498 +0200
@@ -0,0 +1,9 @@
+/etc/dnssec-trigger/dnssec-trigger\.conf	--	gen_context(system_u:object_r:dnssec_trigger_conf_t,s0)
+
+/etc/rc\.d/init\.d/dnssec-triggerd	--	gen_context(system_u:object_r:dnssec_triggerd_initrc_exec_t,s0)
+
+/usr/sbin/dnssec-triggerd	--	gen_context(system_u:object_r:dnssec_triggerd_exec_t,s0)
+
+/var/log/dnssec-trigger\.log.*	--	gen_context(system_u:object_r:dnssec_trigger_log_t,s0)
+
+/var/run/dnssec-triggerd\.pid	--	gen_context(system_u:object_r:dnssec_triggerd_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/dnssectrigger.if refpolicy/dnssectrigger.if
--- refpolicy/dnssectrigger.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/dnssectrigger.if	2012-09-27 20:03:30.385126498 +0200
@@ -0,0 +1,42 @@
+## <summary>Enables DNSSEC protection for DNS traffic.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an dnssec environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`dnssectrigger_admin',`
+	gen_require(`
+		type dnssec_triggerd_t, dnssec_triggerd_initrc_exec_t, dnssec_trigger_conf_t;
+		type dnssec_trigger_log_t, dnssec_triggerd_var_run_t;
+	')
+
+	allow $1 dnssec_triggerd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, dnssec_triggerd_t)
+
+	init_labeled_script_domtrans($1, dnssec_triggerd_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 dnssec_triggerd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_etc($1)
+	admin_pattern($1, dnssec_trigger_conf_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, dnssec_trigger_log_t)
+
+	files_search_pids($1)
+	admin_pattern($1, dnssec_triggerd_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/dnssectrigger.te refpolicy/dnssectrigger.te
--- refpolicy/dnssectrigger.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/dnssectrigger.te	2012-09-27 20:03:30.385126498 +0200
@@ -0,0 +1,79 @@
+policy_module(dnssectrigger, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type dnssec_triggerd_t;
+type dnssec_triggerd_exec_t;
+init_daemon_domain(dnssec_triggerd_t, dnssec_triggerd_exec_t)
+
+type dnssec_triggerd_initrc_exec_t;
+init_script_file(dnssec_triggerd_initrc_exec_t)
+
+type dnssec_trigger_conf_t;
+files_config_file(dnssec_trigger_conf_t)
+
+type dnssec_trigger_log_t;
+logging_log_file(dnssec_trigger_log_t)
+
+type dnssec_triggerd_var_run_t;
+files_pid_file(dnssec_triggerd_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow dnssec_triggerd_t self:capability linux_immutable;
+allow dnssec_triggerd_t self:process signal;
+allow dnssec_triggerd_t self:fifo_file rw_fifo_file_perms;
+allow dnssec_triggerd_t self:unix_stream_socket { accept listen };
+allow dnssec_triggerd_t self:tcp_socket create_stream_socket_perms;
+allow dnssec_triggerd_t self:udp_socket create_socket_perms;
+
+allow dnssec_triggerd_t dnssec_trigger_conf_t:file read_file_perms;
+
+append_files_pattern(dnssec_triggerd_t, dnssec_trigger_log_t, dnssec_trigger_log_t)
+create_files_pattern(dnssec_triggerd_t, dnssec_trigger_log_t, dnssec_trigger_log_t)
+setattr_files_pattern(dnssec_triggerd_t, dnssec_trigger_log_t, dnssec_trigger_log_t)
+logging_log_filetrans(dnssec_triggerd_t, dnssec_trigger_log_t, file)
+
+manage_files_pattern(dnssec_triggerd_t, dnssec_triggerd_var_run_t, dnssec_triggerd_var_run_t)
+files_pid_filetrans(dnssec_triggerd_t, dnssec_triggerd_var_run_t, file)
+
+kernel_read_system_state(dnssec_triggerd_t)
+
+corecmd_exec_bin(dnssec_triggerd_t)
+corecmd_exec_shell(dnssec_triggerd_t)
+
+corenet_all_recvfrom_unlabeled(dnssec_triggerd_t)
+corenet_all_recvfrom_netlabel(dnssec_triggerd_t)
+corenet_tcp_sendrecv_generic_if(dnssec_triggerd_t)
+corenet_tcp_sendrecv_generic_node(dnssec_triggerd_t)
+corenet_tcp_bind_generic_node(dnssec_triggerd_t)
+
+corenet_sendrecv_rndc_client_packets(dnssec_triggerd_t)
+corenet_tcp_connect_rndc_port(dnssec_triggerd_t)
+corenet_tcp_sendrecv_rndc_port(dnssec_triggerd_t)
+
+corenet_sendrecv_http_client_packets(dnssec_triggerd_t)
+corenet_tcp_connect_http_port(dnssec_triggerd_t)
+corenet_tcp_sendrecv_http_port(dnssec_triggerd_t)
+
+dev_read_urand(dnssec_triggerd_t)
+
+files_read_etc_runtime_files(dnssec_triggerd_t)
+
+logging_send_syslog_msg(dnssec_triggerd_t)
+
+miscfiles_read_localization(dnssec_triggerd_t)
+
+sysnet_dns_name_resolve(dnssec_triggerd_t)
+sysnet_manage_config(dnssec_triggerd_t)
+
+optional_policy(`
+	bind_read_config(dnssec_triggerd_t)
+	bind_read_dnssec_keys(dnssec_triggerd_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/isns.fc refpolicy/isns.fc
--- refpolicy/isns.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/isns.fc	2012-09-27 20:03:30.697126498 +0200
@@ -0,0 +1,8 @@
+/etc/rc\.d/init\.d/isnsd	--	gen_context(system_u:object_r:isnsd_initrc_exec_t,s0)
+
+/usr/sbin/isnsd	--	gen_context(system_u:object_r:isnsd_exec_t,s0)
+
+/var/lib/isns(/.*)?	gen_context(system_u:object_r:isnsd_var_lib_t,s0)
+
+/var/run/isnsd\.pid	--	gen_context(system_u:object_r:isnsd_var_run_t,s0)
+/var/run/isnsctl	-s	gen_context(system_u:object_r:isnsd_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/isns.if refpolicy/isns.if
--- refpolicy/isns.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/isns.if	2012-09-27 20:03:30.718126498 +0200
@@ -0,0 +1,39 @@
+## <summary>Internet Storage Name Service.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an isnsd environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`isnsd_admin',`
+	gen_require(`
+		type isnsd_t, isnsd_initrc_exec_t, isnsd_var_lib_t;
+		type isnsd_var_run_t;
+	')
+
+	allow $1 isnsd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, isnsd_t)
+
+	init_labeled_script_domtrans($1, isnsd_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 isnsd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_var_lib($1)
+	admin_pattern($1, isnsd_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, isnsd_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/isns.te refpolicy/isns.te
--- refpolicy/isns.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/isns.te	2012-09-27 20:03:30.718126498 +0200
@@ -0,0 +1,55 @@
+policy_module(isns, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type isnsd_t;
+type isnsd_exec_t;
+init_daemon_domain(isnsd_t, isnsd_exec_t)
+
+type isnsd_initrc_exec_t;
+init_script_file(isnsd_initrc_exec_t)
+
+type isnsd_var_lib_t;
+files_type(isnsd_var_lib_t)
+
+type isnsd_var_run_t;
+files_pid_file(isnsd_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow isnsd_t self:capability kill;
+allow isnsd_t self:process signal;
+allow isnsd_t self:fifo_file rw_fifo_file_perms;
+allow isnsd_t self:udp_socket { accept listen };
+allow isnsd_t self:unix_stream_socket { accept listen };
+
+manage_dirs_pattern(isnsd_t, isnsd_var_lib_t, isnsd_var_lib_t)
+manage_files_pattern(isnsd_t, isnsd_var_lib_t, isnsd_var_lib_t)
+files_var_lib_filetrans(isnsd_t, isnsd_var_lib_t, dir)
+
+manage_sock_files_pattern(isnsd_t, isnsd_var_run_t, isnsd_var_run_t)
+manage_files_pattern(isnsd_t, isnsd_var_run_t, isnsd_var_run_t)
+files_pid_filetrans(isnsd_t, isnsd_var_run_t, { file sock_file })
+
+corenet_all_recvfrom_unlabeled(isnsd_t)
+corenet_all_recvfrom_netlabel(isnsd_t)
+corenet_tcp_sendrecv_generic_if(isnsd_t)
+corenet_tcp_sendrecv_generic_node(isnsd_t)
+corenet_tcp_sendrecv_isns_port(isnsd_t)
+corenet_tcp_bind_generic_node(isnsd_t)
+corenet_sendrecv_isns_server_packets(isnsd_t)
+corenet_tcp_bind_isns_port(isnsd_t)
+
+files_read_etc_files(isnsd_t)
+
+logging_send_syslog_msg(isnsd_t)
+
+miscfiles_read_localization(isnsd_t)
+
+sysnet_dns_name_resolve(isnsd_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/keystone.fc refpolicy/keystone.fc
--- refpolicy/keystone.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/keystone.fc	2012-09-27 20:03:30.718126498 +0200
@@ -0,0 +1,7 @@
+/etc/rc\.d/init\.d/openstack-keystone	--	gen_context(system_u:object_r:keystone_initrc_exec_t,s0)
+
+/usr/bin/keystone-all	--	gen_context(system_u:object_r:keystone_exec_t,s0)
+
+/var/lib/keystone(/.*)?	gen_context(system_u:object_r:keystone_var_lib_t,s0)
+
+/var/log/keystone(/.*)?	gen_context(system_u:object_r:keystone_log_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/keystone.if refpolicy/keystone.if
--- refpolicy/keystone.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/keystone.if	2012-09-27 20:03:30.719126498 +0200
@@ -0,0 +1,42 @@
+## <summary>Python implementation of the OpenStack identity service API.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an keystone environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`keystone_admin',`
+	gen_require(`
+		type keystone_t, keystone_initrc_exec_t, keystone_log_t;
+		type keystone_var_lib_t, keystone_tmp_t;
+	')
+
+	allow $1 keystone_t:process { ptrace signal_perms };
+	ps_process_pattern($1, keystone_t)
+
+	init_labeled_script_domtrans($1, keystone_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 keystone_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, keystone_log_t)
+
+	files_search_var_lib($1
+	admin_pattern($1, keystone_var_lib_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, keystone_tmp_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/keystone.te refpolicy/keystone.te
--- refpolicy/keystone.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/keystone.te	2012-09-27 20:03:30.719126498 +0200
@@ -0,0 +1,76 @@
+policy_module(keystone, 1.0.1)
+
+########################################
+#
+# Declarations
+#
+
+type keystone_t;
+type keystone_exec_t;
+init_daemon_domain(keystone_t, keystone_exec_t)
+
+type keystone_initrc_exec_t;
+init_script_file(keystone_initrc_exec_t)
+
+type keystone_log_t;
+logging_log_file(keystone_log_t)
+
+type keystone_var_lib_t;
+files_type(keystone_var_lib_t)
+
+type keystone_tmp_t;
+files_tmp_file(keystone_tmp_t)
+
+########################################
+#
+# Local policy
+#
+
+allow keystone_t self:fifo_file rw_fifo_file_perms;
+allow keystone_t self:unix_stream_socket { accept listen };
+allow keystone_t self:tcp_socket { accept listen };
+
+manage_dirs_pattern(keystone_t, keystone_log_t, keystone_log_t)
+append_files_pattern(keystone_t, keystone_log_t, keystone_log_t)
+create_files_pattern(keystone_t, keystone_log_t, keystone_log_t)
+setattr_files_pattern(keystone_t, keystone_log_t, keystone_log_t)
+logging_log_filetrans(keystone_t, keystone_log_t, dir)
+
+manage_dirs_pattern(keystone_t, keystone_tmp_t, keystone_tmp_t)
+manage_files_pattern(keystone_t, keystone_tmp_t, keystone_tmp_t)
+manage_lnk_files_pattern(keystone_t, keystone_tmp_t, keystone_tmp_t)
+files_tmp_filetrans(keystone_t, keystone_tmp_t, { dir file lnk_file })
+
+manage_dirs_pattern(keystone_t, keystone_var_lib_t, keystone_var_lib_t)
+manage_files_pattern(keystone_t, keystone_var_lib_t, keystone_var_lib_t)
+files_var_lib_filetrans(keystone_t, keystone_var_lib_t, dir)
+
+can_exec(keystone_t, keystone_tmp_t)
+
+kernel_read_system_state(keystone_t)
+
+corecmd_exec_bin(keystone_t)
+corecmd_exec_shell(keystone_t)
+
+corenet_all_recvfrom_unlabeled(keystone_t)
+corenet_all_recvfrom_netlabel(keystone_t)
+corenet_tcp_sendrecv_generic_if(keystone_t)
+corenet_tcp_sendrecv_generic_node(keystone_t)
+corenet_tcp_bind_generic_node(keystone_t)
+
+corenet_sendrecv_commplex_main_server_packets(keystone_t)
+corenet_tcp_bind_commplex_main_port(keystone_t)
+corenet_tcp_sendrecv_commplex_main_port(keystone_t)
+
+files_read_usr_files(keystone_t)
+
+auth_use_pam(keystone_t)
+
+libs_exec_ldconfig(keystone_t)
+
+miscfiles_read_localization(keystone_t)
+
+optional_policy(`
+	mysql_stream_connect(keystone_t)
+	mysql_tcp_connect(keystone_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/l2tp.fc refpolicy/l2tp.fc
--- refpolicy/l2tp.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/l2tp.fc	2012-09-27 20:03:30.719126498 +0200
@@ -0,0 +1,11 @@
+/etc/.*l2tp(/.*)?	gen_context(system_u:object_r:l2tp_conf_t,s0)
+
+/etc/rc\.d/init\.d/.*l2tpd	--	gen_context(system_u:object_r:l2tpd_initrc_exec_t,s0)
+
+/etc/sysconfig/.*l2tpd	--	gen_context(system_u:object_r:l2tp_conf_t,s0)
+
+/usr/sbin/.*l2tpd	--	gen_context(system_u:object_r:l2tpd_exec_t,s0)
+
+/var/run/.*l2tpd(/.*)?	gen_context(system_u:object_r:l2tpd_var_run_t,s0)
+/var/run/prol2tpd\.ctl	-s	gen_context(system_u:object_r:l2tpd_var_run_t,s0)
+/var/run/.*l2tpd\.pid	--	gen_context(system_u:object_r:l2tpd_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/l2tp.if refpolicy/l2tp.if
--- refpolicy/l2tp.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/l2tp.if	2012-09-27 20:03:30.719126498 +0200
@@ -0,0 +1,42 @@
+## <summary>Layer 2 Tunneling Protocol.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an l2tp environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`l2tp_admin',`
+	gen_require(`
+		type l2tpd_t, l2tpd_initrc_exec_t, l2tpd_var_run_t;
+		type l2tp_conf_t, l2tpd_tmp_t;
+	')
+
+	allow $1 l2tpd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, l2tpd_t)
+
+	init_labeled_script_domtrans($1, l2tpd_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 l2tpd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_etc($1)
+	admin_pattern($1, l2tp_conf_t)
+
+	files_search_pids($1)
+	admin_pattern($1, l2tpd_var_run_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, l2tpd_tmp_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/l2tp.te refpolicy/l2tp.te
--- refpolicy/l2tp.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/l2tp.te	2012-09-27 20:03:30.719126498 +0200
@@ -0,0 +1,95 @@
+policy_module(l2tp, 1.0.1)
+
+########################################
+#
+# Declarations
+#
+
+type l2tpd_t;
+type l2tpd_exec_t;
+init_daemon_domain(l2tpd_t, l2tpd_exec_t)
+
+type l2tpd_initrc_exec_t;
+init_script_file(l2tpd_initrc_exec_t)
+
+type l2tp_conf_t;
+files_config_file(l2tp_conf_t)
+
+type l2tpd_tmp_t;
+files_tmp_file(l2tpd_tmp_t)
+
+type l2tpd_var_run_t;
+files_pid_file(l2tpd_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow l2tpd_t self:capability { net_admin net_bind_service };
+allow l2tpd_t self:process signal;
+allow l2tpd_t self:fifo_file rw_fifo_file_perms;
+allow l2tpd_t self:netlink_socket create_socket_perms;
+allow l2tpd_t self:rawip_socket create_socket_perms;
+allow l2tpd_t self:socket create_socket_perms;
+allow l2tpd_t self:tcp_socket create_stream_socket_perms;
+allow l2tpd_t self:unix_dgram_socket sendto;
+allow l2tpd_t self:unix_stream_socket { accept listen };
+
+read_files_pattern(l2tpd_t, l2tp_conf_t, l2tp_conf_t)
+
+manage_dirs_pattern(l2tpd_t, l2tpd_var_run_t, l2tpd_var_run_t)
+manage_files_pattern(l2tpd_t, l2tpd_var_run_t, l2tpd_var_run_t)
+manage_sock_files_pattern(l2tpd_t, l2tpd_var_run_t, l2tpd_var_run_t)
+manage_fifo_files_pattern(l2tpd_t, l2tpd_var_run_t, l2tpd_var_run_t)
+files_pid_filetrans(l2tpd_t, l2tpd_var_run_t, { dir file sock_file })
+
+manage_sock_files_pattern(l2tpd_t, l2tpd_tmp_t, l2tpd_tmp_t)
+files_tmp_filetrans(l2tpd_t, l2tpd_tmp_t, sock_file)
+
+corenet_all_recvfrom_unlabeled(l2tpd_t)
+corenet_all_recvfrom_netlabel(l2tpd_t)
+corenet_raw_sendrecv_generic_if(l2tpd_t)
+corenet_tcp_sendrecv_generic_if(l2tpd_t)
+corenet_udp_sendrecv_generic_if(l2tpd_t)
+corenet_raw_bind_generic_node(l2tpd_t)
+corenet_tcp_bind_generic_node(l2tpd_t)
+corenet_udp_bind_generic_node(l2tpd_t)
+corenet_raw_sendrecv_generic_node(l2tpd_t)
+corenet_tcp_sendrecv_generic_node(l2tpd_t)
+corenet_udp_sendrecv_generic_node(l2tpd_t)
+corenet_tcp_sendrecv_all_ports(l2tpd_t)
+corenet_udp_sendrecv_all_ports(l2tpd_t)
+
+corenet_sendrecv_all_server_packets(l2tpd_t)
+corenet_tcp_bind_all_rpc_ports(l2tpd_t)
+corenet_udp_bind_all_rpc_ports(l2tpd_t)
+
+corenet_udp_bind_l2tp_port(l2tpd_t)
+
+kernel_read_network_state(l2tpd_t)
+kernel_read_system_state(l2tpd_t)
+# net-pf-24 (pppox)
+kernel_request_load_module(l2tpd_t)
+
+# prol2tpc
+corecmd_exec_bin(l2tpd_t)
+
+dev_read_urand(l2tpd_t)
+
+files_read_etc_files(l2tpd_t)
+
+term_use_generic_ptys(l2tpd_t)
+term_use_ptmx(l2tpd_t)
+
+logging_send_syslog_msg(l2tpd_t)
+
+miscfiles_read_localization(l2tpd_t)
+
+sysnet_dns_name_resolve(l2tpd_t)
+
+optional_policy(`
+	ppp_domtrans(l2tpd_t)
+	ppp_signal(l2tpd_t)
+	ppp_kill(l2tpd_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/man2html.fc refpolicy/man2html.fc
--- refpolicy/man2html.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/man2html.fc	2012-09-27 20:03:30.719126498 +0200
@@ -0,0 +1,5 @@
+/usr/lib/man2html/cgi-bin/man/man2html	--	gen_context(system_u:object_r:httpd_man2html_script_exec_t,s0)
+/usr/lib/man2html/cgi-bin/man/mansec	--	gen_context(system_u:object_r:httpd_man2html_script_exec_t,s0)
+/usr/lib/man2html/cgi-bin/man/manwhatis	--	gen_context(system_u:object_r:httpd_man2html_script_exec_t,s0)
+
+/var/cache/man2html(/.*)?	gen_context(system_u:object_r:httpd_man2html_script_cache_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/man2html.if refpolicy/man2html.if
--- refpolicy/man2html.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/man2html.if	2012-09-27 20:03:30.719126498 +0200
@@ -0,0 +1 @@
+## <summary>A Unix manpage-to-HTML converter.</summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/man2html.te refpolicy/man2html.te
--- refpolicy/man2html.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/man2html.te	2012-09-27 20:03:30.719126498 +0200
@@ -0,0 +1,26 @@
+policy_module(man2html, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+apache_content_template(man2html)
+
+type httpd_man2html_script_cache_t;
+files_type(httpd_man2html_script_cache_t)
+
+########################################
+#
+# Local policy
+#
+
+manage_dirs_pattern(httpd_man2html_script_t, httpd_man2html_script_cache_t, httpd_man2html_script_cache_t)
+manage_files_pattern(httpd_man2html_script_t, httpd_man2html_script_cache_t, httpd_man2html_script_cache_t)
+manage_lnk_files_pattern(httpd_man2html_script_t, httpd_man2html_script_cache_t, httpd_man2html_script_cache_t)
+files_var_filetrans(httpd_man2html_script_t, httpd_man2html_script_cache_t, dir)
+
+files_read_etc_files(httpd_man2html_script_t)
+
+miscfiles_read_localization(httpd_man2html_script_t)
+miscfiles_read_man_pages(httpd_man2html_script_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/mongodb.fc refpolicy/mongodb.fc
--- refpolicy/mongodb.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/mongodb.fc	2012-09-27 20:03:30.719126498 +0200
@@ -0,0 +1,9 @@
+/etc/rc\.d/init\.d/mongod	--	gen_context(system_u:object_r:mongod_initrc_exec_t,s0)
+
+/usr/bin/mongod	--	gen_context(system_u:object_r:mongod_exec_t,s0)
+
+/var/lib/mongodb(/.*)?	gen_context(system_u:object_r:mongod_var_lib_t,s0)
+
+/var/log/mongodb(/.*)?	gen_context(system_u:object_r:mongod_log_t,s0)
+
+/var/run/mongodb(/.*)?	gen_context(system_u:object_r:mongod_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/mongodb.if refpolicy/mongodb.if
--- refpolicy/mongodb.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/mongodb.if	2012-09-27 20:03:30.719126498 +0200
@@ -0,0 +1,42 @@
+## <summary>Scalable, high-performance, open source NoSQL database.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an mongodb environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`mongodb_admin',`
+	gen_require(`
+		type mongod_t, mongod_initrc_exec_t, mongod_log_t;
+		type mongod_var_lib_t, mongod_var_run_t;
+	')
+
+	allow $1 mongod_t:process { ptrace signal_perms };
+	ps_process_pattern($1, mongod_t)
+
+	init_labeled_script_domtrans($1, mongod_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 mongod_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, mongod_log_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, mongod_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, mongod_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/mongodb.te refpolicy/mongodb.te
--- refpolicy/mongodb.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/mongodb.te	2012-09-27 20:03:30.719126498 +0200
@@ -0,0 +1,58 @@
+policy_module(mongodb, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type mongod_t;
+type mongod_exec_t;
+init_daemon_domain(mongod_t, mongod_exec_t)
+
+type mongod_initrc_exec_t;
+init_script_file(mongod_initrc_exec_t)
+
+type mongod_log_t;
+logging_log_file(mongod_log_t)
+
+type mongod_var_lib_t;
+files_type(mongod_var_lib_t)
+
+type mongod_var_run_t;
+files_pid_file(mongod_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow mongod_t self:process signal;
+allow mongod_t self:fifo_file rw_fifo_file_perms;
+
+manage_dirs_pattern(mongod_t, mongod_log_t, mongod_log_t)
+append_files_pattern(mongod_t, mongod_log_t, mongod_log_t)
+create_files_pattern(mongod_t, mongod_log_t, mongod_log_t)
+setattr_files_pattern(mongod_t, mongod_log_t, mongod_log_t)
+logging_log_filetrans(mongod_t, mongod_log_t, dir)
+
+manage_dirs_pattern(mongod_t, mongod_var_lib_t, mongod_var_lib_t)
+manage_files_pattern(mongod_t, mongod_var_lib_t, mongod_var_lib_t)
+files_var_lib_filetrans(mongod_t, mongod_var_lib_t, dir)
+
+manage_dirs_pattern(mongod_t, mongod_var_run_t, mongod_var_run_t)
+manage_files_pattern(mongod_t, mongod_var_run_t, mongod_var_run_t)
+files_pid_filetrans(mongod_t, mongod_var_run_t, dir)
+
+kernel_read_system_state(mongod_t)
+
+corenet_all_recvfrom_unlabeled(mongod_t)
+corenet_all_recvfrom_netlabel(mongod_t)
+corenet_tcp_sendrecv_generic_if(mongod_t)
+corenet_tcp_sendrecv_generic_node(mongod_t)
+corenet_tcp_bind_generic_node(mongod_t)
+
+dev_read_urand(mongod_t)
+
+files_read_etc_files(mongod_t)
+
+miscfiles_read_localization(mongod_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/openhpi.fc refpolicy/openhpi.fc
--- refpolicy/openhpi.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/openhpi.fc	2012-09-27 20:03:30.720126498 +0200
@@ -0,0 +1,7 @@
+/etc/rc\.d/init\.d/openhpid	--	gen_context(system_u:object_r:openhpid_initrc_exec_t,s0)
+
+/usr/sbin/openhpid	--	gen_context(system_u:object_r:openhpid_exec_t,s0)
+
+/var/lib/openhpi(/.*)?	gen_context(system_u:object_r:openhpid_var_lib_t,s0)
+
+/var/run/openhpid\.pid	--	gen_context(system_u:object_r:openhpid_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/openhpi.if refpolicy/openhpi.if
--- refpolicy/openhpi.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/openhpi.if	2012-09-27 20:03:30.720126498 +0200
@@ -0,0 +1,39 @@
+## <summary>Open source implementation of the Service Availability Forum Hardware Platform Interface.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an openhpi environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`openhpi_admin',`
+	gen_require(`
+		type openhpid_t, openhpid_initrc_exec_t, openhpid_var_lib_t;
+		type openhpid_var_run_t;
+	')
+
+	allow $1 openhpid_t:process { ptrace signal_perms };
+	ps_process_pattern($1, openhpid_t)
+
+	init_labeled_script_domtrans($1, openhpid_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 openhpid_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_var_lib($1)
+	admin_pattern($1, openhpid_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, openhpid_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/openhpi.te refpolicy/openhpi.te
--- refpolicy/openhpi.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/openhpi.te	2012-09-27 20:03:30.720126498 +0200
@@ -0,0 +1,57 @@
+policy_module(openhpi, 1.0.1)
+
+########################################
+#
+# Declarations
+#
+
+type openhpid_t;
+type openhpid_exec_t;
+init_daemon_domain(openhpid_t, openhpid_exec_t)
+
+type openhpid_initrc_exec_t;
+init_script_file(openhpid_initrc_exec_t)
+
+type openhpid_var_lib_t;
+files_type(openhpid_var_lib_t)
+
+type openhpid_var_run_t;
+files_pid_file(openhpid_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow openhpid_t self:capability kill;
+allow openhpid_t self:process signal;
+allow openhpid_t self:fifo_file rw_fifo_file_perms;
+allow openhpid_t self:netlink_route_socket r_netlink_socket_perms;
+allow openhpid_t self:unix_stream_socket { accept listen };
+allow openhpid_t self:tcp_socket create_stream_socket_perms;
+allow openhpid_t self:udp_socket create_socket_perms;
+
+manage_dirs_pattern(openhpid_t, openhpid_var_lib_t, openhpid_var_lib_t)
+manage_files_pattern(openhpid_t, openhpid_var_lib_t, openhpid_var_lib_t)
+files_var_lib_filetrans(openhpid_t, openhpid_var_lib_t, dir)
+
+manage_files_pattern(openhpid_t, openhpid_var_run_t, openhpid_var_run_t)
+files_pid_filetrans(openhpid_t, openhpid_var_run_t, file)
+
+corenet_all_recvfrom_unlabeled(openhpid_t)
+corenet_all_recvfrom_netlabel(openhpid_t)
+corenet_tcp_sendrecv_generic_if(openhpid_t)
+corenet_tcp_sendrecv_generic_node(openhpid_t)
+corenet_tcp_bind_generic_node(openhpid_t)
+
+corenet_sendrecv_openhpid_server_packets(openhpid_t)
+corenet_tcp_bind_openhpid_port(openhpid_t)
+corenet_tcp_sendrecv_openhpid_port(openhpid_t)
+
+dev_read_urand(openhpid_t)
+
+files_read_etc_files(openhpid_t)
+
+logging_send_syslog_msg(openhpid_t)
+
+miscfiles_read_localization(openhpid_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/pkcs.fc refpolicy/pkcs.fc
--- refpolicy/pkcs.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/pkcs.fc	2012-09-27 20:03:30.720126498 +0200
@@ -0,0 +1,7 @@
+/etc/rc\.d/init\.d/pkcsslotd	--	gen_context(system_u:object_r:pkcs_slotd_initrc_exec_t,s0)
+
+/usr/sbin/pkcsslotd	--	gen_context(system_u:object_r:pkcs_slotd_exec_t,s0)
+
+/var/lib/opencryptoki(/.*)?	gen_context(system_u:object_r:pkcs_slotd_var_lib_t,s0)
+
+/var/run/pkcsslotd\.pid	--	gen_context(system_u:object_r:pkcs_slotd_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/pkcs.if refpolicy/pkcs.if
--- refpolicy/pkcs.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/pkcs.if	2012-09-27 20:03:30.720126498 +0200
@@ -0,0 +1,45 @@
+## <summary>Implementations of the Cryptoki specification.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an pkcs slotd environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`pkcs_admin_slotd',`
+	gen_require(`
+		type pkcs_slotd_t, pkcs_slotd_initrc_exec_t, pkcs_slotd_var_lib_t;
+		type pkcs_slotd_var_run_t, pkcs_slotd_tmp_t, pkcs_slotd_tmpfs_t;
+	')
+
+	allow $1 pkcs_slotd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, pkcs_slotd_t)
+
+	init_labeled_script_domtrans($1, pkcs_slotd_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 pkcs_slotd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_var_lib($1)
+	admin_pattern($1, pkcs_slotd_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, pkcs_slotd_var_run_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, pkcs_slotd_tmp_t)
+
+	fs_search_tmpfs($1)
+	admin_pattern($1, pkcs_slotd_tmpfs_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/pkcs.te refpolicy/pkcs.te
--- refpolicy/pkcs.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/pkcs.te	2012-09-27 20:03:30.720126498 +0200
@@ -0,0 +1,58 @@
+policy_module(pkcs, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type pkcs_slotd_t;
+type pkcs_slotd_exec_t;
+init_daemon_domain(pkcs_slotd_t, pkcs_slotd_exec_t)
+
+type pkcs_slotd_initrc_exec_t;
+init_script_file(pkcs_slotd_initrc_exec_t)
+
+type pkcs_slotd_var_lib_t;
+files_type(pkcs_slotd_var_lib_t)
+
+type pkcs_slotd_var_run_t;
+files_pid_file(pkcs_slotd_var_run_t)
+
+type pkcs_slotd_tmp_t;
+files_tmp_file(pkcs_slotd_tmp_t)
+
+type pkcs_slotd_tmpfs_t;
+files_tmpfs_file(pkcs_slotd_tmpfs_t)
+
+########################################
+#
+# Local policy
+#
+
+allow pkcs_slotd_t self:capability kill;
+allow pkcs_slotd_t self:fifo_file rw_fifo_file_perms;
+allow pkcs_slotd_t self:sem create_sem_perms;
+allow pkcs_slotd_t self:shm create_shm_perms;
+allow pkcs_slotd_t self:unix_stream_socket { accept listen };
+
+manage_dirs_pattern(pkcs_slotd_t, pkcs_slotd_var_lib_t, pkcs_slotd_var_lib_t)
+manage_files_pattern(pkcs_slotd_t, pkcs_slotd_var_lib_t, pkcs_slotd_var_lib_t)
+manage_lnk_files_pattern(pkcs_slotd_t, pkcs_slotd_var_lib_t, pkcs_slotd_var_lib_t)
+files_var_lib_filetrans(pkcs_slotd_t, pkcs_slotd_var_lib_t, dir)
+
+manage_files_pattern(pkcs_slotd_t, pkcs_slotd_var_run_t, pkcs_slotd_var_run_t)
+files_pid_filetrans(pkcs_slotd_t, pkcs_slotd_var_run_t, file)
+
+manage_dirs_pattern(pkcs_slotd_t, pkcs_slotd_tmp_t, pkcs_slotd_tmp_t)
+manage_files_pattern(pkcs_slotd_t, pkcs_slotd_tmp_t, pkcs_slotd_tmp_t)
+files_tmp_filetrans(pkcs_slotd_t, pkcs_slotd_tmp_t, dir)
+
+manage_dirs_pattern(pkcs_slotd_t, pkcs_slotd_tmpfs_t, pkcs_slotd_tmpfs_t)
+manage_files_pattern(pkcs_slotd_t, pkcs_slotd_tmpfs_t, pkcs_slotd_tmpfs_t)
+fs_tmpfs_filetrans(pkcs_slotd_t, pkcs_slotd_tmpfs_t, dir)
+
+files_read_etc_files(pkcs_slotd_t)
+
+logging_send_syslog_msg(pkcs_slotd_t)
+
+miscfiles_read_localization(pkcs_slotd_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/abrt.fc refpolicy/policy/modules/contrib/abrt.fc
--- refpolicy/policy/modules/contrib/abrt.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/abrt.fc	2012-09-27 20:03:30.720126498 +0200
@@ -1,20 +1,30 @@
-/etc/abrt(/.*)?				gen_context(system_u:object_r:abrt_etc_t,s0)
-/etc/rc\.d/init\.d/abrt		--	gen_context(system_u:object_r:abrt_initrc_exec_t,s0)
+/etc/abrt(/.*)?	gen_context(system_u:object_r:abrt_etc_t,s0)
+/etc/rc\.d/init\.d/abrt	--	gen_context(system_u:object_r:abrt_initrc_exec_t,s0)
 
-/usr/bin/abrt-pyhook-helper 	--	gen_context(system_u:object_r:abrt_helper_exec_t,s0)
-
-/usr/libexec/abrt-pyhook-helper --	gen_context(system_u:object_r:abrt_helper_exec_t,s0)
-/usr/libexec/abrt-hook-python 	--	gen_context(system_u:object_r:abrt_helper_exec_t,s0)
-
-/usr/sbin/abrtd			--	gen_context(system_u:object_r:abrt_exec_t,s0)
-
-/var/cache/abrt(/.*)?			gen_context(system_u:object_r:abrt_var_cache_t,s0)
-/var/cache/abrt-di(/.*)?		gen_context(system_u:object_r:abrt_var_cache_t,s0)
-
-/var/log/abrt-logger		--	gen_context(system_u:object_r:abrt_var_log_t,s0)
-
-/var/run/abrt\.pid		--	gen_context(system_u:object_r:abrt_var_run_t,s0)
-/var/run/abrtd?\.lock		--	gen_context(system_u:object_r:abrt_var_run_t,s0)
-/var/run/abrt(/.*)?			gen_context(system_u:object_r:abrt_var_run_t,s0)
-
-/var/spool/abrt(/.*)?			gen_context(system_u:object_r:abrt_var_cache_t,s0)
+/usr/bin/abrt-pyhook-helper	--	gen_context(system_u:object_r:abrt_helper_exec_t,s0)
+/usr/bin/abrt-retrace-worker	--	gen_context(system_u:object_r:abrt_retrace_worker_exec_t,s0)
+/usr/bin/coredump2packages	--	gen_context(system_u:object_r:abrt_retrace_coredump_exec_t,s0)
+/usr/bin/retrace-server-worker	--	gen_context(system_u:object_r:abrt_retrace_worker_exec_t,s0)
+
+/usr/libexec/abrt-pyhook-helper	--	gen_context(system_u:object_r:abrt_helper_exec_t,s0)
+/usr/libexec/abrt-handle-event	--	gen_context(system_u:object_r:abrt_handle_event_exec_t,s0)
+/usr/libexec/abrt-hook-python	--	gen_context(system_u:object_r:abrt_helper_exec_t,s0)
+
+/usr/sbin/abrtd	--	gen_context(system_u:object_r:abrt_exec_t,s0)
+/usr/sbin/abrt-dbus	--	gen_context(system_u:object_r:abrt_exec_t,s0)
+
+/var/cache/abrt(/.*)?	gen_context(system_u:object_r:abrt_var_cache_t,s0)
+/var/cache/abrt-di(/.*)?	gen_context(system_u:object_r:abrt_var_cache_t,s0)
+/var/cache/abrt-retrace(/.*)?	gen_context(system_u:object_r:abrt_retrace_cache_t,s0)
+/var/cache/retrace-server(/.*)?	gen_context(system_u:object_r:abrt_retrace_cache_t,s0)
+
+/var/log/abrt-logger	--	gen_context(system_u:object_r:abrt_var_log_t,s0)
+
+/var/run/abrt\.pid	--	gen_context(system_u:object_r:abrt_var_run_t,s0)
+/var/run/abrtd?\.lock	--	gen_context(system_u:object_r:abrt_var_run_t,s0)
+/var/run/abrtd?\.socket	--	gen_context(system_u:object_r:abrt_var_run_t,s0)
+/var/run/abrt(/.*)?	gen_context(system_u:object_r:abrt_var_run_t,s0)
+
+/var/spool/abrt(/.*)?	gen_context(system_u:object_r:abrt_var_cache_t,s0)
+/var/spool/abrt-retrace(/.*)?	gen_context(system_u:object_r:abrt_retrace_spool_t,s0)
+/var/spool/retrace-server(/.*)?	gen_context(system_u:object_r:abrt_retrace_spool_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/abrt.if refpolicy/policy/modules/contrib/abrt.if
--- refpolicy/policy/modules/contrib/abrt.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/abrt.if	2012-09-27 20:03:30.720126498 +0200
@@ -1,4 +1,4 @@
-## <summary>ABRT - automated bug-reporting tool</summary>
+## <summary>Automated bug-reporting tool.</summary>
 
 ######################################
 ## <summary>
@@ -40,7 +40,7 @@
 
 ########################################
 ## <summary>
-##	Send a null signal to abrt.
+##	Send null signals to abrt.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -58,7 +58,7 @@
 
 ########################################
 ## <summary>
-##	Allow the domain to read abrt state files in /proc.
+##	Read process state of abrt.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -116,7 +116,8 @@
 
 #####################################
 ## <summary>
-##	Execute abrt-helper in the abrt-helper domain.
+##	Execute abrt-helper in the abrt
+##	helper domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -129,13 +130,15 @@
 		type abrt_helper_t, abrt_helper_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, abrt_helper_exec_t, abrt_helper_t)
 ')
 
 ########################################
 ## <summary>
-##	Execute abrt helper in the abrt_helper domain, and
-##	allow the specified role the abrt_helper domain.
+##	Execute abrt helper in the abrt
+##	helper domain, and allow the
+##	specified role the abrt helper domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -151,17 +154,17 @@
 #
 interface(`abrt_run_helper',`
 	gen_require(`
-		type abrt_helper_t;
+		attribute_role abrt_helper_roles;
 	')
 
 	abrt_domtrans_helper($1)
-	role $2 types abrt_helper_t;
+	roleattribute $2 abrt_helper_roles;
 ')
 
 ########################################
 ## <summary>
-##	Send and receive messages from
-##	abrt over dbus.
+##	Create, read, write, and delete
+##	abrt cache files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -174,12 +177,13 @@
 		type abrt_var_cache_t;
 	')
 
+	files_search_var($1)
 	manage_files_pattern($1, abrt_var_cache_t, abrt_var_cache_t)
 ')
 
 ####################################
 ## <summary>
-##	Read abrt configuration file.
+##	Read abrt configuration files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -198,7 +202,7 @@
 
 ######################################
 ## <summary>
-##	Read abrt logs.
+##	Read abrt log files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -236,7 +240,8 @@
 
 ######################################
 ## <summary>
-##	Create, read, write, and delete abrt PID files.
+##	Create, read, write, and delete
+##	abrt PID files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -255,8 +260,8 @@
 
 #####################################
 ## <summary>
-##	All of the rules required to administrate
-##	an abrt environment
+##	All of the rules required to
+##	administrate an abrt environment,
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -265,21 +270,21 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the abrt domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
 #
 interface(`abrt_admin',`
 	gen_require(`
-		type abrt_t, abrt_etc_t;
-		type abrt_var_cache_t, abrt_var_log_t;
-		type abrt_var_run_t, abrt_tmp_t;
-		type abrt_initrc_exec_t;
+		attribute abrt_domain;
+		type abrt_t, abrt_etc_t, abrt_initrc_exec_t;
+		type abrt_var_cache_t, abrt_var_log_t, abrt_retrace_cache_t;
+		type abrt_var_run_t, abrt_tmp_t, abrt_retrace_spool_t;
 	')
 
-	allow $1 abrt_t:process { ptrace signal_perms };
-	ps_process_pattern($1, abrt_t)
+	allow $1 abrt_domain:process { ptrace signal_perms };
+	ps_process_pattern($1, abrt_domain)
 
 	init_labeled_script_domtrans($1, abrt_initrc_exec_t)
 	domain_system_change_exemption($1)
@@ -293,7 +298,7 @@
 	admin_pattern($1, abrt_var_log_t)
 
 	files_search_var($1)
-	admin_pattern($1, abrt_var_cache_t)
+	admin_pattern($1, { abrt_retrace_cache_t abrt_var_cache_t abrt_retrace_spool_t })
 
 	files_search_pids($1)
 	admin_pattern($1, abrt_var_run_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/abrt.te refpolicy/policy/modules/contrib/abrt.te
--- refpolicy/policy/modules/contrib/abrt.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/abrt.te	2012-09-27 20:03:30.721126498 +0200
@@ -1,43 +1,91 @@
-policy_module(abrt, 1.2.0)
+policy_module(abrt, 1.3.1)
 
 ########################################
 #
 # Declarations
 #
 
-type abrt_t;
+## <desc>
+##	<p>
+##	Determine whether ABRT can modify
+##	public files used for public file
+##	transfer services.
+##	</p>
+## </desc>
+gen_tunable(abrt_anon_write, false)
+
+## <desc>
+##	<p>
+##	Determine whether ABRT can run in
+##	the abrt_handle_event_t domain to
+##	handle ABRT event scripts.
+##	</p>
+## </desc>
+gen_tunable(abrt_handle_event, false)
+
+attribute abrt_domain;
+
+attribute_role abrt_helper_roles;
+roleattribute system_r abrt_helper_roles;
+
+type abrt_t, abrt_domain;
 type abrt_exec_t;
 init_daemon_domain(abrt_t, abrt_exec_t)
 
 type abrt_initrc_exec_t;
 init_script_file(abrt_initrc_exec_t)
 
-# etc files
 type abrt_etc_t;
 files_config_file(abrt_etc_t)
 
-# log files
 type abrt_var_log_t;
 logging_log_file(abrt_var_log_t)
 
-# tmp files
 type abrt_tmp_t;
 files_tmp_file(abrt_tmp_t)
 
-# var/cache files
 type abrt_var_cache_t;
 files_type(abrt_var_cache_t)
 
-# pid files
 type abrt_var_run_t;
 files_pid_file(abrt_var_run_t)
 
-# type needed to allow all domains
-# to handle /var/cache/abrt
-type abrt_helper_t;
+type abrt_dump_oops_t, abrt_domain;
+type abrt_dump_oops_exec_t;
+init_system_domain(abrt_dump_oops_t, abrt_dump_oops_exec_t)
+
+type abrt_handle_event_t, abrt_domain;
+type abrt_handle_event_exec_t;
+domain_type(abrt_handle_event_t)
+domain_entry_file(abrt_handle_event_t, abrt_handle_event_exec_t)
+role system_r types abrt_handle_event_t;
+
+type abrt_helper_t, abrt_domain;
 type abrt_helper_exec_t;
 application_domain(abrt_helper_t, abrt_helper_exec_t)
-role system_r types abrt_helper_t;
+role abrt_helper_roles types abrt_helper_t;
+
+type abrt_retrace_coredump_t, abrt_domain;
+type abrt_retrace_coredump_exec_t;
+domain_type(abrt_retrace_coredump_t)
+domain_entry_file(abrt_retrace_coredump_t, abrt_retrace_coredump_exec_t)
+role system_r types abrt_retrace_coredump_t;
+
+type abrt_retrace_worker_t, abrt_domain;
+type abrt_retrace_worker_exec_t;
+domain_type(abrt_retrace_worker_t)
+domain_entry_file(abrt_retrace_worker_t, abrt_retrace_worker_exec_t)
+role system_r types abrt_retrace_worker_t;
+
+type abrt_retrace_cache_t;
+files_type(abrt_retrace_cache_t)
+
+type abrt_retrace_spool_t;
+files_type(abrt_retrace_spool_t)
+
+type abrt_watch_log_t, abrt_domain;
+type abrt_watch_log_exec_t;
+init_daemon_domain(abrt_watch_log_t, abrt_watch_log_exec_t)
 
 ifdef(`enable_mcs',`
 	init_ranged_daemon_domain(abrt_t, abrt_exec_t, s0 - mcs_systemhigh)
@@ -45,47 +93,43 @@
 
 ########################################
 #
-# abrt local policy
+# Local policy
 #
 
-allow abrt_t self:capability { chown kill setuid setgid sys_nice dac_override };
+allow abrt_t self:capability { chown dac_override fowner fsetid kill setgid setuid sys_nice };
 dontaudit abrt_t self:capability sys_rawio;
-allow abrt_t self:process { signal signull setsched getsched };
-
+allow abrt_t self:process { setpgid sigkill signal signull setsched getsched };
 allow abrt_t self:fifo_file rw_fifo_file_perms;
-allow abrt_t self:tcp_socket create_stream_socket_perms;
-allow abrt_t self:udp_socket create_socket_perms;
-allow abrt_t self:unix_dgram_socket create_socket_perms;
-allow abrt_t self:netlink_route_socket r_netlink_socket_perms;
+allow abrt_t self:tcp_socket { accept listen };
 
-# abrt etc files
+allow abrt_t abrt_etc_t:dir list_dir_perms;
 rw_files_pattern(abrt_t, abrt_etc_t, abrt_etc_t)
 
-# log file
 manage_files_pattern(abrt_t, abrt_var_log_t, abrt_var_log_t)
 logging_log_filetrans(abrt_t, abrt_var_log_t, file)
 
-# abrt tmp files
 manage_dirs_pattern(abrt_t, abrt_tmp_t, abrt_tmp_t)
 manage_files_pattern(abrt_t, abrt_tmp_t, abrt_tmp_t)
+manage_lnk_files_pattern(abrt_t, abrt_tmp_t, abrt_tmp_t)
 files_tmp_filetrans(abrt_t, abrt_tmp_t, { file dir })
 
-# abrt var/cache files
 manage_files_pattern(abrt_t, abrt_var_cache_t, abrt_var_cache_t)
 manage_dirs_pattern(abrt_t, abrt_var_cache_t, abrt_var_cache_t)
 manage_lnk_files_pattern(abrt_t, abrt_var_cache_t, abrt_var_cache_t)
 files_var_filetrans(abrt_t, abrt_var_cache_t, { file dir })
 files_spool_filetrans(abrt_t, abrt_var_cache_t, dir)
 
-# abrt pid files
 manage_files_pattern(abrt_t, abrt_var_run_t, abrt_var_run_t)
 manage_dirs_pattern(abrt_t, abrt_var_run_t, abrt_var_run_t)
 manage_sock_files_pattern(abrt_t, abrt_var_run_t, abrt_var_run_t)
 manage_lnk_files_pattern(abrt_t, abrt_var_run_t, abrt_var_run_t)
-files_pid_filetrans(abrt_t, abrt_var_run_t, { file dir })
+files_pid_filetrans(abrt_t, abrt_var_run_t, { file dir sock_file })
+
+can_exec(abrt_t, abrt_tmp_t)
 
 kernel_read_ring_buffer(abrt_t)
 kernel_read_system_state(abrt_t)
+kernel_request_load_module(abrt_t)
 kernel_rw_kernel_sysctl(abrt_t)
 
 corecmd_exec_bin(abrt_t)
@@ -96,14 +140,17 @@
 corenet_all_recvfrom_unlabeled(abrt_t)
 corenet_tcp_sendrecv_generic_if(abrt_t)
 corenet_tcp_sendrecv_generic_node(abrt_t)
-corenet_tcp_sendrecv_generic_port(abrt_t)
+corenet_tcp_sendrecv_all_ports(abrt_t)
 corenet_tcp_bind_generic_node(abrt_t)
+
+corenet_sendrecv_all_client_packets(abrt_t)
 corenet_tcp_connect_http_port(abrt_t)
 corenet_tcp_connect_ftp_port(abrt_t)
 corenet_tcp_connect_all_ports(abrt_t)
-corenet_sendrecv_http_client_packets(abrt_t)
 
 dev_getattr_all_chr_files(abrt_t)
+dev_getattr_all_blk_files(abrt_t)
+dev_read_rand(abrt_t)
 dev_read_urand(abrt_t)
 dev_rw_sysfs(abrt_t)
 dev_dontaudit_read_raw_memory(abrt_t)
@@ -113,44 +160,55 @@
 domain_signull_all_domains(abrt_t)
 
 files_getattr_all_files(abrt_t)
-files_read_etc_files(abrt_t)
+files_read_config_files(abrt_t)
+files_read_etc_runtime_files(abrt_t)
 files_read_var_symlinks(abrt_t)
-files_read_var_lib_files(abrt_t)
 files_read_usr_files(abrt_t)
-files_read_generic_tmp_files(abrt_t)
 files_read_kernel_modules(abrt_t)
-files_dontaudit_list_default(abrt_t)
 files_dontaudit_read_default_files(abrt_t)
+files_dontaudit_read_all_symlinks(abrt_t)
+files_dontaudit_getattr_all_sockets(abrt_t)
+files_list_mnt(abrt_t)
 
-fs_list_inotifyfs(abrt_t)
 fs_getattr_all_fs(abrt_t)
 fs_getattr_all_dirs(abrt_t)
+fs_list_inotifyfs(abrt_t)
 fs_read_fusefs_files(abrt_t)
 fs_read_noxattr_fs_files(abrt_t)
 fs_read_nfs_files(abrt_t)
 fs_read_nfs_symlinks(abrt_t)
 fs_search_all(abrt_t)
 
-sysnet_read_config(abrt_t)
+auth_use_nsswitch(abrt_t)
 
 logging_read_generic_logs(abrt_t)
-logging_send_syslog_msg(abrt_t)
 
-miscfiles_read_generic_certs(abrt_t)
-miscfiles_read_localization(abrt_t)
+miscfiles_read_public_files(abrt_t)
 
 userdom_dontaudit_read_user_home_content_files(abrt_t)
 
+tunable_policy(`abrt_anon_write',`
+	miscfiles_manage_public_files(abrt_t)
+')
+
+optional_policy(`
+	apache_list_modules(abrt_t)
+	apache_read_module_files(abrt_t)
+')
+
 optional_policy(`
 	dbus_system_domain(abrt_t, abrt_exec_t)
+
+	optional_policy(`
+		policykit_dbus_chat(abrt_t)
+	')
 ')
 
 optional_policy(`
-	nis_use_ypbind(abrt_t)
+	dmesg_domtrans(abrt_t)
 ')
 
 optional_policy(`
-	policykit_dbus_chat(abrt_t)
 	policykit_domtrans_auth(abrt_t)
 	policykit_read_lib(abrt_t)
 	policykit_read_reload(abrt_t)
@@ -162,28 +220,42 @@
 	corecmd_exec_all_executables(abrt_t)
 ')
 
-# to install debuginfo packages
 optional_policy(`
 	rpm_exec(abrt_t)
 	rpm_dontaudit_manage_db(abrt_t)
 	rpm_manage_cache(abrt_t)
+	rpm_manage_log(abrt_t)
 	rpm_manage_pid_files(abrt_t)
 	rpm_read_db(abrt_t)
 	rpm_signull(abrt_t)
 ')
 
-# to run mailx plugin
 optional_policy(`
 	sendmail_domtrans(abrt_t)
 ')
 
 optional_policy(`
-	sssd_stream_connect(abrt_t)
+	sosreport_domtrans(abrt_t)
+	sosreport_read_tmp_files(abrt_t)
+	sosreport_delete_tmp_files(abrt_t)
+')
+
+#######################################
+#
+# Handle-event local policy
+#
+
+allow abrt_handle_event_t self:fifo_file rw_fifo_file_perms;
+
+tunable_policy(`abrt_handle_event',`
+	domtrans_pattern(abrt_t, abrt_handle_event_exec_t, abrt_handle_event_t)
+',`
+	can_exec(abrt_t, abrt_handle_event_exec_t)
 ')
 
 ########################################
 #
-# abrt--helper local policy
+# Helper local policy
 #
 
 allow abrt_helper_t self:capability { chown setgid sys_nice };
@@ -200,23 +272,19 @@
 read_files_pattern(abrt_helper_t, abrt_var_run_t, abrt_var_run_t)
 read_lnk_files_pattern(abrt_helper_t, abrt_var_run_t, abrt_var_run_t)
 
-domain_read_all_domains_state(abrt_helper_t)
+corecmd_read_all_executables(abrt_helper_t)
 
-files_read_etc_files(abrt_helper_t)
+domain_read_all_domains_state(abrt_helper_t)
 
 fs_list_inotifyfs(abrt_helper_t)
 fs_getattr_all_fs(abrt_helper_t)
 
 auth_use_nsswitch(abrt_helper_t)
 
-logging_send_syslog_msg(abrt_helper_t)
-
-miscfiles_read_localization(abrt_helper_t)
-
 term_dontaudit_use_all_ttys(abrt_helper_t)
 term_dontaudit_use_all_ptys(abrt_helper_t)
 
-ifdef(`hide_broken_symptoms', `
+ifdef(`hide_broken_symptoms',`
 	userdom_dontaudit_read_user_home_content_files(abrt_helper_t)
 	userdom_dontaudit_read_user_tmp_files(abrt_helper_t)
 	dev_dontaudit_read_all_blk_files(abrt_helper_t)
@@ -225,3 +293,121 @@
 	dev_dontaudit_write_all_blk_files(abrt_helper_t)
 	fs_dontaudit_rw_anon_inodefs_files(abrt_helper_t)
 ')
+
+#######################################
+#
+# Retrace coredump policy
+#
+
+allow abrt_retrace_coredump_t self:fifo_file rw_fifo_file_perms;
+
+list_dirs_pattern(abrt_retrace_coredump_t, abrt_retrace_cache_t, abrt_retrace_cache_t)
+read_files_pattern(abrt_retrace_coredump_t, abrt_retrace_cache_t, abrt_retrace_cache_t)
+read_lnk_files_pattern(abrt_retrace_coredump_t, abrt_retrace_cache_t, abrt_retrace_cache_t)
+
+list_dirs_pattern(abrt_retrace_coredump_t, abrt_retrace_spool_t, abrt_retrace_spool_t)
+read_files_pattern(abrt_retrace_coredump_t, abrt_retrace_spool_t, abrt_retrace_spool_t)
+read_lnk_files_pattern(abrt_retrace_coredump_t, abrt_retrace_spool_t, abrt_retrace_spool_t)
+
+corecmd_exec_bin(abrt_retrace_coredump_t)
+corecmd_exec_shell(abrt_retrace_coredump_t)
+
+dev_read_urand(abrt_retrace_coredump_t)
+
+files_read_usr_files(abrt_retrace_coredump_t)
+
+sysnet_dns_name_resolve(abrt_retrace_coredump_t)
+
+optional_policy(`
+	rpm_exec(abrt_retrace_coredump_t)
+	rpm_dontaudit_manage_db(abrt_retrace_coredump_t)
+	rpm_manage_cache(abrt_retrace_coredump_t)
+	rpm_manage_log(abrt_retrace_coredump_t)
+	rpm_manage_pid_files(abrt_retrace_coredump_t)
+	rpm_read_db(abrt_retrace_coredump_t)
+	rpm_signull(abrt_retrace_coredump_t)
+')
+
+#######################################
+#
+# Retrace worker policy
+#
+
+allow abrt_retrace_worker_t self:capability setuid;
+allow abrt_retrace_worker_t self:fifo_file rw_fifo_file_perms;
+
+domtrans_pattern(abrt_retrace_worker_t, abrt_retrace_coredump_exec_t, abrt_retrace_coredump_t)
+allow abrt_retrace_worker_t abrt_retrace_coredump_exec_t:file ioctl;
+
+manage_dirs_pattern(abrt_retrace_worker_t, abrt_retrace_spool_t, abrt_retrace_spool_t)
+manage_files_pattern(abrt_retrace_worker_t, abrt_retrace_spool_t, abrt_retrace_spool_t)
+manage_lnk_files_pattern(abrt_retrace_worker_t, abrt_retrace_spool_t, abrt_retrace_spool_t)
+
+allow abrt_retrace_worker_t abrt_etc_t:file read_file_perms;
+
+can_exec(abrt_retrace_worker_t, abrt_retrace_worker_exec_t)
+
+corecmd_exec_bin(abrt_retrace_worker_t)
+corecmd_exec_shell(abrt_retrace_worker_t)
+
+dev_read_urand(abrt_retrace_worker_t)
+
+files_read_usr_files(abrt_retrace_worker_t)
+
+sysnet_dns_name_resolve(abrt_retrace_worker_t)
+
+########################################
+#
+# Dump oops local policy
+#
+
+allow abrt_dump_oops_t self:capability dac_override;
+allow abrt_dump_oops_t self:fifo_file rw_fifo_file_perms;
+allow abrt_dump_oops_t self:unix_stream_socket { accept listen };
+
+files_search_spool(abrt_dump_oops_t)
+manage_dirs_pattern(abrt_dump_oops_t, abrt_var_cache_t, abrt_var_cache_t)
+manage_files_pattern(abrt_dump_oops_t, abrt_var_cache_t, abrt_var_cache_t)
+manage_lnk_files_pattern(abrt_dump_oops_t, abrt_var_cache_t, abrt_var_cache_t)
+files_var_filetrans(abrt_dump_oops_t, abrt_var_cache_t, { file dir })
+
+read_files_pattern(abrt_dump_oops_t, abrt_var_run_t, abrt_var_run_t)
+read_lnk_files_pattern(abrt_dump_oops_t, abrt_var_run_t, abrt_var_run_t)
+
+read_files_pattern(abrt_dump_oops_t, abrt_etc_t, abrt_etc_t)
+
+kernel_read_kernel_sysctls(abrt_dump_oops_t)
+kernel_read_ring_buffer(abrt_dump_oops_t)
+
+domain_use_interactive_fds(abrt_dump_oops_t)
+
+fs_list_inotifyfs(abrt_dump_oops_t)
+
+logging_read_generic_logs(abrt_dump_oops_t)
+
+#######################################
+#
+# Watch log local policy
+#
+
+allow abrt_watch_log_t self:fifo_file rw_fifo_file_perms;
+allow abrt_watch_log_t self:unix_stream_socket { accept listen };
+
+read_files_pattern(abrt_watch_log_t, abrt_etc_t, abrt_etc_t)
+
+domtrans_pattern(abrt_watch_log_t, abrt_dump_oops_exec_t, abrt_dump_oops_t)
+
+logging_read_all_logs(abrt_watch_log_t)
+
+#######################################
+#
+# Global local policy
+#
+
+kernel_read_system_state(abrt_domain)
+
+files_read_etc_files(abrt_domain)
+
+logging_send_syslog_msg(abrt_domain)
+
+miscfiles_read_localization(abrt_domain)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/accountsd.fc refpolicy/policy/modules/contrib/accountsd.fc
--- refpolicy/policy/modules/contrib/accountsd.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/accountsd.fc	2012-09-27 20:03:30.721126498 +0200
@@ -1,3 +1,7 @@
-/usr/libexec/accounts-daemon		--	gen_context(system_u:object_r:accountsd_exec_t,s0)
+/usr/libexec/accounts-daemon	--	gen_context(system_u:object_r:accountsd_exec_t,s0)
 
-/var/lib/AccountsService(/.*)?			gen_context(system_u:object_r:accountsd_var_lib_t,s0)
+ifdef(`distro_debian',`
+/usr/lib/accountsservice/accounts-daemon	--	gen_context(system_u:object_r:accountsd_exec_t,s0)
+')
+
+/var/lib/AccountsService(/.*)?	gen_context(system_u:object_r:accountsd_var_lib_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/accountsd.if refpolicy/policy/modules/contrib/accountsd.if
--- refpolicy/policy/modules/contrib/accountsd.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/accountsd.if	2012-09-27 20:03:30.721126498 +0200
@@ -1,13 +1,14 @@
-## <summary>AccountsService and daemon for manipulating user account information via D-Bus</summary>
+## <summary>AccountsService and daemon for manipulating user account information via D-Bus.</summary>
 
 ########################################
 ## <summary>
-##	Execute a domain transition to run accountsd.
+##	Execute a domain transition to
+##	run accountsd.
 ## </summary>
 ## <param name="domain">
-## <summary>
-##	Domain allowed access.
-## </summary>
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
 ## </param>
 #
 interface(`accountsd_domtrans',`
@@ -15,17 +16,18 @@
 		type accountsd_t, accountsd_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, accountsd_exec_t, accountsd_t)
 ')
 
 ########################################
 ## <summary>
-##	Do not audit attempts to read and write Accounts Daemon
-##	fifo file.
+##	Do not audit attempts to read and
+##	write Accounts Daemon fifo files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
@@ -118,8 +120,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an accountsd environment
+##	All of the rules required to
+##	administrate an accountsd environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -138,7 +140,7 @@
 		type accountsd_t;
 	')
 
-	allow $1 accountsd_t:process { ptrace signal_perms getattr };
+	allow $1 accountsd_t:process { ptrace signal_perms };
 	ps_process_pattern($1, accountsd_t)
 
 	accountsd_manage_lib_files($1)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/accountsd.te refpolicy/policy/modules/contrib/accountsd.te
--- refpolicy/policy/modules/contrib/accountsd.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/accountsd.te	2012-09-27 20:03:30.721126498 +0200
@@ -1,4 +1,8 @@
-policy_module(accountsd, 1.0.0)
+policy_module(accountsd, 1.0.3)
+
+gen_require(`
+	class passwd all_passwd_perms;
+')
 
 ########################################
 #
@@ -14,27 +18,34 @@
 
 ########################################
 #
-# accountsd local policy
+# Local policy
 #
 
-allow accountsd_t self:capability { dac_override setuid setgid sys_ptrace };
+allow accountsd_t self:capability { chown dac_override setuid setgid sys_ptrace };
+allow accountsd_t self:process signal;
 allow accountsd_t self:fifo_file rw_fifo_file_perms;
+allow accountsd_t self:passwd { rootok passwd chfn chsh };
 
 manage_dirs_pattern(accountsd_t, accountsd_var_lib_t, accountsd_var_lib_t)
 manage_files_pattern(accountsd_t, accountsd_var_lib_t, accountsd_var_lib_t)
-files_var_lib_filetrans(accountsd_t, accountsd_var_lib_t, { file dir })
+files_var_lib_filetrans(accountsd_t, accountsd_var_lib_t, dir)
 
 kernel_read_kernel_sysctls(accountsd_t)
+kernel_read_system_state(accountsd_t)
 
 corecmd_exec_bin(accountsd_t)
 
-files_read_usr_files(accountsd_t)
+dev_read_sysfs(accountsd_t)
+
 files_read_mnt_files(accountsd_t)
+files_read_usr_files(accountsd_t)
 
+fs_getattr_xattr_fs(accountsd_t)
 fs_list_inotifyfs(accountsd_t)
 fs_read_noxattr_fs_files(accountsd_t)
 
 auth_use_nsswitch(accountsd_t)
+auth_read_login_records(accountsd_t)
 auth_read_shadow(accountsd_t)
 
 miscfiles_read_localization(accountsd_t)
@@ -49,6 +60,7 @@
 usermanage_domtrans_passwd(accountsd_t)
 
 optional_policy(`
+	consolekit_dbus_chat(accountsd_t)
 	consolekit_read_log(accountsd_t)
 ')
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/acct.fc refpolicy/policy/modules/contrib/acct.fc
--- refpolicy/policy/modules/contrib/acct.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/acct.fc	2012-09-27 20:03:30.721126498 +0200
@@ -1,9 +1,11 @@
+/etc/cron\.(daily|monthly)/acct	--	gen_context(system_u:object_r:acct_exec_t,s0)
 
-/etc/cron\.(daily|monthly)/acct -- gen_context(system_u:object_r:acct_exec_t,s0)
+/etc/rc\.d/init\.d/psacct	--	gen_context(system_u:object_r:acct_initrc_exec_t,s0)
 
-/sbin/accton		--	gen_context(system_u:object_r:acct_exec_t,s0)
+/sbin/accton	--	gen_context(system_u:object_r:acct_exec_t,s0)
 
 /usr/sbin/accton	--	gen_context(system_u:object_r:acct_exec_t,s0)
 
-/var/account(/.*)?		gen_context(system_u:object_r:acct_data_t,s0)
-/var/log/account(/.*)?		gen_context(system_u:object_r:acct_data_t,s0)
+/var/account(/.*)?	gen_context(system_u:object_r:acct_data_t,s0)
+
+/var/log/account(/.*)?	gen_context(system_u:object_r:acct_data_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/acct.if refpolicy/policy/modules/contrib/acct.if
--- refpolicy/policy/modules/contrib/acct.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/acct.if	2012-09-27 20:03:30.721126498 +0200
@@ -1,8 +1,9 @@
-## <summary>Berkeley process accounting</summary>
+## <summary>Berkeley process accounting.</summary>
 
 ########################################
 ## <summary>
-##	Transition to the accounting management domain.
+##	Transition to the accounting
+##	management domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -21,7 +22,8 @@
 
 ########################################
 ## <summary>
-##	Execute accounting management tools in the caller domain.
+##	Execute accounting management tools
+##	in the caller domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -40,7 +42,8 @@
 
 ########################################
 ## <summary>
-##	Execute accounting management data in the caller domain.
+##	Execute accounting management data
+##	in the caller domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -48,8 +51,6 @@
 ##	</summary>
 ## </param>
 #
-# cjp: this is added for logrotate, and does
-# not make sense to me.
 interface(`acct_exec_data',`
 	gen_require(`
 		type acct_data_t;
@@ -61,7 +62,8 @@
 
 ########################################
 ## <summary>
-##	Create, read, write, and delete process accounting data.
+##	Create, read, write, and delete
+##	process accounting data.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -78,3 +80,37 @@
 	manage_files_pattern($1, acct_data_t, acct_data_t)
 	manage_lnk_files_pattern($1, acct_data_t, acct_data_t)
 ')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an acct environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`acct_admin',`
+	gen_require(`
+		type acct_t, acct_initrc_exec_t, acct_data_t;
+	')
+
+	allow $1 acct_t:process { ptrace signal_perms };
+	ps_process_pattern($1, acct_t)
+
+	init_labeled_script_domtrans($1, acct_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 acct_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, acct_data_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/acct.te refpolicy/policy/modules/contrib/acct.te
--- refpolicy/policy/modules/contrib/acct.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/acct.te	2012-09-27 20:03:30.721126498 +0200
@@ -1,4 +1,4 @@
-policy_module(acct, 1.5.0)
+policy_module(acct, 1.5.1)
 
 ########################################
 #
@@ -9,6 +9,9 @@
 type acct_exec_t;
 init_system_domain(acct_t, acct_exec_t)
 
+type acct_initrc_exec_t;
+init_script_file(acct_initrc_exec_t)
+
 type acct_data_t;
 logging_log_file(acct_data_t)
 
@@ -17,13 +20,10 @@
 # Local Policy
 #
 
-# gzip needs chown capability for some reason
-allow acct_t self:capability { sys_pacct chown fsetid };
-# not sure why we need kill, the command "last" is reported as using it
-dontaudit acct_t self:capability { kill sys_tty_config };
-
-allow acct_t self:fifo_file rw_fifo_file_perms;
+allow acct_t self:capability { chown fsetid kill sys_pacct };
+dontaudit acct_t self:capability sys_tty_config;
 allow acct_t self:process signal_perms;
+allow acct_t self:fifo_file rw_fifo_file_perms;
 
 manage_files_pattern(acct_t, acct_data_t, acct_data_t)
 manage_lnk_files_pattern(acct_t, acct_data_t, acct_data_t)
@@ -34,26 +34,24 @@
 kernel_read_system_state(acct_t)
 kernel_read_kernel_sysctls(acct_t)
 
+corecmd_exec_bin(acct_t)
+corecmd_exec_shell(acct_t)
+
 dev_read_sysfs(acct_t)
-# for SSP
 dev_read_urand(acct_t)
 
+domain_use_interactive_fds(acct_t)
+
 fs_search_auto_mountpoints(acct_t)
 fs_getattr_xattr_fs(acct_t)
 
 term_dontaudit_use_console(acct_t)
 term_dontaudit_use_generic_ptys(acct_t)
 
-corecmd_exec_bin(acct_t)
-corecmd_exec_shell(acct_t)
-
-domain_use_interactive_fds(acct_t)
-
-files_read_etc_files(acct_t)
 files_read_etc_runtime_files(acct_t)
 files_list_usr(acct_t)
-# for nscd
-files_dontaudit_search_pids(acct_t)
+
+auth_use_nsswitch(acct_t)
 
 init_use_fds(acct_t)
 init_use_script_ptys(acct_t)
@@ -63,8 +61,8 @@
 
 miscfiles_read_localization(acct_t)
 
-userdom_dontaudit_use_unpriv_user_fds(acct_t)
 userdom_dontaudit_search_user_home_dirs(acct_t)
+userdom_dontaudit_use_unpriv_user_fds(acct_t)
 
 optional_policy(`
 	optional_policy(`
@@ -77,10 +75,6 @@
 ')
 
 optional_policy(`
-	nscd_socket_use(acct_t)
-')
-
-optional_policy(`
 	seutil_sigchld_newrole(acct_t)
 ')
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ada.fc refpolicy/policy/modules/contrib/ada.fc
--- refpolicy/policy/modules/contrib/ada.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/ada.fc	2012-09-27 20:03:30.722126498 +0200
@@ -1,7 +1,5 @@
-#
-# /usr
-#
 /usr/bin/gnatbind	--	gen_context(system_u:object_r:ada_exec_t,s0)
-/usr/bin/gnatls		--	gen_context(system_u:object_r:ada_exec_t,s0)
+/usr/bin/gnatls	--	gen_context(system_u:object_r:ada_exec_t,s0)
 /usr/bin/gnatmake	--	gen_context(system_u:object_r:ada_exec_t,s0)
-/usr/libexec/gcc(/.*)?/gnat1 -- gen_context(system_u:object_r:ada_exec_t,s0)
+
+/usr/libexec/gcc(/.*)?/gnat1	--	gen_context(system_u:object_r:ada_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ada.if refpolicy/policy/modules/contrib/ada.if
--- refpolicy/policy/modules/contrib/ada.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/ada.if	2012-09-27 20:03:30.722126498 +0200
@@ -1,4 +1,4 @@
-## <summary>GNAT Ada95 compiler</summary>
+## <summary>GNAT Ada95 compiler.</summary>
 
 ########################################
 ## <summary>
@@ -37,9 +37,9 @@
 #
 interface(`ada_run',`
 	gen_require(`
-		type ada_t;
+		attribute_role ada_roles;
 	')
 
 	ada_domtrans($1)
-	role $2 types ada_t;
+	roleattribute $2 ada_roles;
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ada.te refpolicy/policy/modules/contrib/ada.te
--- refpolicy/policy/modules/contrib/ada.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/ada.te	2012-09-27 20:03:30.722126498 +0200
@@ -1,14 +1,17 @@
-policy_module(ada, 1.4.0)
+policy_module(ada, 1.4.1)
 
 ########################################
 #
 # Declarations
 #
 
+attribute_role ada_roles;
+roleattribute system_r ada_roles;
+
 type ada_t;
 type ada_exec_t;
 application_domain(ada_t, ada_exec_t)
-role system_r types ada_t;
+role ada_roles types ada_t;
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/afs.fc refpolicy/policy/modules/contrib/afs.fc
--- refpolicy/policy/modules/contrib/afs.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/afs.fc	2012-09-27 20:03:30.722126498 +0200
@@ -1,5 +1,7 @@
-/etc/rc\.d/init\.d/openafs-client -- gen_context(system_u:object_r:afs_initrc_exec_t,s0)
-/etc/rc\.d/init\.d/afs	--	gen_context(system_u:object_r:afs_initrc_exec_t,s0)
+/etc/(open)?afs(/.*)?	gen_context(system_u:object_r:afs_config_t,s0)
+
+/etc/rc\.d/init\.d/openafs-client	--	gen_context(system_u:object_r:afs_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/(open)?afs	--	gen_context(system_u:object_r:afs_initrc_exec_t,s0)
 
 /usr/afs/bin/bosserver	--	gen_context(system_u:object_r:afs_bosserver_exec_t,s0)
 /usr/afs/bin/fileserver	--	gen_context(system_u:object_r:afs_fsserver_exec_t,s0)
@@ -9,24 +11,32 @@
 /usr/afs/bin/volserver	--	gen_context(system_u:object_r:afs_fsserver_exec_t,s0)
 /usr/afs/bin/vlserver	--	gen_context(system_u:object_r:afs_vlserver_exec_t,s0)
 
-/usr/afs/db		-d	gen_context(system_u:object_r:afs_dbdir_t,s0)
+/usr/afs/db	-d	gen_context(system_u:object_r:afs_dbdir_t,s0)
 /usr/afs/db/pr.*	--	gen_context(system_u:object_r:afs_pt_db_t,s0)
 /usr/afs/db/ka.*	--	gen_context(system_u:object_r:afs_ka_db_t,s0)
 /usr/afs/db/vl.*	--	gen_context(system_u:object_r:afs_vl_db_t,s0)
 
-/usr/afs/etc(/.*)?		gen_context(system_u:object_r:afs_config_t,s0)
+/usr/afs/etc(/.*)?	gen_context(system_u:object_r:afs_config_t,s0)
+
+/usr/afs/local(/.*)?	gen_context(system_u:object_r:afs_config_t,s0)
 
-/usr/afs/local(/.*)?		gen_context(system_u:object_r:afs_config_t,s0)
+/usr/afs/logs(/.*)?	gen_context(system_u:object_r:afs_logfile_t,s0)
 
-/usr/afs/logs(/.*)?		gen_context(system_u:object_r:afs_logfile_t,s0)
+/usr/libexec/openafs/fileserver	--	gen_context(system_u:object_r:afs_fsserver_exec_t,s0)
+/usr/libexec/openafs/kaserver	--	gen_context(system_u:object_r:afs_kaserver_exec_t,s0)
+/usr/libexec/openafs/ptserver	--	gen_context(system_u:object_r:afs_ptserver_exec_t,s0)
+/usr/libexec/openafs/salvager	--	gen_context(system_u:object_r:afs_fsserver_exec_t,s0)
+/usr/libexec/openafs/volserver	--	gen_context(system_u:object_r:afs_fsserver_exec_t,s0)
+/usr/libexec/openafs/vlserver	--	gen_context(system_u:object_r:afs_vlserver_exec_t,s0)
 
-/usr/sbin/afsd		--	gen_context(system_u:object_r:afs_exec_t,s0)
+/usr/sbin/afsd	--	gen_context(system_u:object_r:afs_exec_t,s0)
+/usr/sbin/bosserver	--	gen_context(system_u:object_r:afs_bosserver_exec_t,s0)
 
-/usr/vice/cache(/.*)?		gen_context(system_u:object_r:afs_cache_t,s0)
+/usr/vice/cache(/.*)?	gen_context(system_u:object_r:afs_cache_t,s0)
 /usr/vice/etc/afsd	--	gen_context(system_u:object_r:afs_exec_t,s0)
 
-/var/cache/afs(/.*)?		gen_context(system_u:object_r:afs_cache_t,s0)
+/var/cache/(open)?afs(/.*)?	gen_context(system_u:object_r:afs_cache_t,s0)
 
-/vicepa				gen_context(system_u:object_r:afs_files_t,s0)
-/vicepb				gen_context(system_u:object_r:afs_files_t,s0)
-/vicepc				gen_context(system_u:object_r:afs_files_t,s0)
+/vicepa	gen_context(system_u:object_r:afs_files_t,s0)
+/vicepb	gen_context(system_u:object_r:afs_files_t,s0)
+/vicepc	gen_context(system_u:object_r:afs_files_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/afs.if refpolicy/policy/modules/contrib/afs.if
--- refpolicy/policy/modules/contrib/afs.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/afs.if	2012-09-27 20:03:30.722126498 +0200
@@ -1,4 +1,4 @@
-## <summary>Andrew Filesystem server</summary>
+## <summary>Andrew Filesystem server.</summary>
 
 ########################################
 ## <summary>
@@ -40,7 +40,7 @@
 
 ########################################
 ## <summary>
-##	read/write afs cache files
+##	Read and write afs cache files.
 ## </summary>
 ## <param name="domain">
 ## <summary>
@@ -77,8 +77,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate 
-##	an afs environment
+##	All of the rules required to
+##	administrate an afs environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -87,23 +87,39 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the afs domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
 #
 interface(`afs_admin',`
 	gen_require(`
-		type afs_t, afs_initrc_exec_t;
+		attribute afs_domain;
+		type afs_initrc_exec_t, afs_dbdir_t, afs_pt_db_t;
+		type afs_ka_db_t, afs_vl_db_t, afs_config_t;
+		type afs_logfile_t, afs_cache_t, afs_files_t;
 	')
 
-	allow $1 afs_t:process { ptrace signal_perms getattr };
-	read_files_pattern($1, afs_t, afs_t)
+	allow $1 afs_domain:process { ptrace signal_perms };
+	ps_process_pattern($1, afs_domain)
 
-	# Allow afs_admin to restart the afs service
 	afs_initrc_domtrans($1)
 	domain_system_change_exemption($1)
 	role_transition $2 afs_initrc_exec_t system_r;
 	allow $2 system_r;
 
+	files_search_etc($1)
+	admin_pattern($1, afs_config_t)
+
+	files_search_var($1)
+	admin_pattern($1, afs_cache_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, { afs_dbdir_t afs_pt_db_t afs_ka_db_t })
+	admin_pattern($1, afs_vl_db_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, afs_logfile_t)
+
+	admin_pattern($1, afs_files_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/afs.te refpolicy/policy/modules/contrib/afs.te
--- refpolicy/policy/modules/contrib/afs.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/afs.te	2012-09-27 20:03:30.722126498 +0200
@@ -1,15 +1,17 @@
-policy_module(afs, 1.7.0)
+policy_module(afs, 1.8.2)
 
 ########################################
 #
 # Declarations
 #
 
-type afs_t;
+attribute afs_domain;
+
+type afs_t, afs_domain;
 type afs_exec_t;
 init_daemon_domain(afs_t, afs_exec_t)
 
-type afs_bosserver_t;
+type afs_bosserver_t, afs_domain;
 type afs_bosserver_exec_t;
 init_daemon_domain(afs_bosserver_t, afs_bosserver_exec_t)
 
@@ -26,7 +28,7 @@
 type afs_files_t;
 files_type(afs_files_t)
 
-type afs_fsserver_t;
+type afs_fsserver_t, afs_domain;
 type afs_fsserver_exec_t;
 domain_type(afs_fsserver_t)
 domain_entry_file(afs_fsserver_t, afs_fsserver_exec_t)
@@ -38,7 +40,7 @@
 type afs_ka_db_t;
 files_type(afs_ka_db_t)
 
-type afs_kaserver_t;
+type afs_kaserver_t, afs_domain;
 type afs_kaserver_exec_t;
 domain_type(afs_kaserver_t)
 domain_entry_file(afs_kaserver_t, afs_kaserver_exec_t)
@@ -50,7 +52,7 @@
 type afs_pt_db_t;
 files_type(afs_pt_db_t)
 
-type afs_ptserver_t;
+type afs_ptserver_t, afs_domain;
 type afs_ptserver_exec_t;
 domain_type(afs_ptserver_t)
 domain_entry_file(afs_ptserver_t, afs_ptserver_exec_t)
@@ -59,7 +61,7 @@
 type afs_vl_db_t;
 files_type(afs_vl_db_t)
 
-type afs_vlserver_t;
+type afs_vlserver_t, afs_domain;
 type afs_vlserver_exec_t;
 domain_type(afs_vlserver_t)
 domain_entry_file(afs_vlserver_t, afs_vlserver_exec_t)
@@ -70,11 +72,10 @@
 # afs client local policy
 #
 
-allow afs_t self:capability { sys_admin sys_nice sys_tty_config };
+allow afs_t self:capability { dac_override sys_admin sys_nice sys_tty_config };
 allow afs_t self:process { setsched signal };
-allow afs_t self:udp_socket create_socket_perms;
 allow afs_t self:fifo_file rw_file_perms;
-allow afs_t self:unix_stream_socket create_stream_socket_perms;
+allow afs_t self:unix_stream_socket { accept listen };
 
 manage_files_pattern(afs_t, afs_cache_t, afs_cache_t)
 manage_dirs_pattern(afs_t, afs_cache_t, afs_cache_t)
@@ -82,18 +83,7 @@
 
 kernel_rw_afs_state(afs_t)
 
-corenet_all_recvfrom_unlabeled(afs_t)
-corenet_all_recvfrom_netlabel(afs_t)
-corenet_tcp_sendrecv_generic_if(afs_t)
-corenet_udp_sendrecv_generic_if(afs_t)
-corenet_tcp_sendrecv_generic_node(afs_t)
-corenet_udp_sendrecv_generic_node(afs_t)
-corenet_tcp_sendrecv_all_ports(afs_t)
-corenet_udp_sendrecv_all_ports(afs_t)
-corenet_udp_bind_generic_node(afs_t)
-
 files_mounton_mnt(afs_t)
-files_read_etc_files(afs_t)
 files_read_usr_files(afs_t)
 files_rw_etc_runtime_files(afs_t)
 
@@ -103,10 +93,6 @@
 
 logging_send_syslog_msg(afs_t)
 
-miscfiles_read_localization(afs_t)
-
-sysnet_dns_name_resolve(afs_t)
-
 ########################################
 #
 # AFS bossserver local policy
@@ -114,7 +100,6 @@
 
 allow afs_bosserver_t self:process { setsched signal_perms };
 allow afs_bosserver_t self:tcp_socket create_stream_socket_perms;
-allow afs_bosserver_t self:udp_socket create_socket_perms;
 
 can_exec(afs_bosserver_t, afs_bosserver_exec_t)
 
@@ -142,26 +127,19 @@
 
 corenet_all_recvfrom_unlabeled(afs_bosserver_t)
 corenet_all_recvfrom_netlabel(afs_bosserver_t)
-corenet_tcp_sendrecv_generic_if(afs_bosserver_t)
 corenet_udp_sendrecv_generic_if(afs_bosserver_t)
-corenet_tcp_sendrecv_generic_node(afs_bosserver_t)
 corenet_udp_sendrecv_generic_node(afs_bosserver_t)
-corenet_tcp_sendrecv_all_ports(afs_bosserver_t)
-corenet_udp_sendrecv_all_ports(afs_bosserver_t)
 corenet_udp_bind_generic_node(afs_bosserver_t)
+
 corenet_udp_bind_afs_bos_port(afs_bosserver_t)
 corenet_sendrecv_afs_bos_server_packets(afs_bosserver_t)
+corenet_udp_sendrecv_afs_bos_port(afs_bosserver_t)
 
-files_read_etc_files(afs_bosserver_t)
 files_list_home(afs_bosserver_t)
 files_read_usr_files(afs_bosserver_t)
 
-miscfiles_read_localization(afs_bosserver_t)
-
 seutil_read_config(afs_bosserver_t)
 
-sysnet_read_config(afs_bosserver_t)
-
 ########################################
 #
 # fileserver local policy
@@ -172,7 +150,6 @@
 allow afs_fsserver_t self:process { setsched signal_perms };
 allow afs_fsserver_t self:fifo_file rw_fifo_file_perms;
 allow afs_fsserver_t self:tcp_socket create_stream_socket_perms;
-allow afs_fsserver_t self:udp_socket create_socket_perms;
 
 read_files_pattern(afs_fsserver_t, afs_config_t, afs_config_t)
 allow afs_fsserver_t afs_config_t:dir list_dir_perms;
@@ -196,21 +173,21 @@
 kernel_read_system_state(afs_fsserver_t)
 kernel_read_kernel_sysctls(afs_fsserver_t)
 
+corenet_all_recvfrom_unlabeled(afs_fsserver_t)
+corenet_all_recvfrom_netlabel(afs_fsserver_t)
 corenet_tcp_sendrecv_generic_if(afs_fsserver_t)
 corenet_udp_sendrecv_generic_if(afs_fsserver_t)
 corenet_tcp_sendrecv_generic_node(afs_fsserver_t)
 corenet_udp_sendrecv_generic_node(afs_fsserver_t)
-corenet_tcp_sendrecv_all_ports(afs_fsserver_t)
-corenet_udp_sendrecv_all_ports(afs_fsserver_t)
-corenet_all_recvfrom_unlabeled(afs_fsserver_t)
-corenet_all_recvfrom_netlabel(afs_fsserver_t)
 corenet_tcp_bind_generic_node(afs_fsserver_t)
 corenet_udp_bind_generic_node(afs_fsserver_t)
+
+corenet_sendrecv_afs_fs_server_packets(afs_fsserver_t)
 corenet_tcp_bind_afs_fs_port(afs_fsserver_t)
 corenet_udp_bind_afs_fs_port(afs_fsserver_t)
-corenet_sendrecv_afs_fs_server_packets(afs_fsserver_t)
+corenet_tcp_sendrecv_afs_fs_port(afs_fsserver_t)
+corenet_udp_sendrecv_afs_fs_port(afs_fsserver_t)
 
-files_read_etc_files(afs_fsserver_t)
 files_read_etc_runtime_files(afs_fsserver_t)
 files_list_home(afs_fsserver_t)
 files_read_usr_files(afs_fsserver_t)
@@ -225,12 +202,8 @@
 
 logging_send_syslog_msg(afs_fsserver_t)
 
-miscfiles_read_localization(afs_fsserver_t)
-
 seutil_read_config(afs_fsserver_t)
 
-sysnet_read_config(afs_fsserver_t)
-
 userdom_dontaudit_use_user_terminals(afs_fsserver_t)
 
 ########################################
@@ -240,7 +213,6 @@
 
 allow afs_kaserver_t self:unix_stream_socket create_stream_socket_perms;
 allow afs_kaserver_t self:tcp_socket create_stream_socket_perms;
-allow afs_kaserver_t self:udp_socket create_socket_perms;
 
 manage_files_pattern(afs_kaserver_t, afs_config_t, afs_config_t)
 
@@ -254,28 +226,23 @@
 
 corenet_all_recvfrom_unlabeled(afs_kaserver_t)
 corenet_all_recvfrom_netlabel(afs_kaserver_t)
-corenet_tcp_sendrecv_generic_if(afs_kaserver_t)
 corenet_udp_sendrecv_generic_if(afs_kaserver_t)
-corenet_tcp_sendrecv_generic_node(afs_kaserver_t)
 corenet_udp_sendrecv_generic_node(afs_kaserver_t)
-corenet_tcp_sendrecv_all_ports(afs_kaserver_t)
-corenet_udp_sendrecv_all_ports(afs_kaserver_t)
 corenet_udp_bind_generic_node(afs_kaserver_t)
-corenet_udp_bind_afs_ka_port(afs_kaserver_t)
-corenet_udp_bind_kerberos_port(afs_kaserver_t)
+
 corenet_sendrecv_afs_ka_server_packets(afs_kaserver_t)
+corenet_udp_bind_afs_ka_port(afs_kaserver_t)
+corenet_udp_sendrecv_afs_ka_port(afs_kaserver_t)
+
 corenet_sendrecv_kerberos_server_packets(afs_kaserver_t)
+corenet_udp_bind_kerberos_port(afs_kaserver_t)
+corenet_udp_sendrecv_kerberos_port(afs_kaserver_t)
 
-files_read_etc_files(afs_kaserver_t)
 files_list_home(afs_kaserver_t)
 files_read_usr_files(afs_kaserver_t)
 
-miscfiles_read_localization(afs_kaserver_t)
-
 seutil_read_config(afs_kaserver_t)
 
-sysnet_read_config(afs_kaserver_t)
-
 userdom_dontaudit_use_user_terminals(afs_kaserver_t)
 
 ########################################
@@ -285,7 +252,6 @@
 
 allow afs_ptserver_t self:unix_stream_socket create_stream_socket_perms;
 allow afs_ptserver_t self:tcp_socket create_stream_socket_perms;
-allow afs_ptserver_t self:udp_socket create_socket_perms;
 
 read_files_pattern(afs_ptserver_t, afs_config_t, afs_config_t)
 allow afs_ptserver_t afs_config_t:dir list_dir_perms;
@@ -308,12 +274,6 @@
 corenet_udp_bind_afs_pt_port(afs_ptserver_t)
 corenet_sendrecv_afs_pt_server_packets(afs_ptserver_t)
 
-files_read_etc_files(afs_ptserver_t)
-
-miscfiles_read_localization(afs_ptserver_t)
-
-sysnet_read_config(afs_ptserver_t)
-
 userdom_dontaudit_use_user_terminals(afs_ptserver_t)
 
 ########################################
@@ -323,7 +283,6 @@
 
 allow afs_vlserver_t self:unix_stream_socket create_stream_socket_perms;
 allow afs_vlserver_t self:tcp_socket create_stream_socket_perms;
-allow afs_vlserver_t self:udp_socket create_socket_perms;
 
 read_files_pattern(afs_vlserver_t, afs_config_t, afs_config_t)
 allow afs_vlserver_t afs_config_t:dir list_dir_perms;
@@ -346,10 +305,17 @@
 corenet_udp_bind_afs_vl_port(afs_vlserver_t)
 corenet_sendrecv_afs_vl_server_packets(afs_vlserver_t)
 
-files_read_etc_files(afs_vlserver_t)
+userdom_dontaudit_use_user_terminals(afs_vlserver_t)
+
+########################################
+#
+# Global local policy
+#
+
+allow afs_domain self:udp_socket create_socket_perms;
 
-miscfiles_read_localization(afs_vlserver_t)
+files_read_etc_files(afs_domain)
 
-sysnet_read_config(afs_vlserver_t)
+miscfiles_read_localization(afs_domain)
 
-userdom_dontaudit_use_user_terminals(afs_vlserver_t)
+sysnet_read_config(afs_domain)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/aiccu.fc refpolicy/policy/modules/contrib/aiccu.fc
--- refpolicy/policy/modules/contrib/aiccu.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/aiccu.fc	2012-09-27 20:03:30.722126498 +0200
@@ -1,6 +1,7 @@
-/etc/aiccu.conf			--	gen_context(system_u:object_r:aiccu_etc_t,s0)
+/etc/aiccu\.conf	--	gen_context(system_u:object_r:aiccu_etc_t,s0)
+
 /etc/rc\.d/init\.d/aiccu	--	gen_context(system_u:object_r:aiccu_initrc_exec_t,s0)
 
-/usr/sbin/aiccu			--	gen_context(system_u:object_r:aiccu_exec_t,s0)
+/usr/sbin/aiccu	--	gen_context(system_u:object_r:aiccu_exec_t,s0)
 
-/var/run/aiccu\.pid		--	gen_context(system_u:object_r:aiccu_var_run_t,s0)
+/var/run/aiccu\.pid	--	gen_context(system_u:object_r:aiccu_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/aiccu.if refpolicy/policy/modules/contrib/aiccu.if
--- refpolicy/policy/modules/contrib/aiccu.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/aiccu.if	2012-09-27 20:03:30.723126498 +0200
@@ -58,8 +58,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an aiccu environment
+##	All of the rules required to
+##	administrate an aiccu environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/aiccu.te refpolicy/policy/modules/contrib/aiccu.te
--- refpolicy/policy/modules/contrib/aiccu.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/aiccu.te	2012-09-27 20:03:30.723126498 +0200
@@ -1,4 +1,4 @@
-policy_module(aiccu, 1.0.0)
+policy_module(aiccu, 1.0.1)
 
 ########################################
 #
@@ -20,7 +20,7 @@
 
 ########################################
 #
-# aiccu local policy
+# Local policy
 #
 
 allow aiccu_t self:capability { kill net_admin net_raw };
@@ -31,7 +31,7 @@
 allow aiccu_t self:tcp_socket create_stream_socket_perms;
 allow aiccu_t self:tun_socket create_socket_perms;
 allow aiccu_t self:udp_socket create_stream_socket_perms;
-allow aiccu_t self:unix_stream_socket create_stream_socket_perms;
+allow aiccu_t self:unix_stream_socket { accept listen };
 
 allow aiccu_t aiccu_etc_t:file read_file_perms;
 
@@ -45,13 +45,13 @@
 
 corenet_all_recvfrom_netlabel(aiccu_t)
 corenet_all_recvfrom_unlabeled(aiccu_t)
+corenet_tcp_bind_generic_node(aiccu_t)
 corenet_tcp_sendrecv_generic_if(aiccu_t)
 corenet_tcp_sendrecv_generic_node(aiccu_t)
-corenet_tcp_sendrecv_generic_port(aiccu_t)
-corenet_tcp_sendrecv_sixxsconfig_port(aiccu_t)
-corenet_tcp_bind_generic_node(aiccu_t)
-corenet_tcp_connect_sixxsconfig_port(aiccu_t)
+
 corenet_sendrecv_sixxsconfig_client_packets(aiccu_t)
+corenet_tcp_connect_sixxsconfig_port(aiccu_t)
+corenet_tcp_sendrecv_sixxsconfig_port(aiccu_t)
 
 corenet_rw_tun_tap_dev(aiccu_t)
 
@@ -71,6 +71,6 @@
 ')
 
 optional_policy(`
-	sysnet_domtrans_ifconfig(aiccu_t)
 	sysnet_dns_name_resolve(aiccu_t)
+	sysnet_domtrans_ifconfig(aiccu_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/aide.fc refpolicy/policy/modules/contrib/aide.fc
--- refpolicy/policy/modules/contrib/aide.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/aide.fc	2012-09-27 20:03:30.723126498 +0200
@@ -1,6 +1,6 @@
-/usr/sbin/aide		--	gen_context(system_u:object_r:aide_exec_t,mls_systemhigh)
+/usr/sbin/aide	--	gen_context(system_u:object_r:aide_exec_t,mls_systemhigh)
 
-/var/lib/aide(/.*)		gen_context(system_u:object_r:aide_db_t,mls_systemhigh)
+/var/lib/aide(/.*)	gen_context(system_u:object_r:aide_db_t,mls_systemhigh)
 
-/var/log/aide(/.*)?		gen_context(system_u:object_r:aide_log_t,mls_systemhigh)
+/var/log/aide(/.*)?	gen_context(system_u:object_r:aide_log_t,mls_systemhigh)
 /var/log/aide\.log	--	gen_context(system_u:object_r:aide_log_t,mls_systemhigh)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/aide.if refpolicy/policy/modules/contrib/aide.if
--- refpolicy/policy/modules/contrib/aide.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/aide.if	2012-09-27 20:03:30.723126498 +0200
@@ -1,8 +1,8 @@
-## <summary>Aide filesystem integrity checker</summary>
+## <summary>Aide filesystem integrity checker.</summary>
 
 ########################################
 ## <summary>
-##	Execute aide in the aide domain
+##	Execute aide in the aide domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -21,7 +21,9 @@
 
 ########################################
 ## <summary>
-##	Execute aide programs in the AIDE domain.
+##	Execute aide programs in the AIDE
+##	domain and allow the specified role
+##	the AIDE domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -30,29 +32,34 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to allow the AIDE domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 #
 interface(`aide_run',`
 	gen_require(`
-		type aide_t;
+		attribute_role aide_roles;
 	')
 
 	aide_domtrans($1)
-	role $2 types aide_t;
+	roleattribute $2 aide_roles;
 ')
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate 
-##	an aide environment
+##	All of the rules required to
+##	administrate an aide environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
 ## <rolecap/>
 #
 interface(`aide_admin',`
@@ -63,6 +70,8 @@
 	allow $1 aide_t:process { ptrace signal_perms };
 	ps_process_pattern($1, aide_t)
 
+	aide_run($1, $2)
+
 	files_list_etc($1)
 	admin_pattern($1, aide_db_t)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/aide.te refpolicy/policy/modules/contrib/aide.te
--- refpolicy/policy/modules/contrib/aide.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/aide.te	2012-09-27 20:03:30.723126498 +0200
@@ -1,42 +1,45 @@
-policy_module(aide, 1.6.0)
+policy_module(aide, 1.6.1)
 
 ########################################
 #
 # Declarations
 #
 
+attribute_role aide_roles;
+
 type aide_t;
 type aide_exec_t;
 application_domain(aide_t, aide_exec_t)
+role aide_roles types aide_t;
 
-# log files
 type aide_log_t;
 logging_log_file(aide_log_t)
 
-# aide database
 type aide_db_t;
 files_type(aide_db_t)
 
 ########################################
 #
-# aide local policy
+# Local policy
 #
 
 allow aide_t self:capability { dac_override fowner };
 
-# database actions
 manage_files_pattern(aide_t, aide_db_t, aide_db_t)
 
-# logs
-manage_files_pattern(aide_t, aide_log_t, aide_log_t)
+create_files_pattern(aide_t, aide_log_t, aide_log_t)
+append_files_pattern(aide_t, aide_log_t, aide_log_t)
+setattr_files_pattern(aide_t, aide_log_t, aide_log_t)
 logging_log_filetrans(aide_t, aide_log_t, file)
 
 files_read_all_files(aide_t)
+files_read_all_symlinks(aide_t)
 
 logging_send_audit_msgs(aide_t)
-# AIDE can be configured to log to syslog
 logging_send_syslog_msg(aide_t)
 
-seutil_use_newrole_fds(aide_t)
-
 userdom_use_user_terminals(aide_t)
+
+optional_policy(`
+	seutil_use_newrole_fds(aide_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/aisexec.fc refpolicy/policy/modules/contrib/aisexec.fc
--- refpolicy/policy/modules/contrib/aisexec.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/aisexec.fc	2012-09-27 20:03:30.723126498 +0200
@@ -1,9 +1,9 @@
-/etc/rc\.d/init\.d/openais		--	gen_context(system_u:object_r:aisexec_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/openais	--	gen_context(system_u:object_r:aisexec_initrc_exec_t,s0)
 
-/usr/sbin/aisexec			--	gen_context(system_u:object_r:aisexec_exec_t,s0)
+/usr/sbin/aisexec	--	gen_context(system_u:object_r:aisexec_exec_t,s0)
 
-/var/lib/openais(/.*)?				gen_context(system_u:object_r:aisexec_var_lib_t,s0)
+/var/lib/openais(/.*)?	gen_context(system_u:object_r:aisexec_var_lib_t,s0)
 
-/var/log/cluster/aisexec\.log		--	gen_context(system_u:object_r:aisexec_var_log_t,s0)
+/var/log/cluster/aisexec\.log.*	--	gen_context(system_u:object_r:aisexec_var_log_t,s0)
 
-/var/run/aisexec\.pid			--	gen_context(system_u:object_r:aisexec_var_run_t,s0)
+/var/run/aisexec.*	gen_context(system_u:object_r:aisexec_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/aisexec.if refpolicy/policy/modules/contrib/aisexec.if
--- refpolicy/policy/modules/contrib/aisexec.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/aisexec.if	2012-09-27 20:03:30.723126498 +0200
@@ -1,4 +1,4 @@
-## <summary>Aisexec Cluster Engine</summary>
+## <summary>Aisexec Cluster Engine.</summary>
 
 ########################################
 ## <summary>
@@ -15,12 +15,13 @@
 		type aisexec_t, aisexec_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, aisexec_exec_t, aisexec_t)
 ')
 
 #####################################
 ## <summary>
-##	Connect to aisexec over a unix domain
+##	Connect to aisexec over a unix
 ##	stream socket.
 ## </summary>
 ## <param name="domain">
@@ -40,7 +41,7 @@
 
 #######################################
 ## <summary>
-##	Allow the specified domain to read aisexec's log files.
+##	Read aisexec log files content.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -60,8 +61,8 @@
 
 ######################################
 ## <summary>
-##	All of the rules required to administrate
-##	an aisexec environment
+##	All of the rules required to
+##	administrate an aisexec environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -70,7 +71,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the aisexecd domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/aisexec.te refpolicy/policy/modules/contrib/aisexec.te
--- refpolicy/policy/modules/contrib/aisexec.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/aisexec.te	2012-09-27 20:03:30.724126498 +0200
@@ -1,4 +1,4 @@
-policy_module(aisexec, 1.1.0)
+policy_module(aisexec, 1.1.1)
 
 ########################################
 #
@@ -29,20 +29,18 @@
 
 ########################################
 #
-# aisexec local policy
+# Local policy
 #
 
 allow aisexec_t self:capability { sys_nice sys_resource ipc_lock ipc_owner };
 allow aisexec_t self:process { setrlimit setsched signal };
 allow aisexec_t self:fifo_file rw_fifo_file_perms;
 allow aisexec_t self:sem create_sem_perms;
-allow aisexec_t self:unix_stream_socket { create_stream_socket_perms connectto };
-allow aisexec_t self:unix_dgram_socket create_socket_perms;
-allow aisexec_t self:udp_socket create_socket_perms;
+allow aisexec_t self:unix_stream_socket { accept listen connectto };
 
 manage_dirs_pattern(aisexec_t, aisexec_tmp_t, aisexec_tmp_t)
 manage_files_pattern(aisexec_t, aisexec_tmp_t, aisexec_tmp_t)
-files_tmp_filetrans(aisexec_t, aisexec_tmp_t, { file dir })
+files_tmp_filetrans(aisexec_t, aisexec_tmp_t, { dir file })
 
 manage_dirs_pattern(aisexec_t, aisexec_tmpfs_t, aisexec_tmpfs_t)
 manage_files_pattern(aisexec_t, aisexec_tmpfs_t, aisexec_tmpfs_t)
@@ -51,11 +49,12 @@
 manage_files_pattern(aisexec_t, aisexec_var_lib_t, aisexec_var_lib_t)
 manage_dirs_pattern(aisexec_t, aisexec_var_lib_t, aisexec_var_lib_t)
 manage_sock_files_pattern(aisexec_t, aisexec_var_lib_t, aisexec_var_lib_t)
-files_var_lib_filetrans(aisexec_t, aisexec_var_lib_t, { file dir sock_file })
+files_var_lib_filetrans(aisexec_t, aisexec_var_lib_t, dir)
 
-manage_files_pattern(aisexec_t, aisexec_var_log_t, aisexec_var_log_t)
-manage_sock_files_pattern(aisexec_t, aisexec_var_log_t, aisexec_var_log_t)
-logging_log_filetrans(aisexec_t, aisexec_var_log_t, { sock_file file })
+append_files_pattern(aisexec_t, aisexec_var_log_t, aisexec_var_log_t)
+create_files_pattern(aisexec_t, aisexec_var_log_t, aisexec_var_log_t)
+setattr_files_pattern(aisexec_t, aisexec_var_log_t, aisexec_var_log_t)
+logging_log_filetrans(aisexec_t, aisexec_var_log_t, file)
 
 manage_files_pattern(aisexec_t, aisexec_var_run_t, aisexec_var_run_t)
 manage_sock_files_pattern(aisexec_t, aisexec_var_run_t, aisexec_var_run_t)
@@ -65,9 +64,26 @@
 
 corecmd_exec_bin(aisexec_t)
 
+corenet_all_recvfrom_unlabeled(aisexec_t)
+corenet_all_recvfrom_netlabel(aisexec_t)
+corenet_tcp_sendrecv_generic_if(aisexec_t)
+corenet_udp_sendrecv_generic_if(aisexec_t)
+corenet_tcp_sendrecv_generic_node(aisexec_t)
+corenet_udp_sendrecv_generic_node(aisexec_t)
+corenet_tcp_bind_generic_node(aisexec_t)
+corenet_udp_bind_generic_node(aisexec_t)
+
+corenet_sendrecv_netsupport_server_packets(aisexec_t)
 corenet_udp_bind_netsupport_port(aisexec_t)
+corenet_udp_sendrecv_netsupport_port(aisexec_t)
+
+corenet_sendrecv_generic_server_packets(aisexec_t)
 corenet_tcp_bind_reserved_port(aisexec_t)
+corenet_tcp_sendrecv_reserved_port(aisexec_t)
+
+corenet_sendrecv_cluster_server_packets(aisexec_t)
 corenet_udp_bind_cluster_port(aisexec_t)
+corenet_udp_sendrecv_cluster_port(aisexec_t)
 
 dev_read_urand(aisexec_t)
 
@@ -89,7 +105,6 @@
 ')
 
 optional_policy(`
-	# to communication with RHCS
 	rhcs_rw_dlm_controld_semaphores(aisexec_t)
 
 	rhcs_rw_fenced_semaphores(aisexec_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/alsa.fc refpolicy/policy/modules/contrib/alsa.fc
--- refpolicy/policy/modules/contrib/alsa.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/alsa.fc	2012-09-27 20:03:30.724126498 +0200
@@ -1,20 +1,22 @@
 HOME_DIR/\.asoundrc	--	gen_context(system_u:object_r:alsa_home_t,s0)
 
-/bin/alsaunmute		--	gen_context(system_u:object_r:alsa_exec_t,s0)
+/bin/alsaunmute	--	gen_context(system_u:object_r:alsa_exec_t,s0)
 
-/etc/alsa/asound\.state --	gen_context(system_u:object_r:alsa_etc_rw_t,s0)
-/etc/alsa/pcm(/.*)?		gen_context(system_u:object_r:alsa_etc_rw_t,s0)
-/etc/asound(/.*)?		gen_context(system_u:object_r:alsa_etc_rw_t,s0)
+/etc/alsa/asound\.state	--	gen_context(system_u:object_r:alsa_etc_rw_t,s0)
+/etc/alsa/pcm(/.*)?	gen_context(system_u:object_r:alsa_etc_rw_t,s0)
+/etc/asound(/.*)?	gen_context(system_u:object_r:alsa_etc_rw_t,s0)
 /etc/asound\.state	--	gen_context(system_u:object_r:alsa_etc_rw_t,s0)
 
-/sbin/alsactl 		--	gen_context(system_u:object_r:alsa_exec_t,s0)
-/sbin/salsa 		--	gen_context(system_u:object_r:alsa_exec_t,s0)
+/sbin/alsactl	--	gen_context(system_u:object_r:alsa_exec_t,s0)
+/sbin/salsa	--	gen_context(system_u:object_r:alsa_exec_t,s0)
 
-/usr/bin/ainit 		--	gen_context(system_u:object_r:alsa_exec_t,s0)
+/usr/bin/ainit	--	gen_context(system_u:object_r:alsa_exec_t,s0)
+/usr/bin/alsaunmute	--	gen_context(system_u:object_r:alsa_exec_t,s0)
 
 /usr/sbin/alsactl	--	gen_context(system_u:object_r:alsa_exec_t,s0)
+/usr/sbin/salsa	--	gen_context(system_u:object_r:alsa_exec_t,s0)
 
 /usr/share/alsa/alsa\.conf	gen_context(system_u:object_r:alsa_etc_rw_t,s0)
 /usr/share/alsa/pcm(/.*)?	gen_context(system_u:object_r:alsa_etc_rw_t,s0)
 
-/var/lib/alsa(/.*)?		gen_context(system_u:object_r:alsa_var_lib_t,s0)
+/var/lib/alsa(/.*)?	gen_context(system_u:object_r:alsa_var_lib_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/alsa.if refpolicy/policy/modules/contrib/alsa.if
--- refpolicy/policy/modules/contrib/alsa.if	2012-09-28 19:56:54.129040256 +0200
+++ refpolicy/policy/modules/contrib/alsa.if	2012-09-27 20:03:30.724126498 +0200
@@ -1,4 +1,4 @@
-## <summary>Ainit ALSA configuration tool.</summary>
+## <summary>Advanced Linux Sound Architecture utilities.</summary>
 
 ########################################
 ## <summary>
@@ -68,11 +68,11 @@
 #
 interface(`alsa_run',`
 	gen_require(`
-		type alsa_t;
+		attribute_role alsa_roles;
 	')
 
 	alsa_domtrans($1)
-	role $2 types alsa_t;
+	roleattribute $2 alsa_roles;
 ')
 
 ########################################
@@ -113,7 +113,7 @@
 
 ########################################
 ## <summary>
-##	Read writable Alsa config files.
+##	Read writable Alsa configuration content.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/alsa.te refpolicy/policy/modules/contrib/alsa.te
--- refpolicy/policy/modules/contrib/alsa.te	2012-09-28 19:56:54.129040256 +0200
+++ refpolicy/policy/modules/contrib/alsa.te	2012-09-27 20:03:30.724126498 +0200
@@ -1,4 +1,4 @@
-policy_module(alsa, 1.11.0)
+policy_module(alsa, 1.11.2)
 
 ########################################
 #
@@ -9,10 +9,12 @@
 
 attribute alsatmpfsfile;
 
+attribute_role alsa_roles;
+
 type alsa_t, alsadomain;
 type alsa_exec_t;
 init_system_domain(alsa_t, alsa_exec_t)
-role system_r types alsa_t;
+role alsa_roles types alsa_t;
 
 type alsa_etc_rw_t;
 files_config_file(alsa_etc_rw_t)
@@ -35,8 +37,7 @@
 dontaudit alsa_t self:capability sys_admin;
 allow alsa_t self:sem create_sem_perms;
 allow alsa_t self:shm create_shm_perms;
-allow alsa_t self:unix_stream_socket create_stream_socket_perms;
-allow alsa_t self:unix_dgram_socket create_socket_perms;
+allow alsa_t self:unix_stream_socket { accept listen };
 
 allow alsa_t alsa_home_t:file read_file_perms;
 
@@ -53,18 +54,17 @@
 
 manage_dirs_pattern(alsa_t, alsa_var_lib_t, alsa_var_lib_t)
 manage_files_pattern(alsa_t, alsa_var_lib_t, alsa_var_lib_t)
-files_search_var_lib(alsa_t)
 
 kernel_read_system_state(alsa_t)
 
+corecmd_exec_bin(alsa_t)
+
 dev_read_sound(alsa_t)
-dev_write_sound(alsa_t)
 dev_read_sysfs(alsa_t)
+dev_write_sound(alsa_t)
 
-corecmd_exec_bin(alsa_t)
-
-files_read_etc_files(alsa_t)
 files_read_usr_files(alsa_t)
+files_search_var_lib(alsa_t)
 
 term_dontaudit_use_console(alsa_t)
 term_dontaudit_use_generic_ptys(alsa_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/amanda.fc refpolicy/policy/modules/contrib/amanda.fc
--- refpolicy/policy/modules/contrib/amanda.fc	2012-05-04 16:14:16.000000000 +0200
+++ refpolicy/policy/modules/contrib/amanda.fc	2012-09-27 20:03:30.724126498 +0200
@@ -1,26 +1,27 @@
-/etc/amanda(/.*)?			gen_context(system_u:object_r:amanda_config_t,s0)
-/etc/amanda/.*/tapelist(/.*)?		gen_context(system_u:object_r:amanda_data_t,s0)
-/etc/amandates				gen_context(system_u:object_r:amanda_amandates_t,s0)
-/etc/dumpdates				gen_context(system_u:object_r:amanda_dumpdates_t,s0)
+/etc/amanda(/.*)?	gen_context(system_u:object_r:amanda_config_t,s0)
+/etc/amanda/.*/tapelist(/.*)?	gen_context(system_u:object_r:amanda_data_t,s0)
+/etc/amandates	gen_context(system_u:object_r:amanda_amandates_t,s0)
+/etc/dumpdates	gen_context(system_u:object_r:amanda_dumpdates_t,s0)
 # empty m4 string so the index macro is not invoked
-/etc/amanda/.*/index`'(/.*)?		gen_context(system_u:object_r:amanda_data_t,s0)
+/etc/amanda/.*/index`'(/.*)?	gen_context(system_u:object_r:amanda_data_t,s0)
 
-/root/restore			-d	gen_context(system_u:object_r:amanda_recover_dir_t,s0)
+/root/restore	-d	gen_context(system_u:object_r:amanda_recover_dir_t,s0)
 
-/usr/lib/amanda			-d	gen_context(system_u:object_r:amanda_usr_lib_t,s0)
-/usr/lib/amanda/.+		--	gen_context(system_u:object_r:amanda_exec_t,s0)
-/usr/lib/amanda/amandad		--	gen_context(system_u:object_r:amanda_inetd_exec_t,s0)
+/usr/lib/amanda	-d	gen_context(system_u:object_r:amanda_usr_lib_t,s0)
+/usr/lib/amanda/.+	--	gen_context(system_u:object_r:amanda_exec_t,s0)
+/usr/lib/amanda/amandad	--	gen_context(system_u:object_r:amanda_inetd_exec_t,s0)
 /usr/lib/amanda/amidxtaped	--	gen_context(system_u:object_r:amanda_inetd_exec_t,s0)
 /usr/lib/amanda/amindexd	--	gen_context(system_u:object_r:amanda_inetd_exec_t,s0)
 
-/usr/sbin/amrecover		--	gen_context(system_u:object_r:amanda_recover_exec_t,s0)
+/usr/sbin/amandad	--	gen_context(system_u:object_r:amanda_inetd_exec_t,s0)
+/usr/sbin/amrecover	--	gen_context(system_u:object_r:amanda_recover_exec_t,s0)
 
-/var/lib/amanda			-d	gen_context(system_u:object_r:amanda_var_lib_t,s0)
-/var/lib/amanda/[^/]+(/.*)?		gen_context(system_u:object_r:amanda_data_t,s0)
-/var/lib/amanda/[^/]*/log(/.*)?		gen_context(system_u:object_r:amanda_log_t,s0)
+/var/lib/amanda	-d	gen_context(system_u:object_r:amanda_var_lib_t,s0)
+/var/lib/amanda/[^/]+(/.*)?	gen_context(system_u:object_r:amanda_data_t,s0)
+/var/lib/amanda/[^/]*/log(/.*)?	gen_context(system_u:object_r:amanda_log_t,s0)
 /var/lib/amanda/\.amandahosts	--	gen_context(system_u:object_r:amanda_config_t,s0)
 /var/lib/amanda/gnutar-lists(/.*)?	gen_context(system_u:object_r:amanda_gnutarlists_t,s0)
 # the null string in here because index is a m4 builtin function
 /var/lib/amanda/[^/]+/index`'(/.*)?	gen_context(system_u:object_r:amanda_var_lib_t,s0)
 
-/var/log/amanda(/.*)?			gen_context(system_u:object_r:amanda_log_t,s0)
+/var/log/amanda(/.*)?	gen_context(system_u:object_r:amanda_log_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/amanda.if refpolicy/policy/modules/contrib/amanda.if
--- refpolicy/policy/modules/contrib/amanda.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/amanda.if	2012-09-27 20:03:30.724126498 +0200
@@ -40,11 +40,11 @@
 #
 interface(`amanda_run_recover',`
 	gen_require(`
-		type amanda_recover_t;
+		attribute_role amanda_recover_roles;
 	')
 
 	amanda_domtrans_recover($1)
-	role $2 types amanda_recover_t;
+	roleattribute $2 amanda_recover_roles;
 ')
 
 ########################################
@@ -81,7 +81,7 @@
 		type amanda_dumpdates_t;
 	')
 
-	dontaudit $1 amanda_dumpdates_t:file { getattr read };
+	dontaudit $1 amanda_dumpdates_t:file read_file_perms;
 ')
 
 ########################################
@@ -124,7 +124,7 @@
 
 ########################################
 ## <summary>
-##	Read and append amanda logs.
+##	Read and append amanda log files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/amanda.te refpolicy/policy/modules/contrib/amanda.te
--- refpolicy/policy/modules/contrib/amanda.te	2012-07-25 20:33:04.000000000 +0200
+++ refpolicy/policy/modules/contrib/amanda.te	2012-09-27 20:03:30.724126498 +0200
@@ -1,14 +1,16 @@
-policy_module(amanda, 1.14.0)
+policy_module(amanda, 1.14.2)
 
 #######################################
 #
 # Declarations
 #
 
+attribute_role amanda_recover_roles;
+roleattribute system_r amanda_recover_roles;
+
 type amanda_t;
 type amanda_inetd_exec_t;
 inetd_service_domain(amanda_t, amanda_inetd_exec_t)
-role system_r types amanda_t;
 
 type amanda_exec_t;
 domain_entry_file(amanda_t, amanda_exec_t)
@@ -43,7 +45,7 @@
 type amanda_recover_t;
 type amanda_recover_exec_t;
 application_domain(amanda_recover_t, amanda_recover_exec_t)
-role system_r types amanda_recover_t;
+role amanda_recover_roles types amanda_recover_t;
 
 type amanda_recover_dir_t;
 files_type(amanda_recover_dir_t)
@@ -54,16 +56,14 @@
 
 ########################################
 #
-# Amanda local policy
+# Local policy
 #
 
 allow amanda_t self:capability { chown dac_override setuid kill };
 allow amanda_t self:process { setpgid signal };
 allow amanda_t self:fifo_file rw_fifo_file_perms;
-allow amanda_t self:unix_stream_socket create_stream_socket_perms;
-allow amanda_t self:unix_dgram_socket create_socket_perms;
-allow amanda_t self:tcp_socket create_stream_socket_perms;
-allow amanda_t self:udp_socket create_socket_perms;
+allow amanda_t self:unix_stream_socket { accept listen };
+allow amanda_t self:tcp_socket { accept listen };
 
 allow amanda_t amanda_amandates_t:file rw_file_perms;
 
@@ -75,9 +75,6 @@
 
 allow amanda_t amanda_dumpdates_t:file rw_file_perms;
 
-can_exec(amanda_t, amanda_exec_t)
-can_exec(amanda_t, amanda_inetd_exec_t)
-
 allow amanda_t amanda_gnutarlists_t:dir rw_dir_perms;
 allow amanda_t amanda_gnutarlists_t:file manage_file_perms;
 allow amanda_t amanda_gnutarlists_t:lnk_file manage_lnk_file_perms;
@@ -87,14 +84,16 @@
 
 manage_files_pattern(amanda_t, amanda_log_t, amanda_log_t)
 manage_dirs_pattern(amanda_t, amanda_log_t, amanda_log_t)
-logging_log_filetrans(amanda_t, amanda_log_t, { file dir })
+logging_log_filetrans(amanda_t, amanda_log_t, dir)
 
 manage_files_pattern(amanda_t, amanda_tmp_t, amanda_tmp_t)
 manage_dirs_pattern(amanda_t, amanda_tmp_t, amanda_tmp_t)
 files_tmp_filetrans(amanda_t, amanda_tmp_t, { file dir })
 
-kernel_read_system_state(amanda_t)
+can_exec(amanda_t, { amanda_exec_t amanda_inetd_exec_t })
+
 kernel_read_kernel_sysctls(amanda_t)
+kernel_read_system_state(amanda_t)
 kernel_dontaudit_getattr_unlabeled_files(amanda_t)
 kernel_dontaudit_read_proc_symlinks(amanda_t)
 
@@ -104,15 +103,11 @@
 corenet_all_recvfrom_unlabeled(amanda_t)
 corenet_all_recvfrom_netlabel(amanda_t)
 corenet_tcp_sendrecv_generic_if(amanda_t)
-corenet_udp_sendrecv_generic_if(amanda_t)
-corenet_raw_sendrecv_generic_if(amanda_t)
 corenet_tcp_sendrecv_generic_node(amanda_t)
-corenet_udp_sendrecv_generic_node(amanda_t)
-corenet_raw_sendrecv_generic_node(amanda_t)
 corenet_tcp_sendrecv_all_ports(amanda_t)
-corenet_udp_sendrecv_all_ports(amanda_t)
 corenet_tcp_bind_generic_node(amanda_t)
-corenet_udp_bind_generic_node(amanda_t)
+
+corenet_sendrecv_all_server_packets(amanda_t)
 corenet_tcp_bind_all_rpc_ports(amanda_t)
 corenet_tcp_bind_generic_port(amanda_t)
 corenet_dontaudit_tcp_bind_all_ports(amanda_t)
@@ -120,7 +115,6 @@
 dev_getattr_all_blk_files(amanda_t)
 dev_getattr_all_chr_files(amanda_t)
 
-files_read_etc_files(amanda_t)
 files_read_etc_runtime_files(amanda_t)
 files_list_all(amanda_t)
 files_read_all_files(amanda_t)
@@ -144,15 +138,14 @@
 
 ########################################
 #
-# Amanda recover local policy
+# Recover local policy
 #
 
 allow amanda_recover_t self:capability { fowner fsetid kill setgid setuid chown dac_override };
 allow amanda_recover_t self:process { sigkill sigstop signal };
 allow amanda_recover_t self:fifo_file rw_fifo_file_perms;
-allow amanda_recover_t self:unix_stream_socket { connect create read write };
-allow amanda_recover_t self:tcp_socket create_stream_socket_perms;
-allow amanda_recover_t self:udp_socket create_socket_perms;
+allow amanda_recover_t self:unix_stream_socket create_socket_perms;
+allow amanda_recover_t self:tcp_socket { accept listen };
 
 manage_files_pattern(amanda_recover_t, amanda_log_t, amanda_log_t)
 manage_lnk_files_pattern(amanda_recover_t, amanda_log_t, amanda_log_t)
@@ -171,8 +164,8 @@
 manage_sock_files_pattern(amanda_recover_t, amanda_tmp_t, amanda_tmp_t)
 files_tmp_filetrans(amanda_recover_t, amanda_tmp_t, { dir file lnk_file sock_file fifo_file })
 
-kernel_read_system_state(amanda_recover_t)
 kernel_read_kernel_sysctls(amanda_recover_t)
+kernel_read_system_state(amanda_recover_t)
 
 corecmd_exec_shell(amanda_recover_t)
 corecmd_exec_bin(amanda_recover_t)
@@ -187,16 +180,18 @@
 corenet_udp_sendrecv_all_ports(amanda_recover_t)
 corenet_tcp_bind_generic_node(amanda_recover_t)
 corenet_udp_bind_generic_node(amanda_recover_t)
+
+corenet_sendrecv_generic_server_packets(amanda_recover_t)
 corenet_tcp_bind_reserved_port(amanda_recover_t)
-corenet_tcp_connect_amanda_port(amanda_recover_t)
+
 corenet_sendrecv_amanda_client_packets(amanda_recover_t)
+corenet_tcp_connect_amanda_port(amanda_recover_t)
 
 domain_use_interactive_fds(amanda_recover_t)
 
-files_read_etc_files(amanda_recover_t)
 files_read_etc_runtime_files(amanda_recover_t)
-files_search_tmp(amanda_recover_t)
 files_search_pids(amanda_recover_t)
+files_search_tmp(amanda_recover_t)
 
 auth_use_nsswitch(amanda_recover_t)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/amavis.fc refpolicy/policy/modules/contrib/amavis.fc
--- refpolicy/policy/modules/contrib/amavis.fc	2012-05-04 16:10:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/amavis.fc	2012-09-27 20:03:30.725126498 +0200
@@ -1,18 +1,28 @@
+/etc/amavis(d)?\.conf	--	gen_context(system_u:object_r:amavis_etc_t,s0)
+/etc/amavisd(/.*)?	gen_context(system_u:object_r:amavis_etc_t,s0)
 
-/etc/amavis(d)?\.conf		--	gen_context(system_u:object_r:amavis_etc_t,s0)
-/etc/amavisd(/.*)?			gen_context(system_u:object_r:amavis_etc_t,s0)
 /etc/rc\.d/init\.d/amavis	--	gen_context(system_u:object_r:amavis_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/amavisd-snmp	--	gen_context(system_u:object_r:amavis_initrc_exec_t,s0)
 
-/usr/sbin/amavisd.*		--	gen_context(system_u:object_r:amavis_exec_t,s0)
 /usr/lib/AntiVir/antivir	--	gen_context(system_u:object_r:amavis_exec_t,s0)
 
+/usr/sbin/amavisd.*	--	gen_context(system_u:object_r:amavis_exec_t,s0)
+
 ifdef(`distro_debian',`
 /usr/sbin/amavisd-new-cronjob	--	gen_context(system_u:object_r:amavis_exec_t,s0)
 ')
 
-/var/amavis(/.*)?			gen_context(system_u:object_r:amavis_var_lib_t,s0)
-/var/lib/amavis(/.*)?			gen_context(system_u:object_r:amavis_var_lib_t,s0)
-/var/log/amavisd\.log		--	gen_context(system_u:object_r:amavis_var_log_t,s0)
-/var/run/amavis(d)?(/.*)?		gen_context(system_u:object_r:amavis_var_run_t,s0)
-/var/spool/amavisd(/.*)?		gen_context(system_u:object_r:amavis_spool_t,s0)
-/var/virusmails(/.*)?			gen_context(system_u:object_r:amavis_quarantine_t,s0)
+/var/opt/f-secure(/.*)?	gen_context(system_u:object_r:amavis_var_lib_t,s0)
+
+/var/amavis(/.*)?	gen_context(system_u:object_r:amavis_var_lib_t,s0)
+
+/var/lib/amavis(/.*)?	gen_context(system_u:object_r:amavis_var_lib_t,s0)
+
+/var/log/amavisd\.log.*	--	gen_context(system_u:object_r:amavis_var_log_t,s0)
+
+/var/run/amavis(d)?(/.*)?	gen_context(system_u:object_r:amavis_var_run_t,s0)
+/var/run/amavisd-snmp-subagent\.pid	--	gen_context(system_u:object_r:amavis_var_run_t,s0)
+
+/var/spool/amavisd(/.*)?	gen_context(system_u:object_r:amavis_spool_t,s0)
+
+/var/virusmails(/.*)?	gen_context(system_u:object_r:amavis_quarantine_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/amavis.if refpolicy/policy/modules/contrib/amavis.if
--- refpolicy/policy/modules/contrib/amavis.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/amavis.if	2012-09-27 20:03:30.725126498 +0200
@@ -1,7 +1,4 @@
-## <summary>
-##	Daemon that interfaces mail transfer agents and content
-##	checkers, such as virus scanners.
-## </summary>
+## <summary>High-performance interface between an email server and content checkers.</summary>
 
 ########################################
 ## <summary>
@@ -99,6 +96,11 @@
 ##	Class of the object being created.
 ##	</summary>
 ## </param>
+## <param name="name" optional="true">
+##	<summary>
+##	The name of the object being created.
+##	</summary>
+## </param>
 #
 interface(`amavis_spool_filetrans',`
 	gen_require(`
@@ -106,7 +108,7 @@
 	')
 
 	files_search_spool($1)
-	filetrans_pattern($1, amavis_spool_t, $2, $3)
+	filetrans_pattern($1, amavis_spool_t, $2, $3, $4)
 ')
 
 ########################################
@@ -170,7 +172,7 @@
 
 ########################################
 ## <summary>
-##	Set the attributes of amavis pid files.
+##	Set attributes of amavis pid files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -189,7 +191,7 @@
 
 ########################################
 ## <summary>
-##	Create of amavis pid files.
+##	Create amavis pid files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -202,14 +204,15 @@
 		type amavis_var_run_t;
 	')
 
+	allow $1 amavis_var_run_t:dir add_entry_dir_perms;
 	allow $1 amavis_var_run_t:file create_file_perms;
 	files_search_pids($1)
 ')
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an amavis environment
+##	All of the rules required to
+##	administrate an amavis environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -227,8 +230,7 @@
 	gen_require(`
 		type amavis_t, amavis_tmp_t, amavis_var_log_t;
 		type amavis_spool_t, amavis_var_lib_t, amavis_var_run_t;
-		type amavis_etc_t, amavis_quarantine_t;
-		type amavis_initrc_exec_t;
+		type amavis_etc_t, amavis_quarantine_t, amavis_initrc_exec_t;
 	')
 
 	allow $1 amavis_t:process { ptrace signal_perms };
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/amavis.te refpolicy/policy/modules/contrib/amavis.te
--- refpolicy/policy/modules/contrib/amavis.te	2012-07-25 20:33:04.000000000 +0200
+++ refpolicy/policy/modules/contrib/amavis.te	2012-09-27 20:03:30.725126498 +0200
@@ -1,39 +1,40 @@
-policy_module(amavis, 1.14.0)
+policy_module(amavis, 1.14.1)
 
 ########################################
 #
 # Declarations
 #
 
+## <desc>
+##	<p>
+##	Determine whether amavis can
+##	use JIT compiler.
+##	</p>
+## </desc>
+gen_tunable(amavis_use_jit, false)
+
 type amavis_t;
 type amavis_exec_t;
-domain_type(amavis_t)
 init_daemon_domain(amavis_t, amavis_exec_t)
 
-# configuration files
 type amavis_etc_t;
 files_config_file(amavis_etc_t)
 
 type amavis_initrc_exec_t;
 init_script_file(amavis_initrc_exec_t)
 
-# pid files
 type amavis_var_run_t;
 files_pid_file(amavis_var_run_t)
 
-# var/lib files
 type amavis_var_lib_t;
 files_type(amavis_var_lib_t)
 
-# log files
 type amavis_var_log_t;
 logging_log_file(amavis_var_log_t)
 
-# tmp files
 type amavis_tmp_t;
 files_tmp_file(amavis_tmp_t)
 
-# virus quarantine
 type amavis_quarantine_t;
 files_type(amavis_quarantine_t)
 
@@ -42,127 +43,124 @@
 
 ########################################
 #
-# amavis local policy
+# Local policy
 #
 
 allow amavis_t self:capability { kill chown dac_override setgid setuid };
 dontaudit amavis_t self:capability sys_tty_config;
-allow amavis_t self:process { signal sigchld sigkill signull };
+allow amavis_t self:process signal_perms;
 allow amavis_t self:fifo_file rw_fifo_file_perms;
-allow amavis_t self:unix_stream_socket create_stream_socket_perms;
-allow amavis_t self:unix_dgram_socket create_socket_perms;
+allow amavis_t self:unix_stream_socket { accept connectto listen };
 allow amavis_t self:tcp_socket { listen accept };
-allow amavis_t self:netlink_route_socket r_netlink_socket_perms;
 
-# configuration files
 allow amavis_t amavis_etc_t:dir list_dir_perms;
 read_files_pattern(amavis_t, amavis_etc_t, amavis_etc_t)
 read_lnk_files_pattern(amavis_t, amavis_etc_t, amavis_etc_t)
 
-can_exec(amavis_t, amavis_exec_t)
-
-# mail quarantine
 manage_dirs_pattern(amavis_t, amavis_quarantine_t, amavis_quarantine_t)
 manage_files_pattern(amavis_t, amavis_quarantine_t, amavis_quarantine_t)
 manage_sock_files_pattern(amavis_t, amavis_quarantine_t, amavis_quarantine_t)
 
-# Spool Files
 manage_dirs_pattern(amavis_t, amavis_spool_t, amavis_spool_t)
 manage_files_pattern(amavis_t, amavis_spool_t, amavis_spool_t)
 manage_lnk_files_pattern(amavis_t, amavis_spool_t, amavis_spool_t)
 manage_sock_files_pattern(amavis_t, amavis_spool_t, amavis_spool_t)
 filetrans_pattern(amavis_t, amavis_spool_t, amavis_var_run_t, sock_file)
-files_search_spool(amavis_t)
 
-# tmp files
 manage_files_pattern(amavis_t, amavis_tmp_t, amavis_tmp_t)
 allow amavis_t amavis_tmp_t:dir setattr_dir_perms;
 files_tmp_filetrans(amavis_t, amavis_tmp_t, file)
 
-# var/lib files for amavis
 manage_dirs_pattern(amavis_t, amavis_var_lib_t, amavis_var_lib_t)
 manage_files_pattern(amavis_t, amavis_var_lib_t, amavis_var_lib_t)
 manage_sock_files_pattern(amavis_t, amavis_var_lib_t, amavis_var_lib_t)
-files_search_var_lib(amavis_t)
 
-# log files
 allow amavis_t amavis_var_log_t:dir setattr_dir_perms;
 manage_files_pattern(amavis_t, amavis_var_log_t, amavis_var_log_t)
 manage_sock_files_pattern(amavis_t, amavis_var_log_t, amavis_var_log_t)
 logging_log_filetrans(amavis_t, amavis_var_log_t, { sock_file file dir })
 
-# pid file
 manage_dirs_pattern(amavis_t, amavis_var_run_t, amavis_var_run_t)
 manage_files_pattern(amavis_t, amavis_var_run_t, amavis_var_run_t)
 manage_sock_files_pattern(amavis_t, amavis_var_run_t, amavis_var_run_t)
 files_pid_filetrans(amavis_t, amavis_var_run_t, { dir file sock_file })
 
+can_exec(amavis_t, amavis_exec_t)
+
 kernel_read_kernel_sysctls(amavis_t)
-# amavis tries to access /proc/self/stat, /etc/shadow and /root - perl...
 kernel_dontaudit_list_proc(amavis_t)
 kernel_dontaudit_read_proc_symlinks(amavis_t)
 kernel_dontaudit_read_system_state(amavis_t)
 
-# find perl
 corecmd_exec_bin(amavis_t)
 corecmd_exec_shell(amavis_t)
 
 corenet_all_recvfrom_unlabeled(amavis_t)
 corenet_all_recvfrom_netlabel(amavis_t)
 corenet_tcp_sendrecv_generic_if(amavis_t)
+corenet_udp_sendrecv_generic_if(amavis_t)
 corenet_tcp_sendrecv_generic_node(amavis_t)
+corenet_udp_sendrecv_generic_node(amavis_t)
+corenet_tcp_sendrecv_all_ports(amavis_t)
+corenet_udp_sendrecv_all_ports(amavis_t)
 corenet_tcp_bind_generic_node(amavis_t)
 corenet_udp_bind_generic_node(amavis_t)
-# amavis uses well-defined ports
-corenet_tcp_sendrecv_amavisd_recv_port(amavis_t)
-corenet_tcp_sendrecv_amavisd_send_port(amavis_t)
-# just the other side not. ;-)
-corenet_tcp_sendrecv_all_ports(amavis_t)
-# connect to backchannel port
+
+corenet_sendrecv_amavisd_send_client_packets(amavis_t)
 corenet_tcp_connect_amavisd_send_port(amavis_t)
-# bind to incoming port
+
+corenet_sendrecv_amavisd_recv_server_packets(amavis_t)
 corenet_tcp_bind_amavisd_recv_port(amavis_t)
+
+corenet_sendrecv_generic_server_packets(amavis_t)
 corenet_udp_bind_generic_port(amavis_t)
 corenet_dontaudit_udp_bind_all_ports(amavis_t)
+
+corenet_sendrecv_razor_client_packets(amavis_t)
 corenet_tcp_connect_razor_port(amavis_t)
 
 dev_read_rand(amavis_t)
+dev_read_sysfs(amavis_t)
 dev_read_urand(amavis_t)
 
 domain_use_interactive_fds(amavis_t)
+domain_dontaudit_read_all_domains_state(amavis_t)
 
-files_read_etc_files(amavis_t)
 files_read_etc_runtime_files(amavis_t)
 files_read_usr_files(amavis_t)
+files_search_spool(amavis_t)
 
 fs_getattr_xattr_fs(amavis_t)
 
+auth_use_nsswitch(amavis_t)
 auth_dontaudit_read_shadow(amavis_t)
 
-# uses uptime which reads utmp - redhat bug 561383
+init_read_state(amavis_t)
 init_read_utmp(amavis_t)
 init_stream_connect_script(amavis_t)
 
 logging_send_syslog_msg(amavis_t)
 
-miscfiles_read_generic_certs(amavis_t)
 miscfiles_read_localization(amavis_t)
 
-sysnet_dns_name_resolve(amavis_t)
-sysnet_use_ldap(amavis_t)
-
 userdom_dontaudit_search_user_home_dirs(amavis_t)
 
-# Cron handling
-cron_use_fds(amavis_t)
-cron_use_system_job_fds(amavis_t)
-cron_rw_pipes(amavis_t)
-
-mta_read_config(amavis_t)
+tunable_policy(`amavis_use_jit',`
+	allow amavis_t self:process execmem;
+',`
+	dontaudit amavis_t self:process execmem;
+')
 
 optional_policy(`
 	clamav_stream_connect(amavis_t)
 	clamav_domtrans_clamscan(amavis_t)
+	clamav_read_state_clamd(amavis_t)
+')
+
+optional_policy(`
+	cron_use_fds(amavis_t)
+	cron_use_system_job_fds(amavis_t)
+	cron_rw_pipes(amavis_t)
 ')
 
 optional_policy(`
@@ -171,11 +169,12 @@
 ')
 
 optional_policy(`
-	nslcd_stream_connect(amavis_t)
+	mta_read_config(amavis_t)
 ')
 
 optional_policy(`
 	postfix_read_config(amavis_t)
+	postfix_list_spool(amavis_t)
 ')
 
 optional_policy(`
@@ -188,6 +187,10 @@
 ')
 
 optional_policy(`
+	snmp_manage_var_lib_files(amavis_t)
+')
+
+optional_policy(`
 	spamassassin_exec(amavis_t)
 	spamassassin_exec_client(amavis_t)
 	spamassassin_read_lib_files(amavis_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/amtu.fc refpolicy/policy/modules/contrib/amtu.fc
--- refpolicy/policy/modules/contrib/amtu.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/amtu.fc	2012-09-27 20:03:30.725126498 +0200
@@ -1 +1,5 @@
+/etc/rc\.d/init\.d/amtu	--	gen_context(system_u:object_r:amtu_initrc_exec_t,s0)
+
 /usr/bin/amtu	--	gen_context(system_u:object_r:amtu_exec_t,s0)
+
+/usr/sbin/amtu	--	gen_context(system_u:object_r:amtu_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/amtu.if refpolicy/policy/modules/contrib/amtu.if
--- refpolicy/policy/modules/contrib/amtu.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/amtu.if	2012-09-27 20:03:30.725126498 +0200
@@ -38,9 +38,40 @@
 #
 interface(`amtu_run',`
 	gen_require(`
-		type amtu_t;
+		attribute_role amtu_roles;
 	')
 
 	amtu_domtrans($1)
-	role $2 types amtu_t;
+	roleattribute $2 amtu_roles;
+')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an amtu environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`amtu_admin',`
+	gen_require(`
+		type amtu_t, amtu_initrc_exec_t;
+	')
+
+	allow $1 amtu_t:process { ptrace signal_perms };
+	ps_process_pattern($1, amtu_t)
+
+	init_labeled_script_domtrans($1, amtu_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 amtu_initrc_exec_t system_r;
+	allow $2 system_r;
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/amtu.te refpolicy/policy/modules/contrib/amtu.te
--- refpolicy/policy/modules/contrib/amtu.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/amtu.te	2012-09-27 20:03:30.725126498 +0200
@@ -1,18 +1,23 @@
-policy_module(amtu, 1.2.0)
+policy_module(amtu, 1.2.3)
 
 ########################################
 #
 # Declarations
 #
 
+attribute_role amtu_roles;
+
 type amtu_t;
 type amtu_exec_t;
-domain_type(amtu_t)
-domain_entry_file(amtu_t, amtu_exec_t)
+init_system_domain(amtu_t, amtu_exec_t)
+role amtu_roles types amtu_t;
+
+type amtu_initrc_exec_t;
+init_script_file(amtu_initrc_exec_t)
 
 ########################################
 #
-# amtu local policy
+# Local policy
 #
 
 kernel_read_system_state(amtu_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/anaconda.te refpolicy/policy/modules/contrib/anaconda.te
--- refpolicy/policy/modules/contrib/anaconda.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/anaconda.te	2012-09-27 20:03:30.725126498 +0200
@@ -1,4 +1,8 @@
-policy_module(anaconda, 1.6.0)
+policy_module(anaconda, 1.6.1)
+
+gen_require(`
+	class passwd all_passwd_perms;
+')
 
 ########################################
 #
@@ -8,6 +12,7 @@
 type anaconda_t;
 type anaconda_exec_t;
 domain_type(anaconda_t)
+domain_entry_file(anaconda_t, anaconda_exec_t)
 domain_obj_id_change_exemption(anaconda_t)
 role system_r types anaconda_t;
 
@@ -17,13 +22,12 @@
 #
 
 allow anaconda_t self:process execmem;
+allow anaconda_t self:passwd { rootok passwd chfn chsh };
 
 kernel_domtrans_to(anaconda_t, anaconda_exec_t)
 
 init_domtrans_script(anaconda_t)
 
-libs_domtrans_ldconfig(anaconda_t)
-
 logging_send_syslog_msg(anaconda_t)
 
 modutils_domtrans_insmod(anaconda_t)
@@ -34,10 +38,6 @@
 userdom_user_home_dir_filetrans_user_home_content(anaconda_t, { dir file lnk_file fifo_file sock_file })
 
 optional_policy(`
-	kudzu_domtrans(anaconda_t)
-')
-
-optional_policy(`
 	rpm_domtrans(anaconda_t)
 	rpm_domtrans_script(anaconda_t)
 ')
@@ -51,9 +51,5 @@
 ')
 
 optional_policy(`
-	unconfined_domain(anaconda_t)
-')
-
-optional_policy(`
-	usermanage_domtrans_admin_passwd(anaconda_t)
+	unconfined_domain_noaudit(anaconda_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/apache.fc refpolicy/policy/modules/contrib/apache.fc
--- refpolicy/policy/modules/contrib/apache.fc	2012-05-04 16:14:58.000000000 +0200
+++ refpolicy/policy/modules/contrib/apache.fc	2012-09-27 20:03:30.726126498 +0200
@@ -1,111 +1,159 @@
-HOME_DIR/((www)|(web)|(public_html))(/.+)? gen_context(system_u:object_r:httpd_user_content_t,s0)
+HOME_DIR/((www)|(web)|(public_html))(/.+)?	gen_context(system_u:object_r:httpd_user_content_t,s0)
+HOME_DIR/((www)|(web)|(public_html))/cgi-bin(/.+)?	gen_context(system_u:object_r:httpd_user_script_exec_t,s0)
+HOME_DIR/((www)|(web)|(public_html))(/.*)?/\.htaccess	--	gen_context(system_u:object_r:httpd_user_htaccess_t,s0)
+HOME_DIR/((www)|(web)|(public_html))(/.*)?/logs(/.*)?	gen_context(system_u:object_r:httpd_user_ra_content_t,s0)
+
+/etc/apache(2)?(/.*)?	gen_context(system_u:object_r:httpd_config_t,s0)
+/etc/apache-ssl(2)?(/.*)?	gen_context(system_u:object_r:httpd_config_t,s0)
+/etc/cherokee(/.*)?	gen_context(system_u:object_r:httpd_config_t,s0)
+/etc/drupal.*	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/etc/htdig(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/etc/httpd(/.*)?	gen_context(system_u:object_r:httpd_config_t,s0)
+/etc/httpd/conf/keytab	--	gen_context(system_u:object_r:httpd_keytab_t,s0)
+/etc/httpd/logs	gen_context(system_u:object_r:httpd_log_t,s0)
+/etc/httpd/modules	gen_context(system_u:object_r:httpd_modules_t,s0)
+/etc/lighttpd(/.*)?	gen_context(system_u:object_r:httpd_config_t,s0)
+/etc/mock/koji(/.*)?	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 
-/etc/apache(2)?(/.*)?			gen_context(system_u:object_r:httpd_config_t,s0)
-/etc/apache-ssl(2)?(/.*)?		gen_context(system_u:object_r:httpd_config_t,s0)
-/etc/drupal(/.*)?			gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
-/etc/htdig(/.*)?			gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/etc/httpd(/.*)?			gen_context(system_u:object_r:httpd_config_t,s0)
-/etc/httpd/conf/keytab		--	gen_context(system_u:object_r:httpd_keytab_t,s0)
-/etc/httpd/logs				gen_context(system_u:object_r:httpd_log_t,s0)
-/etc/httpd/modules			gen_context(system_u:object_r:httpd_modules_t,s0)
-/etc/lighttpd(/.*)?			gen_context(system_u:object_r:httpd_config_t,s0)
-/etc/mock/koji(/.*)? 			gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/etc/rc\.d/init\.d/cherokee	--	gen_context(system_u:object_r:httpd_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/httpd	--	gen_context(system_u:object_r:httpd_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/lighttpd	--	gen_context(system_u:object_r:httpd_initrc_exec_t,s0)
 
-/etc/vhosts			--	gen_context(system_u:object_r:httpd_config_t,s0)
-/etc/zabbix/web(/.*)?			gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/etc/vhosts	--	gen_context(system_u:object_r:httpd_config_t,s0)
+/etc/WebCalendar(/.*)?	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/etc/zabbix/web(/.*)?	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
 
-/srv/([^/]*/)?www(/.*)?			gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/srv/gallery2(/.*)?			gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/opt/.*\.cgi	--	gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+/opt/dirsrv/var/run/dirsrv/dsgw/cookies(/.*)?	gen_context(system_u:object_r:httpd_var_run_t,s0)
 
-/usr/bin/htsslpass 		--	gen_context(system_u:object_r:httpd_helper_exec_t,s0)
-/usr/bin/mongrel_rails		--	gen_context(system_u:object_r:httpd_exec_t,s0)
+/srv/([^/]*/)?www(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/srv/gallery2(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
 
-/usr/lib/apache-ssl/.+		--	gen_context(system_u:object_r:httpd_exec_t,s0)
-/usr/lib/cgi-bin(/.*)?			gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
-/usr/lib/dirsrv/cgi-bin(/.*)?		gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
-/usr/lib/apache(/.*)?			gen_context(system_u:object_r:httpd_modules_t,s0)
-/usr/lib/apache2/modules(/.*)?		gen_context(system_u:object_r:httpd_modules_t,s0)
+/usr/.*\.cgi	--	gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+
+/usr/bin/htsslpass	--	gen_context(system_u:object_r:httpd_helper_exec_t,s0)
+/usr/bin/mongrel_rails	--	gen_context(system_u:object_r:httpd_exec_t,s0)
+
+/usr/lib/apache-ssl/.+	--	gen_context(system_u:object_r:httpd_exec_t,s0)
+/usr/lib/apache(/.*)?	gen_context(system_u:object_r:httpd_modules_t,s0)
+/usr/lib/apache2/modules(/.*)?	gen_context(system_u:object_r:httpd_modules_t,s0)
 /usr/lib/apache(2)?/suexec(2)?	--	gen_context(system_u:object_r:httpd_suexec_exec_t,s0)
-/usr/lib/cgi-bin/(nph-)?cgiwrap(d)? --	gen_context(system_u:object_r:httpd_suexec_exec_t,s0)
-/usr/lib/httpd(/.*)?			gen_context(system_u:object_r:httpd_modules_t,s0)
-/usr/lib/lighttpd(/.*)?			gen_context(system_u:object_r:httpd_modules_t,s0)
+/usr/lib/cgi-bin(/.*)?	gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+/usr/lib/cgi-bin/(nph-)?cgiwrap(d)?	--	gen_context(system_u:object_r:httpd_suexec_exec_t,s0)
+/usr/lib/cherokee(/.*)?	gen_context(system_u:object_r:httpd_modules_t,s0)
+/usr/lib/dirsrv/cgi-bin(/.*)?	gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+/usr/lib/httpd(/.*)?	gen_context(system_u:object_r:httpd_modules_t,s0)
+/usr/lib/lighttpd(/.*)?	gen_context(system_u:object_r:httpd_modules_t,s0)
 
-/usr/sbin/apache(2)?		--	gen_context(system_u:object_r:httpd_exec_t,s0)
+/usr/libexec/httpd-ssl-pass-dialog	--	gen_context(system_u:object_r:httpd_passwd_exec_t,s0)
+
+/usr/sbin/apache(2)?	--	gen_context(system_u:object_r:httpd_exec_t,s0)
 /usr/sbin/apache-ssl(2)?	--	gen_context(system_u:object_r:httpd_exec_t,s0)
+/usr/sbin/cherokee	--	gen_context(system_u:object_r:httpd_exec_t,s0)
+/usr/sbin/httpd\.event	--	gen_context(system_u:object_r:httpd_exec_t,s0)
 /usr/sbin/httpd(\.worker)?	--	gen_context(system_u:object_r:httpd_exec_t,s0)
-/usr/sbin/lighttpd		--	gen_context(system_u:object_r:httpd_exec_t,s0)
-/usr/sbin/rotatelogs		--	gen_context(system_u:object_r:httpd_rotatelogs_exec_t,s0)
-/usr/sbin/suexec		--	gen_context(system_u:object_r:httpd_suexec_exec_t,s0)
+/usr/sbin/lighttpd	--	gen_context(system_u:object_r:httpd_exec_t,s0)
+/usr/sbin/rotatelogs	--	gen_context(system_u:object_r:httpd_rotatelogs_exec_t,s0)
+/usr/sbin/suexec	--	gen_context(system_u:object_r:httpd_suexec_exec_t,s0)
 
-ifdef(`distro_suse', `
-/usr/sbin/httpd2-.*		--	gen_context(system_u:object_r:httpd_exec_t,s0)
+ifdef(`distro_suse',`
+/usr/sbin/httpd2-.*	--	gen_context(system_u:object_r:httpd_exec_t,s0)
 ')
 
-/usr/share/dirsrv(/.*)?			gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/usr/share/drupal(/.*)?			gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/usr/share/htdig(/.*)?			gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/usr/share/icecast(/.*)?		gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/usr/share/mythweb(/.*)?		gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/usr/share/mythweb/mythweb\.pl		gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
-/usr/share/mythtv/mythweather/scripts(/.*)? gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
-/usr/share/mythtv/data(/.*)?		gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/usr/share/ntop/html(/.*)?		gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/usr/share/openca/htdocs(/.*)?		gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/usr/share/selinux-policy[^/]*/html(/.*)? gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/usr/share/wordpress-mu/wp-config\.php	-- gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
-/usr/share/wordpress-mu/wp-content(/.*)? gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
-/usr/share/wordpress/wp-content/uploads(/.*)? gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
-
-/var/cache/httpd(/.*)?			gen_context(system_u:object_r:httpd_cache_t,s0)
-/var/cache/lighttpd(/.*)?		gen_context(system_u:object_r:httpd_cache_t,s0)
-/var/cache/mason(/.*)?			gen_context(system_u:object_r:httpd_cache_t,s0)
-/var/cache/mediawiki(/.*)?		gen_context(system_u:object_r:httpd_cache_t,s0)
-/var/cache/mod_.*			gen_context(system_u:object_r:httpd_cache_t,s0)
-/var/cache/mod_gnutls(/.*)?		gen_context(system_u:object_r:httpd_cache_t,s0)
-/var/cache/mod_proxy(/.*)?		gen_context(system_u:object_r:httpd_cache_t,s0)
-/var/cache/mod_ssl(/.*)?		gen_context(system_u:object_r:httpd_cache_t,s0)
-/var/cache/php-.*			gen_context(system_u:object_r:httpd_cache_t,s0)
+/usr/share/dirsrv(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/usr/share/doc/ghc/html(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/usr/share/drupal.*	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/usr/share/htdig(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/usr/share/icecast(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/usr/share/jetty/bin/jetty\.sh	--	gen_context(system_u:object_r:httpd_exec_t,s0)
+/usr/share/mythweb(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/usr/share/mythweb/mythweb\.pl	gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+/usr/share/mythtv/mythweather/scripts(/.*)?	gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+/usr/share/mythtv/data(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/usr/share/ntop/html(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/usr/share/openca/htdocs(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/usr/share/selinux-policy[^/]*/html(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/usr/share/wordpress/.*\.php	--	gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+/usr/share/wordpress-mu/wp-config\.php	--	gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+/usr/share/wordpress-mu/wp-content(/.*)?	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/usr/share/wordpress/wp-content/uploads(/.*)?	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/usr/share/wordpress/wp-content/upgrade(/.*)?	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/usr/share/wordpress/wp-includes/.*\.php	--	gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+
+/var/cache/httpd(/.*)?	gen_context(system_u:object_r:httpd_cache_t,s0)
+/var/cache/lighttpd(/.*)?	gen_context(system_u:object_r:httpd_cache_t,s0)
+/var/cache/mason(/.*)?	gen_context(system_u:object_r:httpd_cache_t,s0)
+/var/cache/mediawiki(/.*)?	gen_context(system_u:object_r:httpd_cache_t,s0)
+/var/cache/mod_.*	gen_context(system_u:object_r:httpd_cache_t,s0)
+/var/cache/mod_gnutls(/.*)?	gen_context(system_u:object_r:httpd_cache_t,s0)
+/var/cache/mod_proxy(/.*)?	gen_context(system_u:object_r:httpd_cache_t,s0)
+/var/cache/mod_ssl(/.*)?	gen_context(system_u:object_r:httpd_cache_t,s0)
+/var/cache/php-.*	gen_context(system_u:object_r:httpd_cache_t,s0)
 /var/cache/php-eaccelerator(/.*)?	gen_context(system_u:object_r:httpd_cache_t,s0)
-/var/cache/php-mmcache(/.*)?		gen_context(system_u:object_r:httpd_cache_t,s0)
-/var/cache/rt3(/.*)?			gen_context(system_u:object_r:httpd_cache_t,s0)
-/var/cache/ssl.*\.sem		--	gen_context(system_u:object_r:httpd_cache_t,s0)
-
-/var/lib/cacti/rra(/.*)?		gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/var/lib/dav(/.*)?			gen_context(system_u:object_r:httpd_var_lib_t,s0)
-/var/lib/drupal(/.*)?			gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
-/var/lib/htdig(/.*)?			gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/var/lib/httpd(/.*)?			gen_context(system_u:object_r:httpd_var_lib_t,s0)
-/var/lib/php/session(/.*)?		gen_context(system_u:object_r:httpd_var_run_t,s0)
+/var/cache/php-mmcache(/.*)?	gen_context(system_u:object_r:httpd_cache_t,s0)
+/var/cache/rt3(/.*)?	gen_context(system_u:object_r:httpd_cache_t,s0)
+/var/cache/ssl.*\.sem	--	gen_context(system_u:object_r:httpd_cache_t,s0)
+
+/var/lib/cacti/rra(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/var/lib/cherokee(/.*)?	gen_context(system_u:object_r:httpd_var_lib_t,s0)
+/var/lib/dav(/.*)?	gen_context(system_u:object_r:httpd_var_lib_t,s0)
+/var/lib/php(/.*)?	gen_context(system_u:object_r:httpd_var_lib_t,s0)
+/var/lib/dokuwiki(/.*)?	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/lib/drupal.*	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/lib/htdig(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/var/lib/httpd(/.*)?	gen_context(system_u:object_r:httpd_var_lib_t,s0)
+/var/lib/lighttpd(/.*)?	gen_context(system_u:object_r:httpd_var_lib_t,s0)
+/var/lib/php/session(/.*)?	gen_context(system_u:object_r:httpd_var_run_t,s0)
+/var/lib/pootle/po(/.*)?	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/lib/rt3/data/RT-Shredder(/.*)?	gen_context(system_u:object_r:httpd_var_lib_t,s0)
 /var/lib/squirrelmail/prefs(/.*)?	gen_context(system_u:object_r:httpd_squirrelmail_t,s0)
+/var/lib/stickshift/.httpd.d(/.*)?	gen_context(system_u:object_r:httpd_config_t,s0)
+/var/lib/svn(/.*)?	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/lib/trac(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+
+/var/log/apache(2)?(/.*)?	gen_context(system_u:object_r:httpd_log_t,s0)
+/var/log/apache-ssl(2)?(/.*)?	gen_context(system_u:object_r:httpd_log_t,s0)
+/var/log/cacti(/.*)?	gen_context(system_u:object_r:httpd_log_t,s0)
+/var/log/cgiwrap\.log.*	--	gen_context(system_u:object_r:httpd_log_t,s0)
+/var/log/cherokee(/.*)?	gen_context(system_u:object_r:httpd_log_t,s0)
+/var/log/dirsrv/admin-serv(/.*)?	gen_context(system_u:object_r:httpd_log_t,s0)
+/var/log/httpd(/.*)?	gen_context(system_u:object_r:httpd_log_t,s0)
+/var/log/lighttpd(/.*)?	gen_context(system_u:object_r:httpd_log_t,s0)
+/var/log/piranha(/.*)?	gen_context(system_u:object_r:httpd_log_t,s0)
+/var/log/roundcubemail(/.*)?	gen_context(system_u:object_r:httpd_log_t,s0)
+/var/log/suphp\.log.*	--	gen_context(system_u:object_r:httpd_log_t,s0)
 
-/var/log/apache(2)?(/.*)?		gen_context(system_u:object_r:httpd_log_t,s0)
-/var/log/apache-ssl(2)?(/.*)?		gen_context(system_u:object_r:httpd_log_t,s0)
-/var/log/cacti(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
-/var/log/cgiwrap\.log.*		--	gen_context(system_u:object_r:httpd_log_t,s0)
-/var/log/httpd(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
-/var/log/lighttpd(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
-/var/log/piranha(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
-
-ifdef(`distro_debian', `
-/var/log/horde2(/.*)?			gen_context(system_u:object_r:httpd_log_t,s0)
+ifdef(`distro_debian',`
+/var/log/horde2(/.*)?	gen_context(system_u:object_r:httpd_log_t,s0)
 ')
 
-/var/run/apache.*			gen_context(system_u:object_r:httpd_var_run_t,s0)
-/var/run/gcache_port		-s	gen_context(system_u:object_r:httpd_var_run_t,s0)
-/var/run/httpd.*			gen_context(system_u:object_r:httpd_var_run_t,s0)
-/var/run/lighttpd(/.*)?			gen_context(system_u:object_r:httpd_var_run_t,s0)
-/var/run/mod_.*				gen_context(system_u:object_r:httpd_var_run_t,s0)
-/var/run/wsgi.*			-s	gen_context(system_u:object_r:httpd_var_run_t,s0)
-
-/var/spool/gosa(/.*)?			gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
-/var/spool/squirrelmail(/.*)?		gen_context(system_u:object_r:squirrelmail_spool_t,s0)
-/var/spool/viewvc(/.*)?			gen_context(system_u:object_r:httpd_sys_rw_content_t, s0)
-
-/var/www(/.*)?				gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/var/www(/.*)?/logs(/.*)?		gen_context(system_u:object_r:httpd_log_t,s0)
-/var/www/[^/]*/cgi-bin(/.*)?		gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
-/var/www/cgi-bin(/.*)?			gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
-/var/www/icons(/.*)?			gen_context(system_u:object_r:httpd_sys_content_t,s0)
-/var/www/perl(/.*)?			gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+/var/run/apache.*	gen_context(system_u:object_r:httpd_var_run_t,s0)
+/var/run/cherokee\.pid	--	gen_context(system_u:object_r:httpd_var_run_t,s0)
+/var/run/dirsrv/admin-serv.*	gen_context(system_u:object_r:httpd_var_run_t,s0)
+/var/run/gcache_port	-s	gen_context(system_u:object_r:httpd_var_run_t,s0)
+/var/run/httpd.*	gen_context(system_u:object_r:httpd_var_run_t,s0)
+/var/run/lighttpd(/.*)?	gen_context(system_u:object_r:httpd_var_run_t,s0)
+/var/run/mod_.*	gen_context(system_u:object_r:httpd_var_run_t,s0)
+/var/run/wsgi.*	-s	gen_context(system_u:object_r:httpd_var_run_t,s0)
+/var/run/user/apache(/.*)?	gen_context(system_u:object_r:httpd_tmp_t,s0)
+
+/var/spool/gosa(/.*)?	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/spool/squirrelmail(/.*)?	gen_context(system_u:object_r:squirrelmail_spool_t,s0)
+/var/spool/viewvc(/.*)?	gen_context(system_u:object_r:httpd_sys_rw_content_t, s0)
+
+/var/www(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/var/www(/.*)?/logs(/.*)?	gen_context(system_u:object_r:httpd_log_t,s0)
+/var/www/[^/]*/cgi-bin(/.*)?	gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+/var/www/cgi-bin(/.*)?	gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+/var/www/gallery/albums(/.*)?	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/www/html/[^/]*/cgi-bin(/.*)?	gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+/var/www/html/[^/]*/sites/default/settings\.php	--	gen_context(system_u:object_r:httpd_sys_rw_content_t, s0)
+/var/www/html/[^/]*/sites/default/files(/.*)?	gen_context(system_u:object_r:httpd_sys_rw_content_t, s0)
+/var/www/html/configuration\.php	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/www/html/wp-content(/.*)?	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/www/icons(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/var/www/moodledata(/.*)?	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/www/perl(/.*)?	gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
+/var/www/svn(/.*)?	gen_context(system_u:object_r:httpd_sys_rw_content_t,s0)
+/var/www/svn/conf(/.*)?	gen_context(system_u:object_r:httpd_sys_content_t,s0)
+/var/www/svn/hooks(/.*)?	gen_context(system_u:object_r:httpd_sys_script_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/apache.if refpolicy/policy/modules/contrib/apache.if
--- refpolicy/policy/modules/contrib/apache.if	2012-09-28 19:56:54.113040256 +0200
+++ refpolicy/policy/modules/contrib/apache.if	2012-09-27 20:03:30.726126498 +0200
@@ -1,9 +1,9 @@
-## <summary>Apache web server</summary>
+## <summary>Various web servers.</summary>
 
 ########################################
 ## <summary>
-##	Create a set of derived types for apache
-##	web content.
+##	Create a set of derived types for
+##	httpd web content.
 ## </summary>
 ## <param name="prefix">
 ##	<summary>
@@ -20,25 +20,27 @@
 		attribute httpd_ra_content;
 		type httpd_t, httpd_suexec_t, httpd_log_t;
 	')
-	# allow write access to public file transfer
-	# services files.
+
+	########################################
+	#
+	# Declarations
+	#
+
+	# Determine whether the script domain type can
+	# manage public file transfer services files.
 	gen_tunable(allow_httpd_$1_script_anon_write, false)
 
-	#This type is for webpages
 	type httpd_$1_content_t, httpdcontent; # customizable
 	typealias httpd_$1_content_t alias httpd_$1_script_ro_t;
 	files_type(httpd_$1_content_t)
 
-	# This type is used for .htaccess files
 	type httpd_$1_htaccess_t; # customizable;
 	files_type(httpd_$1_htaccess_t)
 
-	# Type that CGI scripts run as
 	type httpd_$1_script_t;
 	domain_type(httpd_$1_script_t)
 	role system_r types httpd_$1_script_t;
 
-	# This type is used for executable scripts files
 	type httpd_$1_script_exec_t, httpd_script_exec_type; # customizable;
 	corecmd_shell_entry_type(httpd_$1_script_t)
 	domain_entry_file(httpd_$1_script_t, httpd_$1_script_exec_t)
@@ -51,6 +53,14 @@
 	typealias httpd_$1_ra_content_t alias { httpd_$1_script_ra_t httpd_$1_content_ra_t };
 	files_type(httpd_$1_ra_content_t)
 
+	########################################
+	#
+	# Policy
+	#
+
+	allow httpd_$1_script_t self:fifo_file rw_file_perms;
+	allow httpd_$1_script_t self:unix_stream_socket connectto;
+
 	read_files_pattern(httpd_t, httpd_$1_content_t, httpd_$1_htaccess_t)
 
 	domtrans_pattern(httpd_suexec_t, httpd_$1_script_exec_t, httpd_$1_script_t)
@@ -58,18 +68,12 @@
 	allow httpd_t { httpd_$1_content_t httpd_$1_rw_content_t httpd_$1_script_exec_t }:dir search_dir_perms;
 	allow httpd_suexec_t { httpd_$1_content_t httpd_$1_content_t httpd_$1_rw_content_t httpd_$1_script_exec_t }:dir search_dir_perms;
 
-	allow httpd_$1_script_t self:fifo_file rw_file_perms;
-	allow httpd_$1_script_t self:unix_stream_socket connectto;
-
 	allow httpd_$1_script_t httpd_t:fifo_file write;
-	# apache should set close-on-exec
-	dontaudit httpd_$1_script_t httpd_t:unix_stream_socket { read write };
 
-	# Allow the script process to search the cgi directory, and users directory
 	allow httpd_$1_script_t httpd_$1_content_t:dir search_dir_perms;
 
 	append_files_pattern(httpd_$1_script_t, httpd_log_t, httpd_log_t)
-	logging_search_logs(httpd_$1_script_t)
+	read_lnk_files_pattern(httpd_$1_script_t, httpd_log_t, httpd_log_t)
 
 	can_exec(httpd_$1_script_t, httpd_$1_script_exec_t)
 	allow httpd_$1_script_t httpd_$1_script_exec_t:dir list_dir_perms;
@@ -105,6 +109,8 @@
 	libs_exec_ld_so(httpd_$1_script_t)
 	libs_exec_lib_files(httpd_$1_script_t)
 
+	logging_search_logs(httpd_$1_script_t)
+
 	miscfiles_read_fonts(httpd_$1_script_t)
 	miscfiles_read_public_files(httpd_$1_script_t)
 
@@ -123,7 +129,6 @@
 		miscfiles_manage_public_files(httpd_$1_script_t)
 	')
 
-	# Allow the web server to run scripts and serve pages
 	tunable_policy(`httpd_builtin_scripting',`
 		manage_dirs_pattern(httpd_t, httpd_$1_rw_content_t, httpd_$1_rw_content_t)
 		manage_files_pattern(httpd_t, httpd_$1_rw_content_t, httpd_$1_rw_content_t)
@@ -147,10 +152,8 @@
 	tunable_policy(`httpd_enable_cgi',`
 		allow httpd_$1_script_t httpd_$1_script_exec_t:file entrypoint;
 
-		# privileged users run the script:
 		domtrans_pattern(httpd_exec_scripts, httpd_$1_script_exec_t, httpd_$1_script_t)
 
-		# apache runs the script:
 		domtrans_pattern(httpd_t, httpd_$1_script_exec_t, httpd_$1_script_t)
 
 		allow httpd_t httpd_$1_script_t:process { signal sigkill sigstop };
@@ -164,8 +167,6 @@
 
 		kernel_read_system_state(httpd_$1_script_t)
 
-		dev_read_urand(httpd_$1_script_t)
-
 		fs_getattr_xattr_fs(httpd_$1_script_t)
 
 		files_read_etc_runtime_files(httpd_$1_script_t)
@@ -183,6 +184,17 @@
 	')
 
 	optional_policy(`
+		mysql_read_config(httpd_$1_script_t)
+		mysql_stream_connect(httpd_$1_script_t)
+		mysql_rw_db_sockets(httpd_$1_script_t)
+
+		tunable_policy(`httpd_enable_cgi && httpd_can_network_connect_db',`
+			mysql_tcp_connect(httpd_$1_script_t)
+		')
+	')
+
+	optional_policy(`
+		postgresql_stream_connect(httpd_$1_script_t)
 		postgresql_unpriv_client(httpd_$1_script_t)
 
 		tunable_policy(`httpd_enable_cgi && httpd_can_network_connect_db',`
@@ -197,7 +209,7 @@
 
 ########################################
 ## <summary>
-##	Role access for apache
+##	Role access for apache.
 ## </summary>
 ## <param name="role">
 ##	<summary>
@@ -206,7 +218,7 @@
 ## </param>
 ## <param name="domain">
 ##	<summary>
-##	User domain for the role
+##	User domain for the role.
 ##	</summary>
 ## </param>
 #
@@ -220,7 +232,7 @@
 
 	role $1 types httpd_user_script_t;
 
-	allow $2 httpd_user_htaccess_t:file { manage_file_perms relabelto relabelfrom };
+	allow $2 httpd_user_htaccess_t:file { manage_file_perms relabel_file_perms };
 
 	manage_dirs_pattern($2, httpd_user_content_t, httpd_user_content_t)
 	manage_files_pattern($2, httpd_user_content_t, httpd_user_content_t)
@@ -251,7 +263,6 @@
 	relabel_lnk_files_pattern($2, httpd_user_script_exec_t, httpd_user_script_exec_t)
 
 	tunable_policy(`httpd_enable_cgi',`
-		# If a user starts a script by hand it gets the proper context
 		domtrans_pattern($2, httpd_user_script_exec_t, httpd_user_script_t)
 	')
 
@@ -262,7 +273,7 @@
 
 ########################################
 ## <summary>
-##	Read httpd user scripts executables.
+##	Read user httpd script executable files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -282,7 +293,7 @@
 
 ########################################
 ## <summary>
-##	Read user web content.
+##	Read user httpd content.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -302,7 +313,7 @@
 
 ########################################
 ## <summary>
-##	Transition to apache.
+##	Execute httpd with a domain transition.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -321,7 +332,7 @@
 
 #######################################
 ## <summary>
-##	Send a generic signal to apache.
+##	Send generic signals to httpd.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -339,7 +350,7 @@
 
 ########################################
 ## <summary>
-##	Send a null signal to apache.
+##	Send null signals to httpd.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -357,7 +368,7 @@
 
 ########################################
 ## <summary>
-##	Send a SIGCHLD signal to apache.
+##	Send child terminated signals to httpd.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -375,7 +386,8 @@
 
 ########################################
 ## <summary>
-##	Inherit and use file descriptors from Apache.
+##	Inherit and use file descriptors
+##	from httpd.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -393,8 +405,8 @@
 
 ########################################
 ## <summary>
-##	Do not audit attempts to read and write Apache
-##	unnamed pipes.
+##	Do not audit attempts to read and
+##	write httpd unnamed pipes.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -412,8 +424,8 @@
 
 ########################################
 ## <summary>
-##	Do not audit attempts to read and write Apache
-##	unix domain stream sockets.
+##	Do not audit attempts to read and
+##	write httpd unix domain stream sockets.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -431,8 +443,8 @@
 
 ########################################
 ## <summary>
-##	Do not audit attempts to read and write Apache
-##	TCP sockets.
+##	Do not audit attempts to read and
+##	write httpd TCP sockets.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -572,7 +584,8 @@
 
 ########################################
 ## <summary>
-##	Create, read, write, and delete all web content.
+##	Create, read, write, and delete
+##	all httpd content.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -597,8 +610,7 @@
 
 ########################################
 ## <summary>
-##	Allow domain to  set the attributes
-##	of the APACHE cache directory.
+##	Set attributes httpd cache directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -611,13 +623,12 @@
 		type httpd_cache_t;
 	')
 
-	allow $1 httpd_cache_t:dir setattr;
+	allow $1 httpd_cache_t:dir setattr_dir_perms;
 ')
 
 ########################################
 ## <summary>
-##	Allow the specified domain to list
-##	Apache cache.
+##	List httpd cache directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -635,8 +646,7 @@
 
 ########################################
 ## <summary>
-##	Allow the specified domain to read
-##	and write Apache cache files.
+##	Read and write httpd cache files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -654,8 +664,7 @@
 
 ########################################
 ## <summary>
-##	Allow the specified domain to delete
-##	Apache cache.
+##	Delete httpd cache files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -673,8 +682,7 @@
 
 ########################################
 ## <summary>
-##	Allow the specified domain to read
-##	apache configuration files.
+##	Read httpd configuration files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -696,8 +704,27 @@
 
 ########################################
 ## <summary>
-##	Allow the specified domain to manage
-##	apache configuration files.
+##	Search httpd configuration directories.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`apache_search_config',`
+	gen_require(`
+		type httpd_config_t;
+	')
+
+	files_search_etc($1)
+	allow $1 httpd_config_t:dir search_dir_perms;
+')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	httpd configuration files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -718,8 +745,8 @@
 
 ########################################
 ## <summary>
-##	Execute the Apache helper program with
-##	a domain transition.
+##	Execute the Apache helper program
+##	with a domain transition.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -756,17 +783,16 @@
 #
 interface(`apache_run_helper',`
 	gen_require(`
-		type httpd_helper_t;
+		attribute_role httpd_helper_roles;
 	')
 
 	apache_domtrans_helper($1)
-	role $2 types httpd_helper_t;
+	roleattribute $2 httpd_helper_roles;
 ')
 
 ########################################
 ## <summary>
-##	Allow the specified domain to read
-##	apache log files.
+##	Read httpd log files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -788,8 +814,7 @@
 
 ########################################
 ## <summary>
-##	Allow the specified domain to append
-##	to apache log files.
+##	Append httpd log files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -809,8 +834,8 @@
 
 ########################################
 ## <summary>
-##	Do not audit attempts to append to the
-##	Apache logs.
+##	Do not audit attempts to append
+##	httpd log files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -823,13 +848,13 @@
 		type httpd_log_t;
 	')
 
-	dontaudit $1 httpd_log_t:file { getattr append };
+	dontaudit $1 httpd_log_t:file append_file_perms;
 ')
 
 ########################################
 ## <summary>
-##	Allow the specified domain to manage
-##	to apache log files.
+##	Create, read, write, and delete
+##	httpd log files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -850,8 +875,8 @@
 
 ########################################
 ## <summary>
-##	Do not audit attempts to search Apache
-##	module directories.
+##	Do not audit attempts to search
+##	httpd module directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -869,9 +894,7 @@
 
 ########################################
 ## <summary>
-##	Allow the specified domain to list
-##	the contents of the apache modules
-##	directory.
+##	List httpd module directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -889,8 +912,7 @@
 
 ########################################
 ## <summary>
-##	Allow the specified domain to execute
-##	apache modules.
+##	Execute httpd module files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -910,7 +932,27 @@
 
 ########################################
 ## <summary>
-##	Execute a domain transition to run httpd_rotatelogs.
+##	Read httpd module files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`apache_read_module_files',`
+	gen_require(`
+		type httpd_modules_t;
+	')
+
+	libs_search_lib($1)
+	read_files_pattern($1, httpd_modules_t, httpd_modules_t)
+')
+
+########################################
+## <summary>
+##	Execute a domain transition to
+##	run httpd_rotatelogs.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -923,13 +965,13 @@
 		type httpd_rotatelogs_t, httpd_rotatelogs_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, httpd_rotatelogs_exec_t, httpd_rotatelogs_t)
 ')
 
 ########################################
 ## <summary>
-##	Allow the specified domain to list
-##	apache system content files.
+##	List httpd system content directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -948,8 +990,8 @@
 
 ########################################
 ## <summary>
-##	Allow the specified domain to manage
-##	apache system content files.
+##	Create, read, write, and delete
+##	httpd system content files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -958,7 +1000,6 @@
 ## </param>
 ## <rolecap/>
 #
-# Note that httpd_sys_content_t is found in /var, /etc, /srv and /usr
 interface(`apache_manage_sys_content',`
 	gen_require(`
 		type httpd_sys_content_t;
@@ -972,8 +1013,30 @@
 
 ########################################
 ## <summary>
-##	Execute all web scripts in the system
-##	script domain.
+##	Create, read, write, and delete
+##	httpd system rw content.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`apache_manage_sys_rw_content',`
+	gen_require(`
+		type httpd_sys_rw_content_t;
+	')
+
+	apache_search_sys_content($1)
+	manage_dirs_pattern($1, httpd_sys_rw_content_t, httpd_sys_rw_content_t)
+	manage_files_pattern($1,httpd_sys_rw_content_t, httpd_sys_rw_content_t)
+	manage_lnk_files_pattern($1, httpd_sys_rw_content_t, httpd_sys_rw_content_t)
+')
+
+########################################
+## <summary>
+##	Execute all httpd scripts in the
+##	system script domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -981,8 +1044,6 @@
 ##	</summary>
 ## </param>
 #
-# cjp: this interface specifically added to allow
-# sysadm_t to run scripts
 interface(`apache_domtrans_sys_script',`
 	gen_require(`
 		attribute httpdcontent;
@@ -996,8 +1057,9 @@
 
 ########################################
 ## <summary>
-##	Do not audit attempts to read and write Apache
-##	system script unix domain stream sockets.
+##	Do not audit attempts to read and
+##	write httpd system script unix
+##	domain stream sockets.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1035,7 +1097,7 @@
 ########################################
 ## <summary>
 ##	Execute all user scripts in the user
-##	script domain.  Add user script domains
+##	script domain. Add user script domains
 ##	to the specified role.
 ## </summary>
 ## <param name="domain">
@@ -1045,7 +1107,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	Role allowed access..
+##	Role allowed access.
 ##	</summary>
 ## </param>
 #
@@ -1060,8 +1122,7 @@
 
 ########################################
 ## <summary>
-##	Allow the specified domain to read
-##	apache squirrelmail data.
+##	Read httpd squirrelmail data files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1079,8 +1140,7 @@
 
 ########################################
 ## <summary>
-##	Allow the specified domain to append
-##	apache squirrelmail data.
+##	Append httpd squirrelmail data files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1098,7 +1158,7 @@
 
 ########################################
 ## <summary>
-##	Search apache system content.
+##	Search httpd system content.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1111,12 +1171,13 @@
 		type httpd_sys_content_t;
 	')
 
+	files_search_var($1)
 	allow $1 httpd_sys_content_t:dir search_dir_perms;
 ')
 
 ########################################
 ## <summary>
-##	Read apache system content.
+##	Read httpd system content.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1136,7 +1197,7 @@
 
 ########################################
 ## <summary>
-##	Search apache system CGI directories.
+##	Search httpd system CGI directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1154,7 +1215,8 @@
 
 ########################################
 ## <summary>
-##	Create, read, write, and delete all user web content.
+##	Create, read, write, and delete all
+##	user httpd content.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1179,7 +1241,7 @@
 
 ########################################
 ## <summary>
-##	Search system script state directory.
+##	Search system script state directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1197,8 +1259,7 @@
 
 ########################################
 ## <summary>
-##	Allow the specified domain to read
-##	apache tmp files.
+##	Read httpd tmp files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1217,8 +1278,8 @@
 
 ########################################
 ## <summary>
-##	Dontaudit attempts to write
-##	apache tmp files.
+##	Do not audit attempts to write
+##	httpd tmp files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1240,9 +1301,6 @@
 ## </summary>
 ##	<desc>
 ##	<p>
-##	Execute CGI in the specified domain.
-##	</p>
-##	<p>
 ##	This is an interface to support third party modules
 ##	and its use is not allowed in upstream reference
 ##	policy.
@@ -1272,14 +1330,9 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate an apache environment
+##	All of the rules required to
+##	administrate an apache environment.
 ## </summary>
-## <param name="prefix">
-##	<summary>
-##	Prefix of the domain. Example, user would be
-##	the prefix for the uder_t domain.
-##	</summary>
-## </param>
 ## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
@@ -1304,7 +1357,7 @@
 		type httpd_initrc_exec_t;
 	')
 
-	allow $1 httpd_t:process { getattr ptrace signal_perms };
+	allow $1 httpd_t:process { ptrace signal_perms };
 	ps_process_pattern($1, httpd_t)
 
 	init_labeled_script_domtrans($1, httpd_initrc_exec_t)
@@ -1329,11 +1382,6 @@
 	admin_pattern($1, httpd_var_run_t)
 	files_pid_filetrans($1, httpd_var_run_t, file)
 
-	kernel_search_proc($1)
-	allow $1 httpd_t:dir list_dir_perms;
-
-	read_lnk_files_pattern($1, httpd_t, httpd_t)
-
 	admin_pattern($1, httpdcontent)
 	admin_pattern($1, httpd_script_exec_type)
 	admin_pattern($1, httpd_tmp_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/apache.te refpolicy/policy/modules/contrib/apache.te
--- refpolicy/policy/modules/contrib/apache.te	2012-09-28 19:56:54.051040254 +0200
+++ refpolicy/policy/modules/contrib/apache.te	2012-09-27 20:03:30.727126498 +0200
@@ -1,4 +1,4 @@
-policy_module(apache, 2.4.0)
+policy_module(apache, 2.5.3)
 
 #
 # NOTES:
@@ -19,133 +19,238 @@
 #
 
 ## <desc>
-## <p>
-## Allow Apache to modify public files
-## used for public file transfer services. Directories/Files must
-## be labeled public_content_rw_t.
-## </p>
+##	<p>
+##	Determine whether httpd can modify
+##	public files used for public file
+##	transfer services. Directories/Files must
+##	be labeled public_content_rw_t.
+##	</p>
 ## </desc>
 gen_tunable(allow_httpd_anon_write, false)
 
 ## <desc>
-## <p>
-## Allow Apache to use mod_auth_pam
-## </p>
+##	<p>
+##	Determine whether httpd can use mod_auth_pam.
+##	</p>
 ## </desc>
 gen_tunable(allow_httpd_mod_auth_pam, false)
 
 ## <desc>
-## <p>
-## Allow httpd to use built in scripting (usually php)
-## </p>
+##	<p>
+##	Determine whether httpd can use built in scripting (usually php).
+##	</p>
 ## </desc>
 gen_tunable(httpd_builtin_scripting, false)
 
 ## <desc>
-## <p>
-## Allow HTTPD scripts and modules to connect to the network using TCP.
-## </p>
+##	<p>
+##	Determine whether httpd can check spam.
+##	</p>
+## </desc>
+gen_tunable(httpd_can_check_spam, false)
+
+## <desc>
+##	<p>
+##	Determine whether httpd scripts and modules
+##	can connect to the network using TCP.
+##	</p>
 ## </desc>
 gen_tunable(httpd_can_network_connect, false)
 
 ## <desc>
-## <p>
-## Allow HTTPD scripts and modules to connect to databases over the network.
-## </p>
+##	<p>
+##	Determine whether httpd scripts and modules
+##	can connect to cobbler over the network.
+##	</p>
+## </desc>
+gen_tunable(httpd_can_network_connect_cobbler, false)
+
+## <desc>
+##	<p>
+##	Determine whether scripts and modules can
+##	connect to databases over the network.
+##	</p>
 ## </desc>
 gen_tunable(httpd_can_network_connect_db, false)
 
 ## <desc>
-## <p>
-## Allow httpd to act as a relay
-## </p>
+##	<p>
+##	Determine whether httpd can connect to
+##	ldap over the network.
+##	</p>
+## </desc>
+gen_tunable(httpd_can_network_connect_ldap, false)
+
+## <desc>
+##	<p>
+##	Determine whether httpd can connect
+##	to memcache server over the network.
+##	</p>
+## </desc>
+gen_tunable(httpd_can_network_connect_memcache, false)
+
+## <desc>
+##	<p>
+##	Determine whether httpd can act as a relay.
+##	</p>
 ## </desc>
 gen_tunable(httpd_can_network_relay, false)
 
 ## <desc>
-## <p>
-## Allow http daemon to send mail
-## </p>
+##	<p>
+##	Determine whether httpd daemon can
+##	connect to zabbix over the network.
+##	</p>
+## </desc>
+gen_tunable(httpd_can_network_connect_zabbix, false)
+
+## <desc>
+##	<p>
+##	Determine whether httpd can send mail.
+##	</p>
 ## </desc>
 gen_tunable(httpd_can_sendmail, false)
 
 ## <desc>
-## <p>
-## Allow Apache to communicate with avahi service via dbus
-## </p>
+##	<p>
+##	Determine whether httpd can communicate
+##	with avahi service via dbus.
+##	</p>
 ## </desc>
 gen_tunable(httpd_dbus_avahi, false)
 
 ## <desc>
-## <p>
-## Allow httpd cgi support
-## </p>
+##	<p>
+##	Determine wether httpd can use support.
+##	</p>
 ## </desc>
 gen_tunable(httpd_enable_cgi, false)
 
 ## <desc>
-## <p>
-## Allow httpd to act as a FTP server by
-## listening on the ftp port.
-## </p>
+##	<p>
+##	Determine whether httpd can act as a
+##	FTP server by listening on the ftp port.
+##	</p>
 ## </desc>
 gen_tunable(httpd_enable_ftp_server, false)
 
 ## <desc>
-## <p>
-## Allow httpd to read home directories
-## </p>
+##	<p>
+##	Determine whether httpd can traverse
+##	user home directories.
+##	</p>
 ## </desc>
 gen_tunable(httpd_enable_homedirs, false)
 
 ## <desc>
-## <p>
-## Allow httpd daemon to change its resource limits
-## </p>
+##	<p>
+##	Determine whether httpd can execute
+##	its temporary content.
+##	</p>
+## </desc>
+gen_tunable(httpd_tmp_exec, false)
+
+## <desc>
+##	<p>
+##	Determine whether httpd scripts and
+##	modules can use execmem and execstack.
+##	</p>
+## </desc>
+gen_tunable(httpd_execmem, false)
+
+## <desc>
+##	<p>
+##	Determine whether httpd can connect
+##	to port 80 for graceful shutdown.
+##	</p>
+## </desc>
+gen_tunable(httpd_graceful_shutdown, false)
+
+## <desc>
+##	<p>
+##	Determine whether httpd can
+##	manage IPA content files.
+##	</p>
+## </desc>
+gen_tunable(httpd_manage_ipa, false)
+
+## <desc>
+##	<p>
+##	Determine whether httpd can use mod_auth_ntlm_winbind.
+##	</p>
+## </desc>
+gen_tunable(httpd_mod_auth_ntlm_winbind, false)
+
+## <desc>
+##	<p>
+##	Determine whether httpd can read
+##	generic user home content files.
+##	</p>
+## </desc>
+gen_tunable(httpd_read_user_content, false)
+
+## <desc>
+##	<p>
+##	Determine whether httpd can change
+##	its resource limits.
+##	</p>
 ## </desc>
 gen_tunable(httpd_setrlimit, false)
 
 ## <desc>
-## <p>
-## Allow HTTPD to run SSI executables in the same domain as system CGI scripts.
-## </p>
+##	<p>
+##	Determine whether httpd can run
+##	SSI executables in the same domain
+##	as system CGI scripts.
+##	</p>
 ## </desc>
 gen_tunable(httpd_ssi_exec, false)
 
 ## <desc>
-## <p>
-## Unify HTTPD to communicate with the terminal.
-## Needed for entering the passphrase for certificates at
-## the terminal.
-## </p>
+##	<p>
+##	Determine whether httpd can communicate
+##	with the terminal. Needed for entering the
+##	passphrase for certificates at the terminal.
+##	</p>
 ## </desc>
 gen_tunable(httpd_tty_comm, false)
 
 ## <desc>
-## <p>
-## Unify HTTPD handling of all content files.
-## </p>
+##	<p>
+##	Determine whether httpd can have full access
+##	to its content types.
+##	</p>
 ## </desc>
 gen_tunable(httpd_unified, false)
 
 ## <desc>
-## <p>
-## Allow httpd to access cifs file systems
-## </p>
+##	<p>
+##	Determine whether httpd can use
+##	cifs file systems.
+##	</p>
 ## </desc>
 gen_tunable(httpd_use_cifs, false)
 
 ## <desc>
-## <p>
-## Allow httpd to run gpg
-## </p>
+##	<p>
+##	Determine whether httpd can
+##	use fuse file systems.
+##	</p>
+## </desc>
+gen_tunable(httpd_use_fusefs, false)
+
+## <desc>
+##	<p>
+##	Determine whether httpd can use gpg.
+##	</p>
 ## </desc>
 gen_tunable(httpd_use_gpg, false)
 
 ## <desc>
-## <p>
-## Allow httpd to access nfs file systems
-## </p>
+##	<p>
+##	Determine whether httpd to use
+##	nfs file systems.
+##	</p>
 ## </desc>
 gen_tunable(httpd_use_nfs, false)
 
@@ -163,25 +268,23 @@
 # user script domains
 attribute httpd_script_domains;
 
+attribute_role httpd_helper_roles;
+roleattribute system_r httpd_helper_roles;
+
 type httpd_t;
 type httpd_exec_t;
 init_daemon_domain(httpd_t, httpd_exec_t)
-role system_r types httpd_t;
 
-# httpd_cache_t is the type given to the /var/cache/httpd
-# directory and the files under that directory
 type httpd_cache_t;
 files_type(httpd_cache_t)
 
-# httpd_config_t is the type given to the configuration files
 type httpd_config_t;
-files_type(httpd_config_t)
+files_config_file(httpd_config_t)
 
 type httpd_helper_t;
 type httpd_helper_exec_t;
-domain_type(httpd_helper_t)
-domain_entry_file(httpd_helper_t, httpd_helper_exec_t)
-role system_r types httpd_helper_t;
+application_domain(httpd_helper_t, httpd_helper_exec_t)
+role httpd_helper_roles types httpd_helper_t;
 
 type httpd_initrc_exec_t;
 init_script_file(httpd_initrc_exec_t)
@@ -192,8 +295,6 @@
 type httpd_log_t;
 logging_log_file(httpd_log_t)
 
-# httpd_modules_t is the type given to module files (libraries)
-# that come with Apache /etc/httpd/modules and /usr/lib/apache
 type httpd_modules_t;
 files_type(httpd_modules_t)
 
@@ -213,8 +314,7 @@
 type httpd_squirrelmail_t;
 files_type(httpd_squirrelmail_t)
 
-# SUEXEC runs user scripts as their own user ID
-type httpd_suexec_t; #, daemon;
+type httpd_suexec_t;
 type httpd_suexec_exec_t;
 domain_type(httpd_suexec_t)
 domain_entry_file(httpd_suexec_t, httpd_suexec_exec_t)
@@ -223,7 +323,6 @@
 type httpd_suexec_tmp_t;
 files_tmp_file(httpd_suexec_tmp_t)
 
-# setup the system domain for system CGI scripts
 apache_content_template(sys)
 typealias httpd_sys_content_t alias ntop_http_content_t;
 
@@ -256,28 +355,38 @@
 typealias httpd_user_ra_content_t alias { httpd_staff_script_ra_t httpd_sysadm_script_ra_t };
 typealias httpd_user_ra_content_t alias { httpd_auditadm_script_ra_t httpd_secadm_script_ra_t };
 
-# for apache2 memory mapped files
 type httpd_var_lib_t;
 files_type(httpd_var_lib_t)
 
 type httpd_var_run_t;
 files_pid_file(httpd_var_run_t)
 
-# File Type of squirrelmail attachments
 type squirrelmail_spool_t;
 files_tmp_file(squirrelmail_spool_t)
 
+type httpd_passwd_t;
+type httpd_passwd_exec_t;
+domain_type(httpd_passwd_t)
+domain_entry_file(httpd_passwd_t, httpd_passwd_exec_t)
+role system_r types httpd_passwd_t;
+
+type httpd_unconfined_script_t;
+type httpd_unconfined_script_exec_t;
+domain_type(httpd_unconfined_script_t)
+domain_entry_file(httpd_unconfined_script_t, httpd_unconfined_script_exec_t)
+role system_r types httpd_unconfined_script_t;
+
 optional_policy(`
 	prelink_object_file(httpd_modules_t)
 ')
 
 ########################################
 #
-# Apache server local policy
+# Local policy
 #
 
 allow httpd_t self:capability { chown dac_override kill setgid setuid sys_nice sys_tty_config };
-dontaudit httpd_t self:capability { net_admin sys_tty_config };
+dontaudit httpd_t self:capability net_admin;
 allow httpd_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
 allow httpd_t self:fd use;
 allow httpd_t self:sock_file read_sock_file_perms;
@@ -286,33 +395,27 @@
 allow httpd_t self:sem create_sem_perms;
 allow httpd_t self:msgq create_msgq_perms;
 allow httpd_t self:msg { send receive };
-allow httpd_t self:unix_dgram_socket { create_socket_perms sendto };
-allow httpd_t self:unix_stream_socket { create_stream_socket_perms connectto };
-allow httpd_t self:tcp_socket create_stream_socket_perms;
-allow httpd_t self:udp_socket create_socket_perms;
+allow httpd_t self:unix_dgram_socket sendto;
+allow httpd_t self:unix_stream_socket { accept connectto listen };
+allow httpd_t self:tcp_socket { accept listen };
 
-# Allow httpd_t to put files in /var/cache/httpd etc
 manage_dirs_pattern(httpd_t, httpd_cache_t, httpd_cache_t)
 manage_files_pattern(httpd_t, httpd_cache_t, httpd_cache_t)
 manage_lnk_files_pattern(httpd_t, httpd_cache_t, httpd_cache_t)
+files_var_filetrans(httpd_t, httpd_cache_t, dir)
 
-# Allow the httpd_t to read the web servers config files
 allow httpd_t httpd_config_t:dir list_dir_perms;
 read_files_pattern(httpd_t, httpd_config_t, httpd_config_t)
 read_lnk_files_pattern(httpd_t, httpd_config_t, httpd_config_t)
 
-can_exec(httpd_t, httpd_exec_t)
-
 allow httpd_t httpd_lock_t:file manage_file_perms;
 files_lock_filetrans(httpd_t, httpd_lock_t, file)
 
-allow httpd_t httpd_log_t:dir setattr;
+allow httpd_t httpd_log_t:dir setattr_dir_perms;
 create_files_pattern(httpd_t, httpd_log_t, httpd_log_t)
 append_files_pattern(httpd_t, httpd_log_t, httpd_log_t)
 read_files_pattern(httpd_t, httpd_log_t, httpd_log_t)
 read_lnk_files_pattern(httpd_t, httpd_log_t, httpd_log_t)
-# cjp: need to refine create interfaces to
-# cut this back to add_name only
 logging_log_filetrans(httpd_t, httpd_log_t, file)
 
 allow httpd_t httpd_modules_t:dir list_dir_perms;
@@ -320,8 +423,6 @@
 read_files_pattern(httpd_t, httpd_modules_t, httpd_modules_t)
 read_lnk_files_pattern(httpd_t, httpd_modules_t, httpd_modules_t)
 
-apache_domtrans_rotatelogs(httpd_t)
-# Apache-httpd needs to be able to send signals to the log rotate procs.
 allow httpd_t httpd_rotatelogs_t:process signal_perms;
 
 manage_dirs_pattern(httpd_t, httpd_squirrelmail_t, httpd_squirrelmail_t)
@@ -338,8 +439,10 @@
 
 manage_dirs_pattern(httpd_t, httpd_tmp_t, httpd_tmp_t)
 manage_files_pattern(httpd_t, httpd_tmp_t, httpd_tmp_t)
+manage_sock_files_pattern(httpd_t, httpd_tmp_t, httpd_tmp_t)
 manage_lnk_files_pattern(httpd_t, httpd_tmp_t, httpd_tmp_t)
-files_tmp_filetrans(httpd_t, httpd_tmp_t, { file dir lnk_file })
+files_tmp_filetrans(httpd_t, httpd_tmp_t, { file dir lnk_file sock_file })
+userdom_user_tmp_filetrans(httpd_t, httpd_tmp_t, dir)
 
 manage_dirs_pattern(httpd_t, httpd_tmpfs_t, httpd_tmpfs_t)
 manage_files_pattern(httpd_t, httpd_tmpfs_t, httpd_tmpfs_t)
@@ -348,8 +451,9 @@
 manage_sock_files_pattern(httpd_t, httpd_tmpfs_t, httpd_tmpfs_t)
 fs_tmpfs_filetrans(httpd_t, httpd_tmpfs_t, { dir file lnk_file sock_file fifo_file })
 
+manage_dirs_pattern(httpd_t, httpd_var_lib_t, httpd_var_lib_t)
 manage_files_pattern(httpd_t, httpd_var_lib_t, httpd_var_lib_t)
-files_var_lib_filetrans(httpd_t, httpd_var_lib_t, file)
+files_var_lib_filetrans(httpd_t, httpd_var_lib_t, { dir file })
 
 setattr_dirs_pattern(httpd_t, httpd_var_run_t, httpd_var_run_t)
 manage_dirs_pattern(httpd_t, httpd_var_run_t, httpd_var_run_t)
@@ -361,56 +465,66 @@
 manage_files_pattern(httpd_t, squirrelmail_spool_t, squirrelmail_spool_t)
 manage_lnk_files_pattern(httpd_t, squirrelmail_spool_t, squirrelmail_spool_t)
 
+can_exec(httpd_t, httpd_exec_t)
+
+domtrans_pattern(httpd_t, httpd_helper_exec_t, httpd_helper_t)
+domtrans_pattern(httpd_t, httpd_passwd_exec_t, httpd_passwd_t)
+domtrans_pattern(httpd_t, httpd_php_exec_t, httpd_php_t)
+domtrans_pattern(httpd_t, httpd_rotatelogs_exec_t, httpd_rotatelogs_t)
+domtrans_pattern(httpd_t, httpd_suexec_exec_t, httpd_suexec_t)
+
+domtrans_pattern(httpd_t, httpd_unconfined_script_exec_t, httpd_unconfined_script_t)
+allow httpd_t httpd_unconfined_script_t:process signal_perms;
+
 kernel_read_kernel_sysctls(httpd_t)
-# for modules that want to access /proc/meminfo
+kernel_read_network_state(httpd_t)
 kernel_read_system_state(httpd_t)
+kernel_search_network_sysctl(httpd_t)
 
 corenet_all_recvfrom_unlabeled(httpd_t)
 corenet_all_recvfrom_netlabel(httpd_t)
 corenet_tcp_sendrecv_generic_if(httpd_t)
-corenet_udp_sendrecv_generic_if(httpd_t)
 corenet_tcp_sendrecv_generic_node(httpd_t)
-corenet_udp_sendrecv_generic_node(httpd_t)
-corenet_tcp_sendrecv_all_ports(httpd_t)
-corenet_udp_sendrecv_all_ports(httpd_t)
 corenet_tcp_bind_generic_node(httpd_t)
+
+corenet_sendrecv_http_server_packets(httpd_t)
 corenet_tcp_bind_http_port(httpd_t)
+corenet_tcp_sendrecv_http_port(httpd_t)
+
+corenet_sendrecv_http_cache_server_packets(httpd_t)
 corenet_tcp_bind_http_cache_port(httpd_t)
-corenet_sendrecv_http_server_packets(httpd_t)
-# Signal self for shutdown
-corenet_tcp_connect_http_port(httpd_t)
+corenet_tcp_sendrecv_http_cache_port(httpd_t)
+
+corecmd_exec_bin(httpd_t)
+corecmd_exec_shell(httpd_t)
 
 dev_read_sysfs(httpd_t)
 dev_read_rand(httpd_t)
 dev_read_urand(httpd_t)
 dev_rw_crypto(httpd_t)
 
+domain_use_interactive_fds(httpd_t)
+
 fs_getattr_all_fs(httpd_t)
 fs_search_auto_mountpoints(httpd_t)
 
-auth_use_nsswitch(httpd_t)
-
-# execute perl
-corecmd_exec_bin(httpd_t)
-corecmd_exec_shell(httpd_t)
-
-domain_use_interactive_fds(httpd_t)
+fs_getattr_all_fs(httpd_t)
+fs_read_anon_inodefs_files(httpd_t)
+fs_read_iso9660_files(httpd_t)
+fs_search_auto_mountpoints(httpd_t)
 
 files_dontaudit_getattr_all_pids(httpd_t)
 files_read_usr_files(httpd_t)
 files_list_mnt(httpd_t)
 files_search_spool(httpd_t)
+files_read_var_symlinks(httpd_t)
 files_read_var_lib_files(httpd_t)
 files_search_home(httpd_t)
 files_getattr_home_dir(httpd_t)
-# for modules that want to access /etc/mtab
 files_read_etc_runtime_files(httpd_t)
-# Allow httpd_t to have access to files such as nisswitch.conf
-files_read_etc_files(httpd_t)
-# for tomcat
 files_read_var_lib_symlinks(httpd_t)
 
-fs_search_auto_mountpoints(httpd_sys_script_t)
+auth_use_nsswitch(httpd_t)
 
 libs_read_lib_files(httpd_t)
 
@@ -420,39 +534,64 @@
 miscfiles_read_fonts(httpd_t)
 miscfiles_read_public_files(httpd_t)
 miscfiles_read_generic_certs(httpd_t)
+miscfiles_read_tetex_data(httpd_t)
 
 seutil_dontaudit_search_config(httpd_t)
 
 userdom_use_unpriv_users_fds(httpd_t)
 
-tunable_policy(`allow_httpd_anon_write',`
-	miscfiles_manage_public_files(httpd_t)
+ifdef(`hide_broken_symptoms',`
+	libs_exec_lib_files(httpd_t)
 ')
 
-ifdef(`TODO', `
+ifdef(`TODO',`
 #
 # We need optionals to be able to be within booleans to make this work
 #
 tunable_policy(`allow_httpd_mod_auth_pam',`
 	auth_domtrans_chk_passwd(httpd_t)
+	logging_send_audit_msgs(httpd_t)
 ')
 ')
 
+tunable_policy(`allow_httpd_anon_write',`
+	miscfiles_manage_public_files(httpd_t)
+')
+
 tunable_policy(`httpd_can_network_connect',`
+	corenet_sendrecv_all_client_packets(httpd_t)
 	corenet_tcp_connect_all_ports(httpd_t)
+	corenet_tcp_sendrecv_all_ports(httpd_t)
+')
+
+tunable_policy(`httpd_can_network_connect_db',`
+	corenet_sendrecv_gds_db_client_packets(httpd_t)
+	corenet_tcp_connect_gds_db_port(httpd_t)
+	corenet_tcp_sendrecv_gds_db_port(httpd_t)
+	corenet_sendrecv_mssql_client_packets(httpd_t)
+	corenet_tcp_connect_mssql_port(httpd_t)
+	corenet_tcp_sendrecv_mssql_port(httpd_t)
+	corenet_sendrecv_oracledb_client_packets(httpd_t)
+	corenet_tcp_connect_oracledb_port(httpd_t)
+	corenet_tcp_sendrecv_oracledb_port(httpd_t)
 ')
 
 tunable_policy(`httpd_can_network_relay',`
-	# allow httpd to work as a relay
-	corenet_tcp_connect_gopher_port(httpd_t)
-	corenet_tcp_connect_ftp_port(httpd_t)
-	corenet_tcp_connect_http_port(httpd_t)
-	corenet_tcp_connect_http_cache_port(httpd_t)
-	corenet_tcp_connect_memcache_port(httpd_t)
 	corenet_sendrecv_gopher_client_packets(httpd_t)
+	corenet_tcp_connect_gopher_port(httpd_t)
+	corenet_tcp_sendrecv_gopher_port(httpd_t)
 	corenet_sendrecv_ftp_client_packets(httpd_t)
+	corenet_tcp_connect_ftp_port(httpd_t)
+	corenet_tcp_sendrecv_ftp_port(httpd_t)
 	corenet_sendrecv_http_client_packets(httpd_t)
+	corenet_tcp_connect_http_port(httpd_t)
+	corenet_tcp_sendrecv_http_port(httpd_t)
 	corenet_sendrecv_http_cache_client_packets(httpd_t)
+	corenet_tcp_connect_http_cache_port(httpd_t)
+	corenet_tcp_sendrecv_http_cache_port(httpd_t)
+	corenet_sendrecv_squid_client_packets(httpd_t)
+	corenet_tcp_connect_squid_port(httpd_t)
+	corenet_tcp_sendrecv_squid_port(httpd_t)
 ')
 
 tunable_policy(`httpd_enable_cgi && httpd_use_nfs',`
@@ -463,8 +602,16 @@
 	fs_cifs_domtrans(httpd_t, httpd_sys_script_t)
 ')
 
+# tunable_policy(`httpd_enable_cgi && httpd_use_fusefs',`
+#	fs_fusefs_domtrans(httpd_t, httpd_sys_script_t)
+# ')
+
 tunable_policy(`httpd_enable_cgi && httpd_unified && httpd_builtin_scripting',`
 	domtrans_pattern(httpd_t, httpdcontent, httpd_sys_script_t)
+	filetrans_pattern(httpd_t, httpd_sys_content_t, httpd_sys_rw_content_t, { file dir lnk_file })
+	manage_dirs_pattern(httpd_t, httpdcontent, httpd_sys_rw_content_t)
+	manage_files_pattern(httpd_t, httpdcontent, httpd_sys_rw_content_t)
+	manage_lnk_files_pattern(httpd_t, httpdcontent, httpd_sys_rw_content_t)
 
 	manage_dirs_pattern(httpd_t, httpdcontent, httpdcontent)
 	manage_files_pattern(httpd_t, httpdcontent, httpdcontent)
@@ -472,28 +619,70 @@
 ')
 
 tunable_policy(`httpd_enable_ftp_server',`
+	corenet_sendrecv_ftp_server_packets(httpd_t)
 	corenet_tcp_bind_ftp_port(httpd_t)
+	corenet_tcp_sendrecv_ftp_port(httpd_t)
 ')
 
 tunable_policy(`httpd_enable_homedirs',`
-	userdom_read_user_home_content_files(httpd_t)
+	userdom_search_user_home_dirs(httpd_t)
 ')
 
 tunable_policy(`httpd_enable_homedirs && use_nfs_home_dirs',`
+	fs_list_auto_mountpoints(httpd_t)
 	fs_read_nfs_files(httpd_t)
 	fs_read_nfs_symlinks(httpd_t)
+	fs_exec_nfs_files(httpd_t)
 ')
 
 tunable_policy(`httpd_enable_homedirs && use_samba_home_dirs',`
+	fs_list_auto_mountpoints(httpd_t)
 	fs_read_cifs_files(httpd_t)
 	fs_read_cifs_symlinks(httpd_t)
+	fs_exec_cifs_files(httpd_t)
+')
+
+tunable_policy(`httpd_execmem',`
+	allow httpd_t self:process { execmem execstack };
 ')
 
 tunable_policy(`httpd_can_sendmail',`
-	# allow httpd to connect to mail servers
-	corenet_tcp_connect_smtp_port(httpd_t)
 	corenet_sendrecv_smtp_client_packets(httpd_t)
+	corenet_tcp_connect_smtp_port(httpd_t)
+	corenet_tcp_sendrecv_smtp_port(httpd_t)
+	corenet_sendrecv_pop_client_packets(httpd_t)
+	corenet_tcp_connect_pop_port(httpd_t)
+	corenet_tcp_sendrecv_pop_port(httpd_t)
 	mta_send_mail(httpd_t)
+	mta_signal_system_mail(httpd_t)
+')
+
+optional_policy(`
+	tunable_policy(`httpd_can_network_connect_zabbix',`
+		zabbix_tcp_connect(httpd_t)
+	')
+')
+
+optional_policy(`
+	tunable_policy(`httpd_can_sendmail && httpd_can_check_spam',`
+		spamassassin_domtrans_client(httpd_t)
+	')
+')
+
+tunable_policy(`httpd_graceful_shutdown',`
+	corenet_sendrecv_http_client_packets(httpd_t)
+	corenet_tcp_connect_http_port(httpd_t)
+	corenet_tcp_sendrecv_http_port(httpd_t)
+')
+
+optional_policy(`
+	tunable_policy(`httpd_mod_auth_ntlm_winbind',`
+		samba_domtrans_winbind_helper(httpd_t)
+	')
+')
+
+tunable_policy(`httpd_read_user_content',`
+	userdom_read_user_home_content_files(httpd_t)
 ')
 
 tunable_policy(`httpd_setrlimit',`
@@ -503,21 +692,42 @@
 
 tunable_policy(`httpd_ssi_exec',`
 	corecmd_shell_domtrans(httpd_t, httpd_sys_script_t)
-	allow httpd_sys_script_t httpd_t:fd use;
-	allow httpd_sys_script_t httpd_t:fifo_file rw_file_perms;
-	allow httpd_sys_script_t httpd_t:process sigchld;
 ')
 
-# When the admin starts the server, the server wants to access
-# the TTY or PTY associated with the session. The httpd appears
-# to run correctly without this permission, so the permission
-# are dontaudited here.
+tunable_policy(`httpd_tmp_exec && httpd_builtin_scripting',`
+	can_exec(httpd_t, httpd_tmp_t)
+')
+
 tunable_policy(`httpd_tty_comm',`
 	userdom_use_user_terminals(httpd_t)
 ',`
 	userdom_dontaudit_use_user_terminals(httpd_t)
 ')
 
+tunable_policy(`httpd_use_cifs',`
+	fs_list_auto_mountpoints(httpd_t)
+	fs_manage_cifs_dirs(httpd_t)
+	fs_manage_cifs_files(httpd_t)
+	fs_manage_cifs_symlinks(httpd_t)
+	fs_exec_cifs_files(httpd_t)
+')
+
+tunable_policy(`httpd_use_nfs',`
+	fs_list_auto_mountpoints(httpd_t)
+	fs_manage_nfs_dirs(httpd_t)
+	fs_manage_nfs_files(httpd_t)
+	fs_manage_nfs_symlinks(httpd_t)
+	fs_exec_nfs_files(httpd_t)
+')
+
+tunable_policy(`httpd_use_fusefs',`
+	fs_list_auto_mountpoints(httpd_t)
+	fs_manage_fusefs_dirs(httpd_t)
+	fs_manage_fusefs_files(httpd_t)
+	# fs_manage_fusefs_symlinks(httpd_t)
+	fs_exec_fusefs_files(httpd_t)
+')
+
 optional_policy(`
 	calamaris_read_www_files(httpd_t)
 ')
@@ -527,7 +737,8 @@
 ')
 
 optional_policy(`
-	cobbler_search_lib(httpd_t)
+	cobbler_read_config(httpd_t)
+	cobbler_read_lib_files(httpd_t)
 ')
 
 optional_policy(`
@@ -551,8 +762,16 @@
 ')
 
 optional_policy(`
+	git_read_generic_sys_content_files(httpd_t)
+')
+
+optional_policy(`
+	gitosis_read_lib_files(httpd_t)
+')
+
+optional_policy(`
 	tunable_policy(`httpd_enable_cgi && httpd_use_gpg',`
-		gpg_domtrans(httpd_t)
+		gpg_domtrans_web(httpd_t)
 	')
 ')
 
@@ -561,21 +780,35 @@
 ')
 
 optional_policy(`
-	# needed by FreeIPA
 	ldap_stream_connect(httpd_t)
+
+	tunable_policy(`httpd_can_network_connect_ldap',`
+		ldap_tcp_connect(httpd_t)
+	')
 ')
 
 optional_policy(`
 	mailman_signal_cgi(httpd_t)
 	mailman_domtrans_cgi(httpd_t)
 	mailman_read_data_files(httpd_t)
-	# should have separate types for public and private archives
 	mailman_search_data(httpd_t)
 	mailman_read_archive(httpd_t)
 ')
 
 optional_policy(`
-	# Allow httpd to work with mysql
+	memcached_stream_connect(httpd_t)
+
+	tunable_policy(`httpd_can_network_connect_memcache',`
+		memcached_tcp_connect(httpd_t)
+	')
+
+	tunable_policy(`httpd_manage_ipa',`
+		memcached_manage_pid_files(httpd_t)
+	')
+')
+
+optional_policy(`
+	mysql_read_config(httpd_t)
 	mysql_stream_connect(httpd_t)
 	mysql_rw_db_sockets(httpd_t)
 
@@ -596,7 +829,6 @@
 ')
 
 optional_policy(`
-	# Allow httpd to work with postgresql
 	postgresql_stream_connect(httpd_t)
 	postgresql_unpriv_client(httpd_t)
 
@@ -606,10 +838,22 @@
 ')
 
 optional_policy(`
+	puppet_read_lib_files(httpd_t)
+')
+
+optional_policy(`
+	rpc_search_nfs_state_data(httpd_t)
+')
+
+optional_policy(`
 	seutil_sigchld_newrole(httpd_t)
 ')
 
 optional_policy(`
+	smokeping_read_lib_files(httpd_t)
+')
+
+optional_policy(`
 	snmp_dontaudit_read_snmp_var_lib_files(httpd_t)
 	snmp_dontaudit_write_snmp_var_lib_files(httpd_t)
 ')
@@ -624,22 +868,28 @@
 
 ########################################
 #
-# Apache helper local policy
+# Helper local policy
 #
 
-domtrans_pattern(httpd_t, httpd_helper_exec_t, httpd_helper_t)
+read_files_pattern(httpd_helper_t, httpd_config_t, httpd_config_t)
 
-allow httpd_helper_t httpd_config_t:file read_file_perms;
+append_files_pattern(httpd_helper_t, httpd_log_t, httpd_log_t)
+read_lnk_files_pattern(httpd_helper_t, httpd_log_t, httpd_log_t)
 
-allow httpd_helper_t httpd_log_t:file append_file_perms;
+files_search_etc(httpd_helper_t)
 
+logging_search_logs(httpd_helper_t)
 logging_send_syslog_msg(httpd_helper_t)
 
-userdom_use_user_terminals(httpd_helper_t)
+tunable_policy(`httpd_tty_comm',`
+	userdom_use_user_terminals(httpd_helper_t)
+',`
+	userdom_dontaudit_use_user_terminals(httpd_helper_t)
+')
 
 ########################################
 #
-# Apache PHP script local policy
+# PHP script local policy
 #
 
 allow httpd_php_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
@@ -654,63 +904,126 @@
 allow httpd_php_t self:sem create_sem_perms;
 allow httpd_php_t self:msgq create_msgq_perms;
 allow httpd_php_t self:msg { send receive };
+allow httpd_php_t self:tcp_socket { accept listen };
 
-domtrans_pattern(httpd_t, httpd_php_exec_t, httpd_php_t)
-
-# allow php to read and append to apache logfiles
-allow httpd_php_t httpd_log_t:file { read_file_perms append_file_perms };
+append_files_pattern(httpd_php_t, httpd_log_t, httpd_log_t)
+read_files_pattern(httpd_php_t, httpd_log_t, httpd_log_t)
+read_lnk_files_pattern(httpd_php_t, httpd_log_t, httpd_log_t)
 
 manage_dirs_pattern(httpd_php_t, httpd_php_tmp_t, httpd_php_tmp_t)
 manage_files_pattern(httpd_php_t, httpd_php_tmp_t, httpd_php_tmp_t)
 files_tmp_filetrans(httpd_php_t, httpd_php_tmp_t, { file dir })
 
+corenet_all_recvfrom_unlabeled(httpd_php_t)
+corenet_all_recvfrom_netlabel(httpd_php_t)
+corenet_tcp_sendrecv_generic_if(httpd_php_t)
+corenet_tcp_sendrecv_generic_node(httpd_php_t)
+
 fs_search_auto_mountpoints(httpd_php_t)
 
 auth_use_nsswitch(httpd_php_t)
 
-libs_exec_lib_files(httpd_php_t)
+libs_read_lib_files(httpd_php_t)
+
+logging_search_logs(httpd_php_t)
 
 userdom_use_unpriv_users_fds(httpd_php_t)
 
+ifdef(`hide_broken_symptoms',`
+	libs_exec_lib_files(httpd_php_t)
+')
+
+tunable_policy(`httpd_can_network_connect',`
+	corenet_tcp_connect_all_ports(httpd_php_t)
+	corenet_sendrecv_all_client_packets(httpd_php_t)
+	corenet_tcp_sendrecv_all_ports(httpd_php_t)
+')
+
 tunable_policy(`httpd_can_network_connect_db',`
-	corenet_tcp_connect_mysqld_port(httpd_t)
-	corenet_sendrecv_mysqld_client_packets(httpd_t)
-	corenet_tcp_connect_mysqld_port(httpd_sys_script_t)
-	corenet_sendrecv_mysqld_client_packets(httpd_sys_script_t)
-	corenet_tcp_connect_mysqld_port(httpd_suexec_t)
-	corenet_sendrecv_mysqld_client_packets(httpd_suexec_t)
+	corenet_sendrecv_gds_db_client_packets(httpd_php_t)
+	corenet_tcp_connect_gds_db_port(httpd_php_t)
+	corenet_tcp_sendrecv_gds_db_port(httpd_php_t)
+	corenet_sendrecv_mssql_client_packets(httpd_php_t)
+	corenet_tcp_connect_mssql_port(httpd_php_t)
+	corenet_tcp_sendrecv_mssql_port(httpd_php_t)
+	corenet_sendrecv_oracledb_client_packets(httpd_php_t)
+	corenet_tcp_connect_oracledb_port(httpd_php_t)
+	corenet_tcp_sendrecv_oracledb_port(httpd_php_t)
+')
 
-	corenet_tcp_connect_mssql_port(httpd_t)
-	corenet_sendrecv_mssql_client_packets(httpd_t)
-	corenet_tcp_connect_mssql_port(httpd_sys_script_t)
-	corenet_sendrecv_mssql_client_packets(httpd_sys_script_t)
-	corenet_tcp_connect_mssql_port(httpd_suexec_t)
-	corenet_sendrecv_mssql_client_packets(httpd_suexec_t)
+tunable_policy(`httpd_can_sendmail',`
+	corenet_sendrecv_smtp_client_packets(httpd_php_t)
+	corenet_tcp_connect_smtp_port(httpd_php_t)
+	corenet_tcp_sendrecv_smtp_port(httpd_php_t)
+	corenet_sendrecv_pop_client_packets(httpd_php_t)
+	corenet_tcp_connect_pop_port(httpd_php_t)
+	corenet_tcp_sendrecv_pop_port(httpd_php_t)
+	mta_send_mail(httpd_php_t)
+	mta_signal_system_mail(httpd_php_t)
+')
+
+tunable_policy(`httpd_tmp_exec',`
+	can_exec(httpd_php_t, httpd_php_tmp_t)
+')
+
+tunable_policy(`httpd_use_cifs',`
+	fs_list_auto_mountpoints(httpd_php_t)
+	fs_manage_cifs_dirs(httpd_php_t)
+	fs_manage_cifs_files(httpd_php_t)
+	fs_manage_cifs_symlinks(httpd_php_t)
+	fs_exec_cifs_files(httpd_php_t)
+')
+
+tunable_policy(`httpd_use_nfs',`
+	fs_list_auto_mountpoints(httpd_php_t)
+	fs_manage_nfs_dirs(httpd_php_t)
+	fs_manage_nfs_files(httpd_php_t)
+	fs_manage_nfs_symlinks(httpd_php_t)
+	fs_exec_nfs_files(httpd_php_t)
+')
+
+tunable_policy(`httpd_use_fusefs',`
+	fs_list_auto_mountpoints(httpd_php_t)
+	fs_manage_fusefs_dirs(httpd_php_t)
+	fs_manage_fusefs_files(httpd_php_t)
+	# fs_manage_fusefs_symlinks(httpd_php_t)
+	fs_exec_fusefs_files(httpd_php_t)
 ')
 
 optional_policy(`
-	mysql_stream_connect(httpd_php_t)
 	mysql_read_config(httpd_php_t)
+	mysql_stream_connect(httpd_php_t)
+	mysql_rw_db_sockets(httpd_php_t)
+
+	tunable_policy(`httpd_can_network_connect_db',`
+		mysql_tcp_connect(httpd_php_t)
+	')
 ')
 
 optional_policy(`
 	postgresql_stream_connect(httpd_php_t)
+	postgresql_unpriv_client(httpd_php_t)
+
+	tunable_policy(`httpd_can_network_connect_db',`
+		postgresql_tcp_connect(httpd_php_t)
+	')
 ')
 
 ########################################
 #
-# Apache suexec local policy
+# Suexec local policy
 #
 
 allow httpd_suexec_t self:capability { setuid setgid };
 allow httpd_suexec_t self:process signal_perms;
-allow httpd_suexec_t self:unix_stream_socket create_stream_socket_perms;
-
-domtrans_pattern(httpd_t, httpd_suexec_exec_t, httpd_suexec_t)
+allow httpd_suexec_t self:fifo_file rw_fifo_file_perms;
+allow httpd_suexec_t self:tcp_socket { accept listen };
+allow httpd_suexec_t self:unix_stream_socket { accept listen };
 
 create_files_pattern(httpd_suexec_t, httpd_log_t, httpd_log_t)
 append_files_pattern(httpd_suexec_t, httpd_log_t, httpd_log_t)
 read_files_pattern(httpd_suexec_t, httpd_log_t, httpd_log_t)
+read_lnk_files_pattern(httpd_suexec_t, httpd_log_t, httpd_log_t)
 
 allow httpd_suexec_t httpd_t:fifo_file read_fifo_file_perms;
 
@@ -722,15 +1035,19 @@
 kernel_list_proc(httpd_suexec_t)
 kernel_read_proc_symlinks(httpd_suexec_t)
 
-dev_read_urand(httpd_suexec_t)
+corenet_all_recvfrom_unlabeled(httpd_suexec_t)
+corenet_all_recvfrom_netlabel(httpd_suexec_t)
+corenet_tcp_sendrecv_generic_if(httpd_suexec_t)
+corenet_tcp_sendrecv_generic_node(httpd_suexec_t)
 
-fs_search_auto_mountpoints(httpd_suexec_t)
-
-# for shell scripts
 corecmd_exec_bin(httpd_suexec_t)
 corecmd_exec_shell(httpd_suexec_t)
 
-files_read_etc_files(httpd_suexec_t)
+dev_read_urand(httpd_suexec_t)
+
+fs_read_iso9660_files(httpd_suexec_t)
+fs_search_auto_mountpoints(httpd_suexec_t)
+
 files_read_usr_files(httpd_suexec_t)
 files_dontaudit_search_pids(httpd_suexec_t)
 files_search_home(httpd_suexec_t)
@@ -744,56 +1061,128 @@
 miscfiles_read_public_files(httpd_suexec_t)
 
 tunable_policy(`httpd_can_network_connect',`
-	allow httpd_suexec_t self:tcp_socket create_stream_socket_perms;
-	allow httpd_suexec_t self:udp_socket create_socket_perms;
-
-	corenet_all_recvfrom_unlabeled(httpd_suexec_t)
-	corenet_all_recvfrom_netlabel(httpd_suexec_t)
-	corenet_tcp_sendrecv_generic_if(httpd_suexec_t)
-	corenet_udp_sendrecv_generic_if(httpd_suexec_t)
-	corenet_tcp_sendrecv_generic_node(httpd_suexec_t)
-	corenet_udp_sendrecv_generic_node(httpd_suexec_t)
-	corenet_tcp_sendrecv_all_ports(httpd_suexec_t)
-	corenet_udp_sendrecv_all_ports(httpd_suexec_t)
 	corenet_tcp_connect_all_ports(httpd_suexec_t)
 	corenet_sendrecv_all_client_packets(httpd_suexec_t)
+	corenet_tcp_sendrecv_all_ports(httpd_suexec_t)
+')
+
+tunable_policy(`httpd_can_network_connect_db',`
+	corenet_sendrecv_gds_db_client_packets(httpd_suexec_t)
+	corenet_tcp_connect_gds_db_port(httpd_suexec_t)
+	corenet_tcp_sendrecv_gds_db_port(httpd_suexec_t)
+	corenet_sendrecv_mssql_client_packets(httpd_suexec_t)
+	corenet_tcp_connect_mssql_port(httpd_suexec_t)
+	corenet_tcp_sendrecv_mssql_port(httpd_suexec_t)
+	corenet_sendrecv_oracledb_client_packets(httpd_suexec_t)
+	corenet_tcp_connect_oracledb_port(httpd_suexec_t)
+	corenet_tcp_sendrecv_oracledb_port(httpd_suexec_t)
+')
+
+tunable_policy(`httpd_can_sendmail',`
+	corenet_sendrecv_smtp_client_packets(httpd_suexec_t)
+	corenet_tcp_connect_smtp_port(httpd_suexec_t)
+	corenet_tcp_sendrecv_smtp_port(httpd_suexec_t)
+	corenet_sendrecv_pop_client_packets(httpd_suexec_t)
+	corenet_tcp_connect_pop_port(httpd_suexec_t)
+	corenet_tcp_sendrecv_pop_port(httpd_suexec_t)
+	mta_send_mail(httpd_suexec_t)
+	mta_signal_system_mail(httpd_suexec_t)
 ')
 
 tunable_policy(`httpd_enable_cgi && httpd_unified',`
-	allow httpd_sys_script_t httpdcontent:file entrypoint;
 	domtrans_pattern(httpd_suexec_t, httpdcontent, httpd_sys_script_t)
-
 ')
 
 tunable_policy(`httpd_enable_homedirs && use_nfs_home_dirs',`
+	fs_list_auto_mountpoints(httpd_suexec_t)
 	fs_read_nfs_files(httpd_suexec_t)
 	fs_read_nfs_symlinks(httpd_suexec_t)
 	fs_exec_nfs_files(httpd_suexec_t)
 ')
 
 tunable_policy(`httpd_enable_homedirs && use_samba_home_dirs',`
+	fs_list_auto_mountpoints(httpd_suexec_t)
 	fs_read_cifs_files(httpd_suexec_t)
 	fs_read_cifs_symlinks(httpd_suexec_t)
 	fs_exec_cifs_files(httpd_suexec_t)
 ')
 
+tunable_policy(`httpd_execmem',`
+	allow httpd_suexec_t self:process { execmem execstack };
+')
+
+tunable_policy(`httpd_tmp_exec',`
+	can_exec(httpd_suexec_t, httpd_suexec_tmp_t)
+')
+
+tunable_policy(`httpd_tty_comm',`
+	userdom_use_user_terminals(httpd_suexec_t)
+',`
+	userdom_dontaudit_use_user_terminals(httpd_suexec_t)
+')
+
+tunable_policy(`httpd_use_cifs',`
+	fs_list_auto_mountpoints(httpd_suexec_t)
+	fs_manage_cifs_dirs(httpd_suexec_t)
+	fs_manage_cifs_files(httpd_suexec_t)
+	fs_manage_cifs_symlinks(httpd_suexec_t)
+	fs_exec_cifs_files(httpd_suexec_t)
+')
+
+tunable_policy(`httpd_use_nfs',`
+	fs_list_auto_mountpoints(httpd_suexec_t)
+	fs_manage_nfs_dirs(httpd_suexec_t)
+	fs_manage_nfs_files(httpd_suexec_t)
+	fs_manage_nfs_symlinks(httpd_suexec_t)
+	fs_exec_nfs_files(httpd_suexec_t)
+')
+
+tunable_policy(`httpd_use_fusefs',`
+	fs_list_auto_mountpoints(httpd_suexec_t)
+	fs_manage_fusefs_dirs(httpd_suexec_t)
+	fs_manage_fusefs_files(httpd_suexec_t)
+	# fs_manage_fusefs_symlinks(httpd_suexec_t)
+	fs_exec_fusefs_files(httpd_suexec_t)
+')
+
 optional_policy(`
 	mailman_domtrans_cgi(httpd_suexec_t)
 ')
 
 optional_policy(`
-	mta_stub(httpd_suexec_t)
+	mysql_stream_connect(httpd_suexec_t)
+	mysql_rw_db_sockets(httpd_suexec_t)
+	mysql_read_config(httpd_suexec_t)
+
+	tunable_policy(`httpd_can_network_connect_db',`
+		mysql_tcp_connect(httpd_suexec_t)
+	')
+')
+
+optional_policy(`
+	postgresql_stream_connect(httpd_suexec_t)
+	postgresql_unpriv_client(httpd_suexec_t)
+
+	tunable_policy(`httpd_can_network_connect_db',`
+		postgresql_tcp_connect(httpd_suexec_t)
+	')
+')
+
+tunable_policy(`httpd_read_user_content',`
+	userdom_read_user_home_content_files(httpd_suexec_t)
+')
 
-	# apache should set close-on-exec
-	dontaudit httpd_suexec_t httpd_t:unix_stream_socket { read write };
+tunable_policy(`httpd_enable_homedirs',`
+	userdom_search_user_home_dirs(httpd_suexec_t)
 ')
 
 ########################################
 #
-# Apache system script local policy
+# System script local policy
 #
 
 allow httpd_sys_script_t self:process getsched;
+allow httpd_sys_script_t self:tcp_socket { accept listen };
 
 allow httpd_sys_script_t httpd_t:unix_stream_socket rw_stream_socket_perms;
 allow httpd_sys_script_t httpd_t:tcp_socket { read write };
@@ -808,77 +1197,130 @@
 
 kernel_read_kernel_sysctls(httpd_sys_script_t)
 
+corenet_all_recvfrom_unlabeled(httpd_sys_script_t)
+corenet_all_recvfrom_netlabel(httpd_sys_script_t)
+corenet_tcp_sendrecv_generic_if(httpd_sys_script_t)
+corenet_tcp_sendrecv_generic_node(httpd_sys_script_t)
+
+fs_search_auto_mountpoints(httpd_sys_script_t)
+
+files_read_var_symlinks(httpd_sys_script_t)
 files_search_var_lib(httpd_sys_script_t)
 files_search_spool(httpd_sys_script_t)
 
-# Should we add a boolean?
 apache_domtrans_rotatelogs(httpd_sys_script_t)
 
-ifdef(`distro_redhat',`
-	allow httpd_sys_script_t httpd_log_t:file append_file_perms;
-')
+auth_use_nsswitch(httpd_sys_script_t)
 
 tunable_policy(`httpd_can_sendmail',`
+	corenet_sendrecv_smtp_client_packets(httpd_sys_script_t)
+	corenet_tcp_connect_smtp_port(httpd_sys_script_t)
+	corenet_tcp_sendrecv_smtp_port(httpd_sys_script_t)
+	corenet_sendrecv_pop_client_packets(httpd_sys_script_t)
+	corenet_tcp_connect_pop_port(httpd_sys_script_t)
+	corenet_tcp_sendrecv_pop_port(httpd_sys_script_t)
 	mta_send_mail(httpd_sys_script_t)
+	mta_signal_system_mail(httpd_sys_script_t)
 ')
 
-tunable_policy(`httpd_enable_cgi && httpd_can_network_connect',`
-	allow httpd_sys_script_t self:tcp_socket create_stream_socket_perms;
-	allow httpd_sys_script_t self:udp_socket create_socket_perms;
+tunable_policy(`httpd_enable_homedirs',`
+	userdom_search_user_home_dirs(httpd_sys_script_t)
+')
 
-	corenet_tcp_bind_all_nodes(httpd_sys_script_t)
-	corenet_udp_bind_all_nodes(httpd_sys_script_t)
-	corenet_all_recvfrom_unlabeled(httpd_sys_script_t)
-	corenet_all_recvfrom_netlabel(httpd_sys_script_t)
-	corenet_tcp_sendrecv_all_if(httpd_sys_script_t)
-	corenet_udp_sendrecv_all_if(httpd_sys_script_t)
-	corenet_tcp_sendrecv_all_nodes(httpd_sys_script_t)
-	corenet_udp_sendrecv_all_nodes(httpd_sys_script_t)
-	corenet_tcp_sendrecv_all_ports(httpd_sys_script_t)
-	corenet_udp_sendrecv_all_ports(httpd_sys_script_t)
+tunable_policy(`httpd_enable_cgi && httpd_can_network_connect',`
 	corenet_tcp_connect_all_ports(httpd_sys_script_t)
 	corenet_sendrecv_all_client_packets(httpd_sys_script_t)
+	corenet_tcp_sendrecv_all_ports(httpd_sys_script_t)
 ')
 
-tunable_policy(`httpd_enable_homedirs',`
-	userdom_read_user_home_content_files(httpd_sys_script_t)
+tunable_policy(`httpd_enable_cgi && httpd_can_network_connect_db',`
+	corenet_sendrecv_gds_db_client_packets(httpd_sys_script_t)
+	corenet_tcp_connect_gds_db_port(httpd_sys_script_t)
+	corenet_tcp_sendrecv_gds_db_port(httpd_sys_script_t)
+	corenet_sendrecv_mssql_client_packets(httpd_sys_script_t)
+	corenet_tcp_connect_mssql_port(httpd_sys_script_t)
+	corenet_tcp_sendrecv_mssql_port(httpd_sys_script_t)
+	corenet_sendrecv_oracledb_client_packets(httpd_sys_script_t)
+	corenet_tcp_connect_oracledb_port(httpd_sys_script_t)
+	corenet_tcp_sendrecv_oracledb_port(httpd_sys_script_t)
+')
+
+tunable_policy(`httpd_enable_cgi && httpd_unified',`
+	allow httpd_sys_script_t httpdcontent:file entrypoint;
+	manage_dirs_pattern(httpd_sys_script_t, httpdcontent, httpdcontent)
+	manage_files_pattern(httpd_sys_script_t, httpdcontent, httpdcontent)
+	manage_sock_files_pattern(httpd_sys_script_t, httpdcontent, httpdcontent)
+	manage_lnk_files_pattern(httpd_sys_script_t, httpdcontent, httpdcontent)
 ')
 
 tunable_policy(`httpd_enable_homedirs && use_nfs_home_dirs',`
+	fs_list_auto_mountpoints(httpd_sys_script_t)
 	fs_read_nfs_files(httpd_sys_script_t)
 	fs_read_nfs_symlinks(httpd_sys_script_t)
+	fs_exec_nfs_files(httpd_sys_script_t)
 ')
 
 tunable_policy(`httpd_enable_homedirs && use_samba_home_dirs',`
+	fs_list_auto_mountpoints(httpd_sys_script_t)
 	fs_read_cifs_files(httpd_sys_script_t)
 	fs_read_cifs_symlinks(httpd_sys_script_t)
+	fs_exec_cifs_files(httpd_sys_script_t)
 ')
 
-optional_policy(`
-	clamav_domtrans_clamscan(httpd_sys_script_t)
+tunable_policy(`httpd_execmem',`
+	allow httpd_sys_script_t self:process { execmem execstack };
 ')
 
-optional_policy(`
-	mysql_stream_connect(httpd_sys_script_t)
-	mysql_rw_db_sockets(httpd_sys_script_t)
+tunable_policy(`httpd_read_user_content',`
+	userdom_read_user_home_content_files(httpd_sys_script_t)
+')
+
+tunable_policy(`httpd_ssi_exec',`
+	allow httpd_sys_script_t httpd_t:fd use;
+	allow httpd_sys_script_t httpd_t:fifo_file rw_file_perms;
+	allow httpd_sys_script_t httpd_t:process sigchld;
+')
+
+tunable_policy(`httpd_use_cifs',`
+	fs_list_auto_mountpoints(httpd_sys_script_t)
+	fs_manage_cifs_dirs(httpd_sys_script_t)
+	fs_manage_cifs_files(httpd_sys_script_t)
+	fs_manage_cifs_symlinks(httpd_sys_script_t)
+	fs_exec_cifs_files(httpd_sys_script_t)
+')
+
+tunable_policy(`httpd_use_nfs',`
+	fs_list_auto_mountpoints(httpd_sys_script_t)
+	fs_manage_nfs_dirs(httpd_sys_script_t)
+	fs_manage_nfs_files(httpd_sys_script_t)
+	fs_manage_nfs_symlinks(httpd_sys_script_t)
+	fs_exec_nfs_files(httpd_sys_script_t)
+')
+
+tunable_policy(`httpd_use_fusefs',`
+	fs_list_auto_mountpoints(httpd_sys_script_t)
+	fs_manage_fusefs_dirs(httpd_sys_script_t)
+	fs_manage_fusefs_files(httpd_sys_script_t)
+	# fs_manage_fusefs_symlinks(httpd_sys_script_t)
+	fs_exec_fusefs_files(httpd_sys_script_t)
 ')
 
 optional_policy(`
-	postgresql_stream_connect(httpd_sys_script_t)
+	clamav_domtrans_clamscan(httpd_sys_script_t)
 ')
 
 ########################################
 #
-# httpd_rotatelogs local policy
+# Rotatelogs local policy
 #
 
 allow httpd_rotatelogs_t self:capability dac_override;
 
 manage_files_pattern(httpd_rotatelogs_t, httpd_log_t, httpd_log_t)
+read_lnk_files_pattern(httpd_rotatelogs_t, httpd_log_t, httpd_log_t)
 
 kernel_read_kernel_sysctls(httpd_rotatelogs_t)
 kernel_dontaudit_list_proc(httpd_rotatelogs_t)
-kernel_dontaudit_read_proc_symlinks(httpd_rotatelogs_t)
 
 files_read_etc_files(httpd_rotatelogs_t)
 
@@ -892,15 +1334,7 @@
 #
 
 optional_policy(`
-	type httpd_unconfined_script_t;
-	type httpd_unconfined_script_exec_t;
-	domain_type(httpd_unconfined_script_t)
-	domain_entry_file(httpd_unconfined_script_t, httpd_unconfined_script_exec_t)
-	domtrans_pattern(httpd_t, httpd_unconfined_script_exec_t, httpd_unconfined_script_t)
 	unconfined_domain(httpd_unconfined_script_t)
-
-	role system_r types httpd_unconfined_script_t;
-	allow httpd_t httpd_unconfined_script_t:process signal_perms;
 ')
 
 ########################################
@@ -910,11 +1344,41 @@
 
 tunable_policy(`httpd_enable_cgi && httpd_unified',`
 	allow httpd_user_script_t httpdcontent:file entrypoint;
+	manage_dirs_pattern(httpd_user_script_t, httpd_user_content_t, httpd_user_content_t)
+	manage_files_pattern(httpd_user_script_t, httpd_user_content_t, httpd_user_content_t)
+	manage_dirs_pattern(httpd_user_script_t, httpd_user_ra_content_t, httpd_user_ra_content_t)
+	manage_files_pattern(httpd_user_script_t, httpd_user_ra_content_t, httpd_user_ra_content_t)
 ')
 
-# allow accessing files/dirs below the users home dir
 tunable_policy(`httpd_enable_homedirs',`
-	userdom_search_user_home_dirs(httpd_t)
-	userdom_search_user_home_dirs(httpd_suexec_t)
 	userdom_search_user_home_dirs(httpd_user_script_t)
 ')
+
+tunable_policy(`httpd_read_user_content',`
+	userdom_read_user_home_content_files(httpd_user_script_t)
+')
+
+########################################
+#
+# Passwd local policy
+#
+
+allow httpd_passwd_t self:fifo_file manage_fifo_file_perms;
+allow httpd_passwd_t self:unix_stream_socket create_stream_socket_perms;
+allow httpd_passwd_t self:unix_dgram_socket create_socket_perms;
+
+dontaudit httpd_passwd_t httpd_config_t:file read_file_perms;
+
+kernel_read_system_state(httpd_passwd_t)
+
+corecmd_exec_bin(httpd_passwd_t)
+corecmd_exec_shell(httpd_passwd_t)
+
+dev_read_urand(httpd_passwd_t)
+
+domain_use_interactive_fds(httpd_passwd_t)
+
+auth_use_nsswitch(httpd_passwd_t)
+
+miscfiles_read_generic_certs(httpd_passwd_t)
+miscfiles_read_localization(httpd_passwd_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/apcupsd.fc refpolicy/policy/modules/contrib/apcupsd.fc
--- refpolicy/policy/modules/contrib/apcupsd.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/apcupsd.fc	2012-09-27 20:03:30.727126498 +0200
@@ -1,15 +1,18 @@
 /etc/rc\.d/init\.d/apcupsd	--	gen_context(system_u:object_r:apcupsd_initrc_exec_t,s0)
 
-/sbin/apcupsd			--	gen_context(system_u:object_r:apcupsd_exec_t,s0)
+/sbin/apcupsd	--	gen_context(system_u:object_r:apcupsd_exec_t,s0)
 
-/usr/sbin/apcupsd		--	gen_context(system_u:object_r:apcupsd_exec_t,s0)
+/usr/sbin/apcupsd	--	gen_context(system_u:object_r:apcupsd_exec_t,s0)
+
+/var/lock/subsys/apcupsd	--	gen_context(system_u:object_r:apcupsd_lock_t,s0)
 
 /var/log/apcupsd\.events.*	--	gen_context(system_u:object_r:apcupsd_log_t,s0)
 /var/log/apcupsd\.status.*	--	gen_context(system_u:object_r:apcupsd_log_t,s0)
 
-/var/run/apcupsd\.pid		--	gen_context(system_u:object_r:apcupsd_var_run_t,s0)
+/var/run/apcupsd\.pid	--	gen_context(system_u:object_r:apcupsd_var_run_t,s0)
 
 /var/www/apcupsd/multimon\.cgi	--	gen_context(system_u:object_r:httpd_apcupsd_cgi_script_exec_t,s0)
 /var/www/apcupsd/upsfstats\.cgi	--	gen_context(system_u:object_r:httpd_apcupsd_cgi_script_exec_t,s0)
 /var/www/apcupsd/upsimage\.cgi	--	gen_context(system_u:object_r:httpd_apcupsd_cgi_script_exec_t,s0)
 /var/www/apcupsd/upsstats\.cgi	--	gen_context(system_u:object_r:httpd_apcupsd_cgi_script_exec_t,s0)
+/var/www/cgi-bin/apcgui(/.*)?	gen_context(system_u:object_r:httpd_apcupsd_cgi_script_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/apcupsd.if refpolicy/policy/modules/contrib/apcupsd.if
--- refpolicy/policy/modules/contrib/apcupsd.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/apcupsd.if	2012-09-27 20:03:30.727126498 +0200
@@ -1,8 +1,9 @@
-## <summary>APC UPS monitoring daemon</summary>
+## <summary>APC UPS monitoring daemon.</summary>
 
 ########################################
 ## <summary>
-##	Execute a domain transition to run apcupsd.
+##	Execute a domain transition to
+##	run apcupsd.
 ## </summary>
 ## <param name="domain">
 ## <summary>
@@ -21,7 +22,8 @@
 
 ########################################
 ## <summary>
-##	Execute apcupsd server in the apcupsd domain.
+##	Execute apcupsd server in the
+##	apcupsd domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -58,7 +60,7 @@
 
 ########################################
 ## <summary>
-##	Allow the specified domain to read apcupsd's log files.
+##	Read apcupsd log files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -79,8 +81,7 @@
 
 ########################################
 ## <summary>
-##	Allow the specified domain to append
-##	apcupsd log files.
+##	Append apcupsd log files.
 ## </summary>
 ## <param name="domain">
 ## 	<summary>
@@ -100,7 +101,8 @@
 
 ########################################
 ## <summary>
-##	Execute a domain transition to run httpd_apcupsd_cgi_script.
+##	Execute a domain transition to
+##	run httpd_apcupsd_cgi_script.
 ## </summary>
 ## <param name="domain">
 ## <summary>
@@ -113,18 +115,18 @@
 		type httpd_apcupsd_cgi_script_t, httpd_apcupsd_cgi_script_exec_t;
 	')
 
+	files_search_var($1)
+	domtrans_pattern($1, httpd_apcupsd_cgi_script_exec_t, httpd_apcupsd_cgi_script_t)
+
 	optional_policy(`
 		apache_search_sys_content($1)
 	')
-
-	files_search_var($1)
-	domtrans_pattern($1, httpd_apcupsd_cgi_script_exec_t, httpd_apcupsd_cgi_script_t)
 ')
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate 
-##	an apcupsd environment
+##	All of the rules required to
+##	administrate an apcupsd environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -133,17 +135,15 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the apcupsd domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
 #
 interface(`apcupsd_admin',`
 	gen_require(`
-		type apcupsd_t, apcupsd_tmp_t;
-		type apcupsd_log_t, apcupsd_lock_t;
-		type apcupsd_var_run_t;
-		type apcupsd_initrc_exec_t;
+		type apcupsd_t, apcupsd_tmp_t, apcupsd_log_t;
+		type apcupsd_var_run_t, apcupsd_initrc_exec_t, apcupsd_lock_t;
 	')
 
 	allow $1 apcupsd_t:process { ptrace signal_perms };
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/apcupsd.te refpolicy/policy/modules/contrib/apcupsd.te
--- refpolicy/policy/modules/contrib/apcupsd.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/apcupsd.te	2012-09-27 20:03:30.727126498 +0200
@@ -1,4 +1,4 @@
-policy_module(apcupsd, 1.8.0)
+policy_module(apcupsd, 1.8.2)
 
 ########################################
 #
@@ -26,7 +26,7 @@
 
 ########################################
 #
-# apcupsd local policy
+# Local policy
 #
 
 allow apcupsd_t self:capability { dac_override setgid sys_tty_config };
@@ -38,9 +38,10 @@
 allow apcupsd_t apcupsd_lock_t:file manage_file_perms;
 files_lock_filetrans(apcupsd_t, apcupsd_lock_t, file)
 
-allow apcupsd_t apcupsd_log_t:dir setattr;
-manage_files_pattern(apcupsd_t, apcupsd_log_t, apcupsd_log_t)
-logging_log_filetrans(apcupsd_t, apcupsd_log_t, { file dir })
+append_files_pattern(apcupsd_t, apcupsd_log_t, apcupsd_log_t)
+create_files_pattern(apcupsd_t, apcupsd_log_t, apcupsd_log_t)
+setattr_files_pattern(apcupsd_t, apcupsd_log_t, apcupsd_log_t)
+logging_log_filetrans(apcupsd_t, apcupsd_log_t, file)
 
 manage_files_pattern(apcupsd_t, apcupsd_tmp_t, apcupsd_tmp_t)
 files_tmp_filetrans(apcupsd_t, apcupsd_tmp_t, file)
@@ -59,25 +60,19 @@
 corenet_tcp_sendrecv_generic_node(apcupsd_t)
 corenet_tcp_sendrecv_all_ports(apcupsd_t)
 corenet_tcp_bind_generic_node(apcupsd_t)
+
 corenet_tcp_bind_apcupsd_port(apcupsd_t)
 corenet_sendrecv_apcupsd_server_packets(apcupsd_t)
 corenet_tcp_connect_apcupsd_port(apcupsd_t)
 
 dev_rw_generic_usb_dev(apcupsd_t)
 
-# Init script handling
-domain_use_interactive_fds(apcupsd_t)
-
 files_read_etc_files(apcupsd_t)
-files_search_locks(apcupsd_t)
-# Creates /etc/nologin
 files_manage_etc_runtime_files(apcupsd_t)
-files_etc_filetrans_etc_runtime(apcupsd_t, file)
+files_etc_filetrans_etc_runtime(apcupsd_t, file, "nologin")
 
-# https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=240805
 term_use_unallocated_ttys(apcupsd_t)
 
-#apcupsd runs shutdown, probably need a shutdown domain
 init_rw_utmp(apcupsd_t)
 init_telinit(apcupsd_t)
 
@@ -104,7 +99,7 @@
 
 ########################################
 #
-# apcupsd_cgi Declarations
+# CGI local policy
 #
 
 optional_policy(`
@@ -118,6 +113,7 @@
 	corenet_tcp_sendrecv_generic_if(httpd_apcupsd_cgi_script_t)
 	corenet_tcp_sendrecv_generic_node(httpd_apcupsd_cgi_script_t)
 	corenet_tcp_sendrecv_all_ports(httpd_apcupsd_cgi_script_t)
+	corenet_sendrecv_apcupsd_client_packets(httpd_apcupsd_cgi_script_t)
 	corenet_tcp_connect_apcupsd_port(httpd_apcupsd_cgi_script_t)
 	corenet_udp_sendrecv_generic_if(httpd_apcupsd_cgi_script_t)
 	corenet_udp_sendrecv_generic_node(httpd_apcupsd_cgi_script_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/apm.fc refpolicy/policy/modules/contrib/apm.fc
--- refpolicy/policy/modules/contrib/apm.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/apm.fc	2012-09-27 20:03:30.727126498 +0200
@@ -1,23 +1,18 @@
+/etc/rc\.d/init\.d/acpid	--	gen_context(system_u:object_r:apmd_initrc_exec_t,s0)
 
-#
-# /usr
-#
-/usr/bin/apm		--	gen_context(system_u:object_r:apm_exec_t,s0)
+/usr/bin/apm	--	gen_context(system_u:object_r:apm_exec_t,s0)
 
-/usr/sbin/acpid		--	gen_context(system_u:object_r:apmd_exec_t,s0)
-/usr/sbin/apmd		--	gen_context(system_u:object_r:apmd_exec_t,s0)
+/usr/sbin/acpid	--	gen_context(system_u:object_r:apmd_exec_t,s0)
+/usr/sbin/apmd	--	gen_context(system_u:object_r:apmd_exec_t,s0)
 /usr/sbin/powersaved	--	gen_context(system_u:object_r:apmd_exec_t,s0)
 
-#
-# /var
-#
+/var/lock/subsys/acpid	--	gen_context(system_u:object_r:apmd_lock_t,s0)
+
 /var/log/acpid.*	--	gen_context(system_u:object_r:apmd_log_t,s0)
 
-/var/run/\.?acpid\.socket -s	gen_context(system_u:object_r:apmd_var_run_t,s0)
+/var/run/\.?acpid\.socket	-s	gen_context(system_u:object_r:apmd_var_run_t,s0)
 /var/run/apmd\.pid	--	gen_context(system_u:object_r:apmd_var_run_t,s0)
-/var/run/powersaved\.pid --	gen_context(system_u:object_r:apmd_var_run_t,s0)
-/var/run/powersave_socket -s	gen_context(system_u:object_r:apmd_var_run_t,s0)
+/var/run/powersaved\.pid	--	gen_context(system_u:object_r:apmd_var_run_t,s0)
+/var/run/powersave_socket	-s	gen_context(system_u:object_r:apmd_var_run_t,s0)
 
-ifdef(`distro_suse',`
-/var/lib/acpi(/.*)?		gen_context(system_u:object_r:apmd_var_lib_t,s0)
-')
+/var/lib/acpi(/.*)?	gen_context(system_u:object_r:apmd_var_lib_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/apm.if refpolicy/policy/modules/contrib/apm.if
--- refpolicy/policy/modules/contrib/apm.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/apm.if	2012-09-27 20:03:30.727126498 +0200
@@ -1,8 +1,8 @@
-## <summary>Advanced power management daemon</summary>
+## <summary>Advanced power management.</summary>
 
 ########################################
 ## <summary>
-##	Execute APM in the apm domain.
+##	Execute apm in the apm domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -21,7 +21,33 @@
 
 ########################################
 ## <summary>
-##	Use file descriptors for apmd.
+##	Execute apm in the apm domain
+##	and allow the specified role
+##	the apm domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+#
+interface(`apm_run_client',`
+	gen_require(`
+		attribute_role apm_roles;
+	')
+
+	apm_domtrans_client($1)
+	roleattribute $2 apm_roles;
+')
+
+########################################
+## <summary>
+##	Use apmd file descriptors.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -39,7 +65,7 @@
 
 ########################################
 ## <summary>
-##	Write to apmd unnamed pipes.
+##	Write apmd unnamed pipes.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -57,7 +83,8 @@
 
 ########################################
 ## <summary>
-##	Read and write to an apm unix stream socket.
+##	Read and write to apmd unix
+##	stream sockets.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -75,7 +102,7 @@
 
 ########################################
 ## <summary>
-##	Append to apm's log file.
+##	Append apmd log files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -89,12 +116,13 @@
 	')
 
 	logging_search_logs($1)
-	allow $1 apmd_log_t:file append;
+	allow $1 apmd_log_t:file append_file_perms;
 ')
 
 ########################################
 ## <summary>
-##	Connect to apmd over an unix stream socket.
+##	Connect to apmd over an unix
+##	stream socket.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -108,6 +136,55 @@
 	')
 
 	files_search_pids($1)
-	allow $1 apmd_var_run_t:sock_file write;
-	allow $1 apmd_t:unix_stream_socket connectto;
+	stream_connect_pattern($1, apmd_var_run_t, apmd_var_run_t, apmd_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an apm environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`apm_admin',`
+	gen_require(`
+		type apmd_t, apmd_initrc_exec_t, apmd_log_t;
+		type apmd_lock_t, apmd_var_run_t, apmd_var_lib_t;
+		type apmd_tmp_t;
+	')
+
+	allow $1 apmd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, apmd_t)
+
+	init_labeled_script_domtrans($1, apmd_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 apmd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, apmd_log_t)
+
+	files_search_locks($1)
+	admin_pattern($1, apmd_lock_t)
+
+	files_search_pids($1)
+	admin_pattern($1, apmd_var_run_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, apmd_var_lib_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, apmd_tmp_t)
+
+	apm_run_client($1, $2)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/apm.te refpolicy/policy/modules/contrib/apm.te
--- refpolicy/policy/modules/contrib/apm.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/apm.te	2012-09-27 20:03:30.728126498 +0200
@@ -1,17 +1,27 @@
-policy_module(apm, 1.11.0)
+policy_module(apm, 1.11.2)
 
 ########################################
 #
 # Declarations
 #
+
+attribute_role apm_roles;
+roleattribute system_r apm_roles;
+
 type apmd_t;
 type apmd_exec_t;
 init_daemon_domain(apmd_t, apmd_exec_t)
 
+type apmd_initrc_exec_t;
+init_script_file(apmd_initrc_exec_t)
+
 type apm_t;
 type apm_exec_t;
 application_domain(apm_t, apm_exec_t)
-role system_r types apm_t;
+role apm_roles types apm_t;
+
+type apmd_lock_t;
+files_lock_file(apmd_lock_t)
 
 type apmd_log_t;
 logging_log_file(apmd_log_t)
@@ -19,22 +29,15 @@
 type apmd_tmp_t;
 files_tmp_file(apmd_tmp_t)
 
+type apmd_var_lib_t;
+files_type(apmd_var_lib_t)
+
 type apmd_var_run_t;
 files_pid_file(apmd_var_run_t)
 
-ifdef(`distro_redhat',`
-	type apmd_lock_t;
-	files_lock_file(apmd_lock_t)
-')
-
-ifdef(`distro_suse',`
-	type apmd_var_lib_t;
-	files_type(apmd_var_lib_t)
-')
-
 ########################################
 #
-# apm client Local policy
+# Client local policy
 #
 
 allow apm_t self:capability { dac_override sys_admin };
@@ -53,17 +56,18 @@
 
 ########################################
 #
-# apm daemon Local policy
+# Server local policy
 #
 
-# mknod: controlling an orderly resume of PCMCIA requires creating device
-# nodes 254,{0,1,2} for some reason.
 allow apmd_t self:capability { sys_admin sys_nice sys_time kill mknod };
 dontaudit apmd_t self:capability { setuid dac_override dac_read_search sys_ptrace sys_tty_config };
 allow apmd_t self:process { signal_perms getsession };
 allow apmd_t self:fifo_file rw_fifo_file_perms;
-allow apmd_t self:unix_dgram_socket create_socket_perms;
-allow apmd_t self:unix_stream_socket create_stream_socket_perms;
+allow apmd_t self:netlink_socket create_socket_perms;
+allow apmd_t self:unix_stream_socket { accept listen };
+
+allow apmd_t apmd_lock_t:file manage_file_perms;
+files_lock_filetrans(apmd_t, apmd_lock_t, file)
 
 allow apmd_t apmd_log_t:file manage_file_perms;
 logging_log_filetrans(apmd_t, apmd_log_t, file)
@@ -72,29 +76,44 @@
 manage_files_pattern(apmd_t, apmd_tmp_t, apmd_tmp_t)
 files_tmp_filetrans(apmd_t, apmd_tmp_t, { file dir })
 
+manage_dirs_pattern(apmd_t, apmd_var_lib_t, apmd_var_lib_t)
+manage_files_pattern(apmd_t, apmd_var_lib_t, apmd_var_lib_t)
+files_var_lib_filetrans(apmd_t, apmd_var_lib_t, dir)
+
 manage_files_pattern(apmd_t, apmd_var_run_t, apmd_var_run_t)
 manage_sock_files_pattern(apmd_t, apmd_var_run_t, apmd_var_run_t)
 files_pid_filetrans(apmd_t, apmd_var_run_t, { file sock_file })
 
+can_exec(apmd_t, apmd_var_run_t)
+
 kernel_read_kernel_sysctls(apmd_t)
 kernel_rw_all_sysctls(apmd_t)
 kernel_read_system_state(apmd_t)
 kernel_write_proc_files(apmd_t)
 
+dev_read_input(apmd_t)
+dev_read_mouse(apmd_t)
 dev_read_realtime_clock(apmd_t)
 dev_read_urand(apmd_t)
 dev_rw_apm_bios(apmd_t)
 dev_rw_sysfs(apmd_t)
-dev_dontaudit_getattr_all_chr_files(apmd_t) # Excessive?
-dev_dontaudit_getattr_all_blk_files(apmd_t) # Excessive?
+dev_dontaudit_getattr_all_chr_files(apmd_t)
+dev_dontaudit_getattr_all_blk_files(apmd_t)
+
+files_exec_etc_files(apmd_t)
+files_read_etc_runtime_files(apmd_t)
+files_dontaudit_getattr_all_files(apmd_t)
+files_dontaudit_getattr_all_symlinks(apmd_t)
+files_dontaudit_getattr_all_pipes(apmd_t)
+files_dontaudit_getattr_all_sockets(apmd_t)
 
 fs_dontaudit_list_tmpfs(apmd_t)
 fs_getattr_all_fs(apmd_t)
 fs_search_auto_mountpoints(apmd_t)
-fs_dontaudit_getattr_all_files(apmd_t) # Excessive?
-fs_dontaudit_getattr_all_symlinks(apmd_t) # Excessive?
-fs_dontaudit_getattr_all_pipes(apmd_t) # Excessive?
-fs_dontaudit_getattr_all_sockets(apmd_t) # Excessive?
+fs_dontaudit_getattr_all_files(apmd_t)
+fs_dontaudit_getattr_all_symlinks(apmd_t)
+fs_dontaudit_getattr_all_pipes(apmd_t)
+fs_dontaudit_getattr_all_sockets(apmd_t)
 
 selinux_search_fs(apmd_t)
 
@@ -104,15 +123,10 @@
 domain_dontaudit_ptrace_all_domains(apmd_t)
 domain_use_interactive_fds(apmd_t)
 domain_dontaudit_getattr_all_sockets(apmd_t)
-domain_dontaudit_getattr_all_key_sockets(apmd_t) # Excessive?
-domain_dontaudit_list_all_domains_state(apmd_t) # Excessive?
+domain_dontaudit_getattr_all_key_sockets(apmd_t)
+domain_dontaudit_list_all_domains_state(apmd_t)
 
-files_exec_etc_files(apmd_t)
-files_read_etc_runtime_files(apmd_t)
-files_dontaudit_getattr_all_files(apmd_t) # Excessive?
-files_dontaudit_getattr_all_symlinks(apmd_t) # Excessive?
-files_dontaudit_getattr_all_pipes(apmd_t) # Excessive?
-files_dontaudit_getattr_all_sockets(apmd_t) # Excessive?
+auth_use_nsswitch(apmd_t)
 
 init_domtrans_script(apmd_t)
 init_rw_utmp(apmd_t)
@@ -121,8 +135,8 @@
 libs_exec_ld_so(apmd_t)
 libs_exec_lib_files(apmd_t)
 
-logging_send_syslog_msg(apmd_t)
 logging_send_audit_msgs(apmd_t)
+logging_send_syslog_msg(apmd_t)
 
 miscfiles_read_localization(apmd_t)
 miscfiles_read_hwdata(apmd_t)
@@ -134,37 +148,7 @@
 
 userdom_dontaudit_use_unpriv_user_fds(apmd_t)
 userdom_dontaudit_search_user_home_dirs(apmd_t)
-userdom_dontaudit_search_user_home_content(apmd_t) # Excessive?
-
-ifdef(`distro_redhat',`
-	allow apmd_t apmd_lock_t:file manage_file_perms;
-	files_lock_filetrans(apmd_t, apmd_lock_t, file)
-
-	can_exec(apmd_t, apmd_var_run_t)
-
-	# ifconfig_exec_t needs to be run in its own domain for Red Hat
-	optional_policy(`
-		sysnet_domtrans_ifconfig(apmd_t)
-	')
-
-	optional_policy(`
-		iptables_domtrans(apmd_t)
-	')
-
-	optional_policy(`
-		netutils_domtrans(apmd_t)
-	')
-
-',`
-	# for ifconfig which is run all the time
-	kernel_dontaudit_search_sysctl(apmd_t)
-')
-
-ifdef(`distro_suse',`
-	manage_dirs_pattern(apmd_t, apmd_var_lib_t, apmd_var_lib_t)
-	manage_files_pattern(apmd_t, apmd_var_lib_t, apmd_var_lib_t)
-	files_var_lib_filetrans(apmd_t, apmd_var_lib_t, file)
-')
+userdom_dontaudit_search_user_home_content(apmd_t)
 
 optional_policy(`
 	automount_domtrans(apmd_t)
@@ -181,6 +165,12 @@
 ')
 
 optional_policy(`
+	devicekit_manage_pid_files(apmd_t)
+	devicekit_manage_log_files(apmd_t)
+	devicekit_relabel_log_files(apmd_t)
+')
+
+optional_policy(`
 	dbus_system_bus_client(apmd_t)
 
 	optional_policy(`
@@ -193,6 +183,14 @@
 ')
 
 optional_policy(`
+	fstools_domtrans(apmd_t)
+')
+
+optional_policy(`
+	iptables_domtrans(apmd_t)
+')
+
+optional_policy(`
 	logrotate_use_fds(apmd_t)
 ')
 
@@ -201,7 +199,7 @@
 ')
 
 optional_policy(`
-	nscd_socket_use(apmd_t)
+	netutils_domtrans(apmd_t)
 ')
 
 optional_policy(`
@@ -214,19 +212,22 @@
 ')
 
 optional_policy(`
-	udev_read_db(apmd_t)
-	udev_read_state(apmd_t) #necessary?
+	shutdown_domtrans(apmd_t)
+')
+
+optional_policy(`
+	sysnet_domtrans_ifconfig(apmd_t)
 ')
 
 optional_policy(`
-	unconfined_domain(apmd_t)
+	udev_read_db(apmd_t)
+	udev_read_state(apmd_t)
 ')
 
 optional_policy(`
 	vbetool_domtrans(apmd_t)
 ')
 
-# cjp: related to sleep/resume (?)
 optional_policy(`
 	xserver_domtrans(apmd_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/apt.fc refpolicy/policy/modules/contrib/apt.fc
--- refpolicy/policy/modules/contrib/apt.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/apt.fc	2012-09-27 20:03:30.728126498 +0200
@@ -1,21 +1,16 @@
-/usr/bin/apt-get		--	gen_context(system_u:object_r:apt_exec_t,s0)
-# apt-shell is redhat specific
-/usr/bin/apt-shell		--	gen_context(system_u:object_r:apt_exec_t,s0)
-# other package managers
-/usr/bin/aptitude		--	gen_context(system_u:object_r:apt_exec_t,s0)
-/usr/sbin/synaptic		--	gen_context(system_u:object_r:apt_exec_t,s0)
-
-# package cache repository
-/var/cache/apt(/.*)?			gen_context(system_u:object_r:apt_var_cache_t,s0)
-
-# package list repository
-/var/lib/apt(/.*)?			gen_context(system_u:object_r:apt_var_lib_t,s0)
-/var/lib/aptitude(/.*)?			gen_context(system_u:object_r:apt_var_lib_t,s0)
-
-# aptitude lock
-/var/lock/aptitude			gen_context(system_u:object_r:apt_lock_t,s0)
-# aptitude log
-/var/log/aptitude.*			gen_context(system_u:object_r:apt_var_log_t,s0)
+/usr/bin/apt-get	--	gen_context(system_u:object_r:apt_exec_t,s0)
+/usr/bin/apt-shell	--	gen_context(system_u:object_r:apt_exec_t,s0)
+/usr/bin/aptitude	--	gen_context(system_u:object_r:apt_exec_t,s0)
 
-# dpkg terminal log
-/var/log/apt(/.*)?			gen_context(system_u:object_r:apt_var_log_t,s0)
+/usr/sbin/synaptic	--	gen_context(system_u:object_r:apt_exec_t,s0)
+
+/var/cache/apt(/.*)?	gen_context(system_u:object_r:apt_var_cache_t,s0)
+
+/var/lib/apt(/.*)?	gen_context(system_u:object_r:apt_var_lib_t,s0)
+/var/lib/aptitude(/.*)?	gen_context(system_u:object_r:apt_var_lib_t,s0)
+
+/var/lock/aptitude	gen_context(system_u:object_r:apt_lock_t,s0)
+
+/var/log/aptitude.*	gen_context(system_u:object_r:apt_var_log_t,s0)
+
+/var/log/apt(/.*)?	gen_context(system_u:object_r:apt_var_log_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/apt.if refpolicy/policy/modules/contrib/apt.if
--- refpolicy/policy/modules/contrib/apt.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/apt.if	2012-09-27 20:03:30.728126498 +0200
@@ -1,4 +1,4 @@
-## <summary>APT advanced package tool.</summary>
+## <summary>Advanced package tool.</summary>
 
 ########################################
 ## <summary>
@@ -15,7 +15,6 @@
 		type apt_t, apt_exec_t;
 	')
 
-	files_search_usr($1)
 	corecmd_search_bin($1)
 	domtrans_pattern($1, apt_exec_t, apt_t)
 ')
@@ -31,24 +30,23 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to allow the apt domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
 #
 interface(`apt_run',`
 	gen_require(`
-		type apt_t;
+		attribute_role apt_roles;
 	')
 
 	apt_domtrans($1)
-	role $2 types apt_t;
-	# TODO: likely have to add dpkg_run here.
+	roleattribute $2 apt_roles;
 ')
 
 ########################################
 ## <summary>
-##	Inherit and use file descriptors from apt.
+##	Use apt file descriptors.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -62,12 +60,12 @@
 	')
 
 	allow $1 apt_t:fd use;
-	# TODO: enforce dpkg_use_fd?
 ')
 
 ########################################
 ## <summary>
-##	Do not audit attempts to use file descriptors from apt.
+##	Do not audit attempts to use
+##	apt file descriptors.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -85,7 +83,7 @@
 
 ########################################
 ## <summary>
-##	Read from an unnamed apt pipe.
+##	Read apt unnamed pipes.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -99,12 +97,11 @@
 	')
 
 	allow $1 apt_t:fifo_file read_fifo_file_perms;
-	# TODO: enforce dpkg_read_pipes?
 ')
 
 ########################################
 ## <summary>
-##	Read and write an unnamed apt pipe.
+##	Read and write apt unnamed pipes.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -118,12 +115,11 @@
 	')
 
 	allow $1 apt_t:fifo_file rw_file_perms;
-	# TODO: enforce dpkg_rw_pipes?
 ')
 
 ########################################
 ## <summary>
-##	Read from and write to apt ptys.
+##	Read and write apt ptys.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -141,7 +137,7 @@
 
 ########################################
 ## <summary>
-##	Read the apt package cache.
+##	Read apt package cache content.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -156,13 +152,13 @@
 
 	files_search_var($1)
 	allow $1 apt_var_cache_t:dir list_dir_perms;
-	dontaudit $1 apt_var_cache_t:dir write;
+	dontaudit $1 apt_var_cache_t:dir write_dir_perms;
 	allow $1 apt_var_cache_t:file read_file_perms;
 ')
 
 ########################################
 ## <summary>
-##	Read the apt package database.
+##	Read apt package database content.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -183,7 +179,8 @@
 
 ########################################
 ## <summary>
-##	Create, read, write, and delete the apt package database.
+##	Create, read, write, and delete
+##	apt package database content.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -198,15 +195,14 @@
 
 	files_search_var_lib($1)
 	manage_files_pattern($1, apt_var_lib_t, apt_var_lib_t)
-	# cjp: shouldnt this be manage_lnk_files?
-	rw_lnk_files_pattern($1, apt_var_lib_t, apt_var_lib_t)
-	delete_lnk_files_pattern($1, apt_var_lib_t, apt_var_lib_t)
+	manage_lnk_files_pattern($1, apt_var_lib_t, apt_var_lib_t)
 ')
 
 ########################################
 ## <summary>
-##	Do not audit attempts to create, read, 
-##	write, and delete the apt package database.
+##	Do not audit attempts to create,
+##	read, write, and delete apt
+##	package database content.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/apt.te refpolicy/policy/modules/contrib/apt.te
--- refpolicy/policy/modules/contrib/apt.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/apt.te	2012-09-27 20:03:30.728126498 +0200
@@ -1,21 +1,21 @@
-policy_module(apt, 1.7.0)
+policy_module(apt, 1.7.3)
 
 ########################################
 #
 # Declarations
 #
 
+attribute_role apt_roles;
+
 type apt_t;
 type apt_exec_t;
 init_system_domain(apt_t, apt_exec_t)
 domain_system_change_exemption(apt_t)
-role system_r types apt_t;
+role apt_roles types apt_t;
 
-# pseudo terminal for running dpkg
 type apt_devpts_t;
 term_pty(apt_devpts_t)
 
-# aptitude lock file
 type apt_lock_t;
 files_lock_file(apt_lock_t)
 
@@ -25,44 +25,37 @@
 type apt_tmpfs_t;
 files_tmpfs_file(apt_tmpfs_t)
 
-# package cache
 type apt_var_cache_t alias var_cache_apt_t;
 files_type(apt_var_cache_t)
 
-# status files
 type apt_var_lib_t alias var_lib_apt_t;
 files_type(apt_var_lib_t)
 
-# aptitude log file
 type apt_var_log_t;
 logging_log_file(apt_var_log_t)
 
 ########################################
 #
-# apt Local policy
+# Local policy
 #
 
 allow apt_t self:capability { chown dac_override fowner fsetid };
 allow apt_t self:process { signal setpgid fork };
 allow apt_t self:fd use;
 allow apt_t self:fifo_file rw_fifo_file_perms;
-allow apt_t self:unix_dgram_socket create_socket_perms;
-allow apt_t self:unix_stream_socket rw_stream_socket_perms;
 allow apt_t self:unix_dgram_socket sendto;
-allow apt_t self:unix_stream_socket connectto;
+allow apt_t self:unix_stream_socket { accept connectto listen };
 allow apt_t self:udp_socket { connect create_socket_perms };
 allow apt_t self:tcp_socket create_stream_socket_perms;
 allow apt_t self:shm create_shm_perms;
 allow apt_t self:sem create_sem_perms;
 allow apt_t self:msgq create_msgq_perms;
 allow apt_t self:msg { send receive };
-# Run update
 allow apt_t self:netlink_route_socket r_netlink_socket_perms;
 
-# lock files
 allow apt_t apt_lock_t:dir manage_dir_perms;
 allow apt_t apt_lock_t:file manage_file_perms;
-files_lock_filetrans(apt_t, apt_lock_t, {dir file})
+files_lock_filetrans(apt_t, apt_lock_t, { dir file })
 
 manage_dirs_pattern(apt_t, apt_tmp_t, apt_tmp_t)
 manage_files_pattern(apt_t, apt_tmp_t, apt_tmp_t)
@@ -75,38 +68,29 @@
 manage_sock_files_pattern(apt_t, apt_tmpfs_t, apt_tmpfs_t)
 fs_tmpfs_filetrans(apt_t, apt_tmpfs_t, { dir file lnk_file sock_file fifo_file })
 
-# Access /var/cache/apt files
 manage_files_pattern(apt_t, apt_var_cache_t, apt_var_cache_t)
 files_var_filetrans(apt_t, apt_var_cache_t, dir)
 
-# Access /var/lib/apt files
 manage_files_pattern(apt_t, apt_var_lib_t, apt_var_lib_t)
 files_var_lib_filetrans(apt_t, apt_var_lib_t, dir)
 
-# log files
 allow apt_t apt_var_log_t:file manage_file_perms;
 logging_log_filetrans(apt_t, apt_var_log_t, file)
 
 kernel_read_system_state(apt_t)
 kernel_read_kernel_sysctls(apt_t)
 
-# to launch dpkg-preconfigure
 corecmd_exec_bin(apt_t)
 corecmd_exec_shell(apt_t)
 
 corenet_all_recvfrom_unlabeled(apt_t)
 corenet_all_recvfrom_netlabel(apt_t)
 corenet_tcp_sendrecv_generic_if(apt_t)
-corenet_udp_sendrecv_generic_if(apt_t)
 corenet_tcp_sendrecv_generic_node(apt_t)
-corenet_udp_sendrecv_generic_node(apt_t)
 corenet_tcp_sendrecv_all_ports(apt_t)
-corenet_udp_sendrecv_all_ports(apt_t)
-# TODO: really allow all these?
-corenet_tcp_bind_generic_node(apt_t)
-corenet_udp_bind_generic_node(apt_t)
-corenet_tcp_connect_all_ports(apt_t)
+
 corenet_sendrecv_all_client_packets(apt_t)
+corenet_tcp_connect_all_ports(apt_t)
 
 dev_read_urand(apt_t)
 
@@ -136,13 +120,11 @@
 
 userdom_use_user_terminals(apt_t)
 
-# with boolean, for cron-apt and such?
-#optional_policy(`
-#	cron_system_entry(apt_t,apt_exec_t)
-#')
+optional_policy(`
+	cron_system_entry(apt_t, apt_exec_t)
+')
 
 optional_policy(`
-	# dpkg interaction
 	dpkg_read_db(apt_t)
 	dpkg_domtrans(apt_t)
 	dpkg_lock_db(apt_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/arpwatch.fc refpolicy/policy/modules/contrib/arpwatch.fc
--- refpolicy/policy/modules/contrib/arpwatch.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/arpwatch.fc	2012-09-27 20:03:30.728126498 +0200
@@ -1,12 +1,9 @@
-/etc/rc\.d/init\.d/arpwatch --	gen_context(system_u:object_r:arpwatch_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/arpwatch	--	gen_context(system_u:object_r:arpwatch_initrc_exec_t,s0)
 
-#
-# /usr
-#
 /usr/sbin/arpwatch	--	gen_context(system_u:object_r:arpwatch_exec_t,s0)
 
-#
-# /var
-#
-/var/arpwatch(/.*)?		gen_context(system_u:object_r:arpwatch_data_t,s0)
-/var/lib/arpwatch(/.*)?		gen_context(system_u:object_r:arpwatch_data_t,s0)
+/var/arpwatch(/.*)?	gen_context(system_u:object_r:arpwatch_data_t,s0)
+
+/var/lib/arpwatch(/.*)?	gen_context(system_u:object_r:arpwatch_data_t,s0)
+
+/var/run/arpwatch.*\.pid	--	gen_context(system_u:object_r:arpwatch_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/arpwatch.if refpolicy/policy/modules/contrib/arpwatch.if
--- refpolicy/policy/modules/contrib/arpwatch.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/arpwatch.if	2012-09-27 20:03:30.728126498 +0200
@@ -2,7 +2,8 @@
 
 ########################################
 ## <summary>
-##	Execute arpwatch server in the arpwatch domain.
+##	Execute arpwatch server in the
+##	arpwatch domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -20,7 +21,7 @@
 
 ########################################
 ## <summary>
-##	Search arpwatch's data file directories.
+##	Search arpwatch data file directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -39,7 +40,8 @@
 
 ########################################
 ## <summary>
-##	Create arpwatch data files.
+##	Create, read, write, and delete
+##	arpwatch data files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -58,7 +60,8 @@
 
 ########################################
 ## <summary>
-##	Read and write arpwatch temporary files.
+##	Read and write arpwatch temporary
+##	files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -77,7 +80,8 @@
 
 ########################################
 ## <summary>
-##	Read and write arpwatch temporary files.
+##	Create, read, write, and delete
+##	arpwatch temporary files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -96,8 +100,8 @@
 
 ########################################
 ## <summary>
-##	Do not audit attempts to read and write
-##	arpwatch packet sockets.
+##	Do not audit attempts to read and
+##	write arpwatch packet sockets.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -115,8 +119,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate 
-##	an arpwatch environment
+##	All of the rules required to
+##	administrate an arpwatch environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -125,19 +129,18 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the arpwatch domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
 #
 interface(`arpwatch_admin',`
 	gen_require(`
-		type arpwatch_t, arpwatch_tmp_t;
+		type arpwatch_t, arpwatch_tmp_t, arpwatch_initrc_exec_t;
 		type arpwatch_data_t, arpwatch_var_run_t;
-		type arpwatch_initrc_exec_t;
 	')
 
-	allow $1 arpwatch_t:process { ptrace signal_perms getattr };
+	allow $1 arpwatch_t:process { ptrace signal_perms };
 	ps_process_pattern($1, arpwatch_t)
 
 	arpwatch_initrc_domtrans($1)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/arpwatch.te refpolicy/policy/modules/contrib/arpwatch.te
--- refpolicy/policy/modules/contrib/arpwatch.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/arpwatch.te	2012-09-27 20:03:30.728126498 +0200
@@ -1,4 +1,4 @@
-policy_module(arpwatch, 1.10.0)
+policy_module(arpwatch, 1.10.4)
 
 ########################################
 #
@@ -9,12 +9,12 @@
 type arpwatch_exec_t;
 init_daemon_domain(arpwatch_t, arpwatch_exec_t)
 
-type arpwatch_data_t;
-files_type(arpwatch_data_t)
-
 type arpwatch_initrc_exec_t;
 init_script_file(arpwatch_initrc_exec_t)
 
+type arpwatch_data_t;
+files_type(arpwatch_data_t)
+
 type arpwatch_tmp_t;
 files_tmp_file(arpwatch_tmp_t)
 
@@ -25,13 +25,12 @@
 #
 # Local policy
 #
+
 allow arpwatch_t self:capability { net_admin net_raw setgid setuid };
 dontaudit arpwatch_t self:capability sys_tty_config;
 allow arpwatch_t self:process signal_perms;
-allow arpwatch_t self:unix_dgram_socket create_socket_perms;
-allow arpwatch_t self:unix_stream_socket create_stream_socket_perms;
-allow arpwatch_t self:tcp_socket { connect create_stream_socket_perms };
-allow arpwatch_t self:udp_socket create_socket_perms;
+allow arpwatch_t self:unix_stream_socket { accept listen };
+allow arpwatch_t self:tcp_socket { accept listen };
 allow arpwatch_t self:packet_socket create_socket_perms;
 allow arpwatch_t self:socket create_socket_perms;
 
@@ -46,23 +45,11 @@
 manage_files_pattern(arpwatch_t, arpwatch_var_run_t, arpwatch_var_run_t)
 files_pid_filetrans(arpwatch_t, arpwatch_var_run_t, file)
 
-kernel_read_network_state(arpwatch_t)
 kernel_read_kernel_sysctls(arpwatch_t)
-kernel_list_proc(arpwatch_t)
-kernel_read_proc_symlinks(arpwatch_t)
+kernel_read_network_state(arpwatch_t)
+kernel_read_system_state(arpwatch_t)
 kernel_request_load_module(arpwatch_t)
 
-corenet_all_recvfrom_unlabeled(arpwatch_t)
-corenet_all_recvfrom_netlabel(arpwatch_t)
-corenet_tcp_sendrecv_generic_if(arpwatch_t)
-corenet_udp_sendrecv_generic_if(arpwatch_t)
-corenet_raw_sendrecv_generic_if(arpwatch_t)
-corenet_tcp_sendrecv_generic_node(arpwatch_t)
-corenet_udp_sendrecv_generic_node(arpwatch_t)
-corenet_raw_sendrecv_generic_node(arpwatch_t)
-corenet_tcp_sendrecv_all_ports(arpwatch_t)
-corenet_udp_sendrecv_all_ports(arpwatch_t)
-
 dev_read_sysfs(arpwatch_t)
 dev_read_usbmon_dev(arpwatch_t)
 dev_rw_generic_usb_dev(arpwatch_t)
@@ -70,11 +57,8 @@
 fs_getattr_all_fs(arpwatch_t)
 fs_search_auto_mountpoints(arpwatch_t)
 
-corecmd_read_bin_symlinks(arpwatch_t)
-
 domain_use_interactive_fds(arpwatch_t)
 
-files_read_etc_files(arpwatch_t)
 files_read_usr_files(arpwatch_t)
 files_search_var_lib(arpwatch_t)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/asterisk.fc refpolicy/policy/modules/contrib/asterisk.fc
--- refpolicy/policy/modules/contrib/asterisk.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/asterisk.fc	2012-09-27 20:03:30.729126498 +0200
@@ -1,9 +1,13 @@
-/etc/asterisk(/.*)?		gen_context(system_u:object_r:asterisk_etc_t,s0)
-/etc/rc\.d/init\.d/asterisk --	gen_context(system_u:object_r:asterisk_initrc_exec_t,s0)
+/etc/asterisk(/.*)?	gen_context(system_u:object_r:asterisk_etc_t,s0)
+
+/etc/rc\.d/init\.d/asterisk	--	gen_context(system_u:object_r:asterisk_initrc_exec_t,s0)
 
 /usr/sbin/asterisk	--	gen_context(system_u:object_r:asterisk_exec_t,s0)
 
-/var/lib/asterisk(/.*)?		gen_context(system_u:object_r:asterisk_var_lib_t,s0)
-/var/log/asterisk(/.*)?		gen_context(system_u:object_r:asterisk_log_t,s0)
-/var/run/asterisk(/.*)?		gen_context(system_u:object_r:asterisk_var_run_t,s0)
+/var/lib/asterisk(/.*)?	gen_context(system_u:object_r:asterisk_var_lib_t,s0)
+
+/var/log/asterisk(/.*)?	gen_context(system_u:object_r:asterisk_log_t,s0)
+
+/var/run/asterisk.*	gen_context(system_u:object_r:asterisk_var_run_t,s0)
+
 /var/spool/asterisk(/.*)?	gen_context(system_u:object_r:asterisk_spool_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/asterisk.if refpolicy/policy/modules/contrib/asterisk.if
--- refpolicy/policy/modules/contrib/asterisk.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/asterisk.if	2012-09-27 20:03:30.729126498 +0200
@@ -1,4 +1,4 @@
-## <summary>Asterisk IP telephony server</summary>
+## <summary>Asterisk IP telephony server.</summary>
 
 ######################################
 ## <summary>
@@ -21,7 +21,7 @@
 
 #####################################
 ## <summary>
-##	Connect to asterisk over a unix domain
+##	Connect to asterisk over a unix domain.
 ##	stream socket.
 ## </summary>
 ## <param name="domain">
@@ -41,7 +41,8 @@
 
 #######################################
 ## <summary>
-##	Allow changing the attributes of the asterisk log files and directories
+##	Set attributes of asterisk log
+##	files and directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -56,13 +57,13 @@
 
 	setattr_files_pattern($1, asterisk_log_t, asterisk_log_t)
 	setattr_dirs_pattern($1, asterisk_log_t, asterisk_log_t)
-
 	logging_search_logs($1)
 ')
 
 #######################################
 ## <summary>
-##	Allow changing the attributes of the asterisk PID files
+##	Set attributes of the asterisk
+##	PID content.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -82,8 +83,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an asterisk environment
+##	All of the rules required to
+##	administrate an asterisk environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -92,7 +93,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the asterisk domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -101,11 +102,10 @@
 	gen_require(`
 		type asterisk_t, asterisk_var_run_t, asterisk_spool_t;
 		type asterisk_etc_t, asterisk_tmp_t, asterisk_log_t;
-		type asterisk_var_lib_t;
-		type asterisk_initrc_exec_t;
+		type asterisk_var_lib_t, asterisk_initrc_exec_t;
 	')
 
-	allow $1 asterisk_t:process { ptrace signal_perms getattr };
+	allow $1 asterisk_t:process { ptrace signal_perms };
 	ps_process_pattern($1, asterisk_t)
 
 	init_labeled_script_domtrans($1, asterisk_initrc_exec_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/asterisk.te refpolicy/policy/modules/contrib/asterisk.te
--- refpolicy/policy/modules/contrib/asterisk.te	2012-07-25 20:33:04.000000000 +0200
+++ refpolicy/policy/modules/contrib/asterisk.te	2012-09-27 20:03:30.729126498 +0200
@@ -1,4 +1,4 @@
-policy_module(asterisk, 1.11.0)
+policy_module(asterisk, 1.11.2)
 
 ########################################
 #
@@ -8,14 +8,13 @@
 type asterisk_t;
 type asterisk_exec_t;
 init_daemon_domain(asterisk_t, asterisk_exec_t)
-application_executable_file(asterisk_exec_t)
-
-type asterisk_etc_t;
-files_config_file(asterisk_etc_t)
 
 type asterisk_initrc_exec_t;
 init_script_file(asterisk_initrc_exec_t)
 
+type asterisk_etc_t;
+files_config_file(asterisk_etc_t)
+
 type asterisk_log_t;
 logging_log_file(asterisk_log_t)
 
@@ -33,32 +32,29 @@
 
 type asterisk_var_run_t;
 files_pid_file(asterisk_var_run_t)
+init_daemon_run_dir(asterisk_var_run_t, "asterisk")
 
 ########################################
 #
 # Local policy
 #
 
-# dac_override for /var/run/asterisk
-allow asterisk_t self:capability { dac_override setgid setuid sys_nice net_admin chown };
-dontaudit asterisk_t self:capability sys_tty_config;
+allow asterisk_t self:capability { dac_override chown setgid setuid sys_nice net_admin };
+dontaudit asterisk_t self:capability { sys_module sys_tty_config };
 allow asterisk_t self:process { getsched setsched signal_perms getcap setcap };
 allow asterisk_t self:fifo_file rw_fifo_file_perms;
 allow asterisk_t self:sem create_sem_perms;
 allow asterisk_t self:shm create_shm_perms;
-allow asterisk_t self:unix_stream_socket { connectto listen accept };
-allow asterisk_t self:tcp_socket create_stream_socket_perms;
-allow asterisk_t self:udp_socket create_socket_perms;
+allow asterisk_t self:unix_stream_socket { accept connectto listen };
+allow asterisk_t self:tcp_socket { accept listen };
 
 allow asterisk_t asterisk_etc_t:dir list_dir_perms;
 read_files_pattern(asterisk_t, asterisk_etc_t, asterisk_etc_t)
 read_lnk_files_pattern(asterisk_t, asterisk_etc_t, asterisk_etc_t)
-files_search_etc(asterisk_t)
-
-can_exec(asterisk_t, asterisk_exec_t)
 
-manage_files_pattern(asterisk_t, asterisk_log_t, asterisk_log_t)
-logging_log_filetrans(asterisk_t, asterisk_log_t, { file dir })
+append_files_pattern(asterisk_t, asterisk_log_t, asterisk_log_t)
+create_files_pattern(asterisk_t, asterisk_log_t, asterisk_log_t)
+setattr_files_pattern(asterisk_t, asterisk_log_t, asterisk_log_t)
 
 manage_dirs_pattern(asterisk_t, asterisk_spool_t, asterisk_spool_t)
 manage_files_pattern(asterisk_t, asterisk_spool_t, asterisk_spool_t)
@@ -75,15 +71,17 @@
 fs_tmpfs_filetrans(asterisk_t, asterisk_tmpfs_t, { dir file lnk_file sock_file fifo_file })
 
 manage_files_pattern(asterisk_t, asterisk_var_lib_t, asterisk_var_lib_t)
-files_var_lib_filetrans(asterisk_t, asterisk_var_lib_t, file)
 
 manage_files_pattern(asterisk_t, asterisk_var_run_t, asterisk_var_run_t)
 manage_fifo_files_pattern(asterisk_t, asterisk_var_run_t, asterisk_var_run_t)
 manage_sock_files_pattern(asterisk_t, asterisk_var_run_t, asterisk_var_run_t)
 files_pid_filetrans(asterisk_t, asterisk_var_run_t, file)
 
-kernel_read_system_state(asterisk_t)
+can_exec(asterisk_t, asterisk_exec_t)
+
 kernel_read_kernel_sysctls(asterisk_t)
+kernel_read_network_state(asterisk_t)
+kernel_read_system_state(asterisk_t)
 kernel_request_load_module(asterisk_t)
 
 corecmd_exec_bin(asterisk_t)
@@ -99,18 +97,33 @@
 corenet_udp_sendrecv_all_ports(asterisk_t)
 corenet_tcp_bind_generic_node(asterisk_t)
 corenet_udp_bind_generic_node(asterisk_t)
+
+corenet_sendrecv_asterisk_server_packets(asterisk_t)
 corenet_tcp_bind_asterisk_port(asterisk_t)
-corenet_tcp_bind_sip_port(asterisk_t)
 corenet_udp_bind_asterisk_port(asterisk_t)
+
+corenet_sendrecv_embrace_dp_c_client_packets(asterisk_t)
+corenet_tcp_connect_embrace_dp_c_port(asterisk_t)
+
+corenet_sendrecv_sip_server_packets(asterisk_t)
+corenet_tcp_bind_sip_port(asterisk_t)
 corenet_udp_bind_sip_port(asterisk_t)
-corenet_sendrecv_asterisk_server_packets(asterisk_t)
-# for VOIP voice channels.
+
+corenet_sendrecv_generic_server_packets(asterisk_t)
 corenet_tcp_bind_generic_port(asterisk_t)
 corenet_udp_bind_generic_port(asterisk_t)
 corenet_dontaudit_udp_bind_all_ports(asterisk_t)
-corenet_sendrecv_generic_server_packets(asterisk_t)
-corenet_tcp_connect_postgresql_port(asterisk_t)
-corenet_tcp_connect_snmp_port(asterisk_t)
+
+corenet_sendrecv_jabber_client_client_packets(asterisk_t)
+corenet_tcp_connect_jabber_client_port(asterisk_t)
+
+corenet_sendrecv_pdps_client_packets(asterisk_t)
+corenet_tcp_connect_pdps_port(asterisk_t)
+
+corenet_sendrecv_pktcable_cops_client_packets(asterisk_t)
+corenet_tcp_connect_pktcable_cops_port(asterisk_t)
+
+corenet_sendrecv_sip_client_packets(asterisk_t)
 corenet_tcp_connect_sip_port(asterisk_t)
 
 dev_rw_generic_usb_dev(asterisk_t)
@@ -122,11 +135,9 @@
 
 domain_use_interactive_fds(asterisk_t)
 
-files_read_etc_files(asterisk_t)
-files_search_spool(asterisk_t)
-# demo files installed in /usr/share/asterisk/sounds/demo-instruct.gsm
-# are labeled usr_t
 files_read_usr_files(asterisk_t)
+files_search_spool(asterisk_t)
+files_dontaudit_search_home(asterisk_t)
 
 fs_getattr_all_fs(asterisk_t)
 fs_list_inotifyfs(asterisk_t)
@@ -143,7 +154,12 @@
 userdom_dontaudit_search_user_home_dirs(asterisk_t)
 
 optional_policy(`
+	alsa_read_rw_config(asterisk_t)
+')
+
+optional_policy(`
 	mysql_stream_connect(asterisk_t)
+	mysql_tcp_connect(asterisk_t)
 ')
 
 optional_policy(`
@@ -156,6 +172,7 @@
 
 optional_policy(`
 	postgresql_stream_connect(asterisk_t)
+	postgresql_tcp_connect(asterisk_t)
 ')
 
 optional_policy(`
@@ -165,6 +182,7 @@
 optional_policy(`
 	snmp_read_snmp_var_lib_files(asterisk_t)
 	snmp_stream_connect(asterisk_t)
+	snmp_tcp_connect(asterisk_t)
 ')
 
 optional_policy(`
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/authbind.fc refpolicy/policy/modules/contrib/authbind.fc
--- refpolicy/policy/modules/contrib/authbind.fc	2012-05-04 16:10:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/authbind.fc	2012-09-27 20:03:30.729126498 +0200
@@ -1,3 +1,3 @@
-/etc/authbind(/.*)?			gen_context(system_u:object_r:authbind_etc_t,s0)
+/etc/authbind(/.*)?	gen_context(system_u:object_r:authbind_etc_t,s0)
 
 /usr/lib/authbind/helper	--	gen_context(system_u:object_r:authbind_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/authbind.if refpolicy/policy/modules/contrib/authbind.if
--- refpolicy/policy/modules/contrib/authbind.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/authbind.if	2012-09-27 20:03:30.729126498 +0200
@@ -1,8 +1,8 @@
-## <summary>Tool for non-root processes to bind to reserved ports</summary>
+## <summary>Tool for non-root processes to bind to reserved ports.</summary>
 
 ########################################
 ## <summary>
-##	Use authbind to bind to a reserved port.
+##	Execute authbind in the authbind domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -15,6 +15,32 @@
 		type authbind_t, authbind_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, authbind_exec_t, authbind_t)
-	allow authbind_t $1:{ tcp_socket udp_socket } rw_socket_perms;
+')
+
+########################################
+## <summary>
+##	Execute authbind in the authbind
+##	domain, and allow the specified
+##	role the authbind domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+#
+interface(`authbind_run',`
+	gen_require(`
+		attribute_role authbind_roles;
+	')
+
+	authbind_domtrans($1)
+	roleattribute $2 authbind_roles;
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/authbind.te refpolicy/policy/modules/contrib/authbind.te
--- refpolicy/policy/modules/contrib/authbind.te	2012-07-25 20:33:04.000000000 +0200
+++ refpolicy/policy/modules/contrib/authbind.te	2012-09-27 20:03:30.729126498 +0200
@@ -1,14 +1,17 @@
-policy_module(authbind, 1.2.0)
+policy_module(authbind, 1.2.1)
 
 ########################################
 #
 # Declarations
 #
 
+attribute_role authbind_roles;
+roleattribute system_r authbind_roles;
+
 type authbind_t;
 type authbind_exec_t;
 application_domain(authbind_t, authbind_exec_t)
-role system_r types authbind_t;
+role authbind_roles types authbind_t;
 
 type authbind_etc_t;
 files_config_file(authbind_etc_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/automount.fc refpolicy/policy/modules/contrib/automount.fc
--- refpolicy/policy/modules/contrib/automount.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/automount.fc	2012-09-27 20:03:30.729126498 +0200
@@ -1,16 +1,8 @@
-#
-# /etc
-#
-/etc/apm/event\.d/autofs --	gen_context(system_u:object_r:automount_exec_t,s0)
+/etc/apm/event\.d/autofs	--	gen_context(system_u:object_r:automount_exec_t,s0)
 /etc/rc\.d/init\.d/autofs	--	gen_context(system_u:object_r:automount_initrc_exec_t,s0)
 
-#
-# /usr
-#
 /usr/sbin/automount	--	gen_context(system_u:object_r:automount_exec_t,s0)
 
-#
-# /var
-#
+/var/lock/subsys/autofs	--	gen_context(system_u:object_r:automount_lock_t,s0)
 
-/var/run/autofs.*		gen_context(system_u:object_r:automount_var_run_t,s0)
+/var/run/autofs.*	gen_context(system_u:object_r:automount_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/automount.if refpolicy/policy/modules/contrib/automount.if
--- refpolicy/policy/modules/contrib/automount.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/automount.if	2012-09-27 20:03:30.730126498 +0200
@@ -21,7 +21,7 @@
 
 ########################################
 ## <summary>
-##	Send automount a signal
+##	Send generic signals to automount.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -55,7 +55,7 @@
 
 ########################################
 ## <summary>
-##	Allow the domain to read state files in /proc.
+##	Read automount process state.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -68,12 +68,16 @@
 		type automount_t;
 	')
 
+	kernel_search_proc($1)
+	allow $1 automount_t:dir list_dir_perms;
 	read_files_pattern($1, automount_t, automount_t)
+	read_lnk_files_pattern($1, automount_t, automount_t)
 ')
 
 ########################################
 ## <summary>
-##	Do not audit attempts to file descriptors for automount.
+##	Do not audit attempts to use
+##	automount file descriptors.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -91,7 +95,8 @@
 
 ########################################
 ## <summary>
-##	Do not audit attempts to write automount daemon unnamed pipes.
+##	Do not audit attempts to write
+##	automount unnamed pipes.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -109,8 +114,9 @@
 
 ########################################
 ## <summary>
-##	Do not audit attempts to get the attributes
-##	of automount temporary directories.
+##	Do not audit attempts to get
+##	attributes of automount temporary
+##	directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -123,13 +129,13 @@
 		type automount_tmp_t;
 	')
 
-	dontaudit $1 automount_tmp_t:dir getattr;
+	dontaudit $1 automount_tmp_t:dir getattr_dir_perms;
 ')
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate 
-##	an automount environment
+##	All of the rules required to
+##	administrate an automount environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -138,7 +144,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the automount domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -149,7 +155,7 @@
 		type automount_var_run_t, automount_initrc_exec_t;
 	')
 
-	allow $1 automount_t:process { ptrace signal_perms getattr };
+	allow $1 automount_t:process { ptrace signal_perms };
 	ps_process_pattern($1, automount_t)
 
 	init_labeled_script_domtrans($1, automount_initrc_exec_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/automount.te refpolicy/policy/modules/contrib/automount.te
--- refpolicy/policy/modules/contrib/automount.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/automount.te	2012-09-27 20:03:30.730126498 +0200
@@ -1,4 +1,4 @@
-policy_module(automount, 1.13.0)
+policy_module(automount, 1.13.1)
 
 ########################################
 #
@@ -31,10 +31,7 @@
 dontaudit automount_t self:capability sys_tty_config;
 allow automount_t self:process { signal_perms getpgid setpgid setsched setrlimit };
 allow automount_t self:fifo_file rw_fifo_file_perms;
-allow automount_t self:unix_stream_socket create_socket_perms;
-allow automount_t self:unix_dgram_socket create_socket_perms;
-allow automount_t self:tcp_socket create_stream_socket_perms;
-allow automount_t self:udp_socket create_socket_perms;
+allow automount_t self:tcp_socket { accept listen };
 allow automount_t self:rawip_socket create_socket_perms;
 
 can_exec(automount_t, automount_exec_t)
@@ -45,9 +42,6 @@
 manage_dirs_pattern(automount_t, automount_tmp_t, automount_tmp_t)
 manage_files_pattern(automount_t, automount_tmp_t, automount_tmp_t)
 files_tmp_filetrans(automount_t, automount_tmp_t, { file dir })
-
-# Allow automount to create and delete directories in / and /home
-allow automount_t automount_tmp_t:dir manage_dir_perms;
 files_home_filetrans(automount_t, automount_tmp_t, dir)
 files_root_filetrans(automount_t, automount_tmp_t, dir)
 
@@ -64,18 +58,6 @@
 kernel_list_proc(automount_t)
 kernel_dontaudit_search_xen_state(automount_t)
 
-files_search_boot(automount_t)
-# Automount is slowly adding all mount functionality internally
-files_search_all(automount_t)
-files_mounton_all_mountpoints(automount_t)
-files_mount_all_file_type_fs(automount_t)
-files_unmount_all_file_type_fs(automount_t)
-files_manage_non_security_dirs(automount_t)
-
-fs_mount_all_fs(automount_t)
-fs_unmount_all_fs(automount_t)
-fs_search_all(automount_t)
-
 corecmd_exec_bin(automount_t)
 corecmd_exec_shell(automount_t)
 
@@ -89,10 +71,11 @@
 corenet_udp_sendrecv_all_ports(automount_t)
 corenet_tcp_bind_generic_node(automount_t)
 corenet_udp_bind_generic_node(automount_t)
+
+corenet_sendrecv_all_client_packets(automount_t)
+corenet_sendrecv_all_server_packets(automount_t)
 corenet_tcp_connect_portmap_port(automount_t)
 corenet_tcp_connect_all_ports(automount_t)
-corenet_dontaudit_tcp_connect_all_reserved_ports(automount_t)
-corenet_sendrecv_all_client_packets(automount_t)
 # Automount execs showmount when you browse /net.  This is required until
 # Someone writes a showmount policy
 corenet_tcp_bind_reserved_port(automount_t)
@@ -100,36 +83,42 @@
 corenet_udp_bind_reserved_port(automount_t)
 corenet_udp_bind_all_rpc_ports(automount_t)
 
-dev_read_sysfs(automount_t)
-dev_rw_autofs(automount_t)
-# for SSP
-dev_read_rand(automount_t)
-dev_read_urand(automount_t)
-
-domain_use_interactive_fds(automount_t)
-domain_dontaudit_read_all_domains_state(automount_t)
-
 files_dontaudit_write_var_dirs(automount_t)
 files_getattr_all_dirs(automount_t)
-files_list_mnt(automount_t)
+files_getattr_default_dirs(automount_t)
 files_getattr_home_dir(automount_t)
-files_read_etc_files(automount_t)
-files_read_etc_runtime_files(automount_t)
-# for if the mount point is not labelled
 files_getattr_isid_type_dirs(automount_t)
-files_getattr_default_dirs(automount_t)
-# because config files can be shell scripts
 files_exec_etc_files(automount_t)
+files_list_mnt(automount_t)
+files_manage_non_security_dirs(automount_t)
+files_mount_all_file_type_fs(automount_t)
+files_mounton_all_mountpoints(automount_t)
 files_mounton_mnt(automount_t)
+files_read_etc_runtime_files(automount_t)
+files_read_usr_files(automount_t)
+files_search_boot(automount_t)
+files_search_all(automount_t)
+files_unmount_all_file_type_fs(automount_t)
 
-fs_getattr_all_fs(automount_t)
 fs_getattr_all_dirs(automount_t)
-fs_search_auto_mountpoints(automount_t)
+fs_getattr_all_fs(automount_t)
 fs_manage_auto_mountpoints(automount_t)
-fs_unmount_autofs(automount_t)
-fs_mount_autofs(automount_t)
 fs_manage_autofs_symlinks(automount_t)
+fs_mount_all_fs(automount_t)
+fs_mount_autofs(automount_t)
 fs_read_nfs_files(automount_t)
+fs_search_all(automount_t)
+fs_search_auto_mountpoints(automount_t)
+fs_unmount_all_fs(automount_t)
+fs_unmount_autofs(automount_t)
+
+dev_read_rand(automount_t)
+dev_read_sysfs(automount_t)
+dev_read_urand(automount_t)
+dev_rw_autofs(automount_t)
+
+domain_use_interactive_fds(automount_t)
+domain_dontaudit_read_all_domains_state(automount_t)
 
 storage_rw_fuse(automount_t)
 
@@ -143,16 +132,10 @@
 miscfiles_read_localization(automount_t)
 miscfiles_read_generic_certs(automount_t)
 
-# Run mount in the mount_t domain.
 mount_domtrans(automount_t)
 mount_signal(automount_t)
 
 userdom_dontaudit_use_unpriv_user_fds(automount_t)
-userdom_dontaudit_search_user_home_dirs(automount_t)
-
-optional_policy(`
-	bind_search_cache(automount_t)
-')
 
 optional_policy(`
 	fstools_domtrans(automount_t)
@@ -165,10 +148,6 @@
 ')
 
 optional_policy(`
-	rpc_search_nfs_state_data(automount_t)
-')
-
-optional_policy(`
 	samba_read_config(automount_t)
 	samba_manage_var_files(automount_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/avahi.fc refpolicy/policy/modules/contrib/avahi.fc
--- refpolicy/policy/modules/contrib/avahi.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/avahi.fc	2012-09-27 20:03:30.730126498 +0200
@@ -1,9 +1,9 @@
 /etc/rc\.d/init\.d/avahi.*	--	gen_context(system_u:object_r:avahi_initrc_exec_t,s0)
 
-/usr/sbin/avahi-daemon		--	gen_context(system_u:object_r:avahi_exec_t,s0)
-/usr/sbin/avahi-dnsconfd 	--	gen_context(system_u:object_r:avahi_exec_t,s0)
-/usr/sbin/avahi-autoipd 	--	gen_context(system_u:object_r:avahi_exec_t,s0)
+/usr/sbin/avahi-daemon	--	gen_context(system_u:object_r:avahi_exec_t,s0)
+/usr/sbin/avahi-dnsconfd	--	gen_context(system_u:object_r:avahi_exec_t,s0)
+/usr/sbin/avahi-autoipd	--	gen_context(system_u:object_r:avahi_exec_t,s0)
 
-/var/run/avahi-daemon(/.*)? 		gen_context(system_u:object_r:avahi_var_run_t,s0)
+/var/run/avahi-daemon(/.*)?	gen_context(system_u:object_r:avahi_var_run_t,s0)
 
-/var/lib/avahi-autoipd(/.*)?		gen_context(system_u:object_r:avahi_var_lib_t,s0)
+/var/lib/avahi-autoipd(/.*)?	gen_context(system_u:object_r:avahi_var_lib_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/avahi.if refpolicy/policy/modules/contrib/avahi.if
--- refpolicy/policy/modules/contrib/avahi.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/avahi.if	2012-09-27 20:03:30.730126498 +0200
@@ -1,4 +1,4 @@
-## <summary>mDNS/DNS-SD daemon implementing Apple ZeroConf architecture</summary>
+## <summary>mDNS/DNS-SD daemon implementing Apple ZeroConf architecture.</summary>
 
 ########################################
 ## <summary>
@@ -21,7 +21,7 @@
 
 ########################################
 ## <summary>
-##	Send avahi a signal
+##	Send generic signals to avahi.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -39,7 +39,7 @@
 
 ########################################
 ## <summary>
-##	Send avahi a kill signal.
+##	Send kill signals to avahi.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -57,7 +57,7 @@
 
 ########################################
 ## <summary>
-##	Send avahi a signull
+##	Send null signals to avahi.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -96,7 +96,8 @@
 
 ########################################
 ## <summary>
-##	Connect to avahi using a unix domain stream socket.
+##	Connect to avahi using a unix
+$$	stream socket.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -115,7 +116,8 @@
 
 ########################################
 ## <summary>
-##	Do not audit attempts to search the avahi pid directory.
+##	Do not audit attempts to search
+##	avahi pid directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -133,8 +135,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an avahi environment
+##	All of the rules required to
+##	administrate an avahi environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -143,7 +145,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the avahi domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -151,6 +153,7 @@
 interface(`avahi_admin',`
 	gen_require(`
 		type avahi_t, avahi_var_run_t, avahi_initrc_exec_t;
+		type avahi_var_lib_t;
 	')
 
 	allow $1 avahi_t:process { ptrace signal_perms };
@@ -161,6 +164,9 @@
 	role_transition $2 avahi_initrc_exec_t system_r;
 	allow $2 system_r;
 
-	files_list_pids($1)
+	files_search_pids($1)
 	admin_pattern($1, avahi_var_run_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, avahi_var_lib_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/avahi.te refpolicy/policy/modules/contrib/avahi.te
--- refpolicy/policy/modules/contrib/avahi.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/avahi.te	2012-09-27 20:03:30.730126498 +0200
@@ -1,4 +1,4 @@
-policy_module(avahi, 1.13.0)
+policy_module(avahi, 1.13.1)
 
 ########################################
 #
@@ -27,10 +27,8 @@
 dontaudit avahi_t self:capability sys_tty_config;
 allow avahi_t self:process { setrlimit signal_perms getcap setcap };
 allow avahi_t self:fifo_file rw_fifo_file_perms;
-allow avahi_t self:unix_stream_socket { connectto create_stream_socket_perms };
-allow avahi_t self:unix_dgram_socket create_socket_perms;
-allow avahi_t self:tcp_socket create_stream_socket_perms;
-allow avahi_t self:udp_socket create_socket_perms;
+allow avahi_t self:unix_stream_socket { accept connectto listen };
+allow avahi_t self:tcp_socket { accept listen };
 allow avahi_t self:packet_socket create_socket_perms;
 
 manage_dirs_pattern(avahi_t, avahi_var_lib_t, avahi_var_lib_t)
@@ -43,9 +41,10 @@
 allow avahi_t avahi_var_run_t:dir setattr_dir_perms;
 files_pid_filetrans(avahi_t, avahi_var_run_t, { dir file })
 
-kernel_read_system_state(avahi_t)
 kernel_read_kernel_sysctls(avahi_t)
 kernel_read_network_state(avahi_t)
+kernel_read_system_state(avahi_t)
+kernel_request_load_module(avahi_t)
 
 corecmd_exec_bin(avahi_t)
 corecmd_exec_shell(avahi_t)
@@ -60,10 +59,10 @@
 corenet_udp_sendrecv_all_ports(avahi_t)
 corenet_tcp_bind_generic_node(avahi_t)
 corenet_udp_bind_generic_node(avahi_t)
+
+corenet_sendrecv_howl_server_packets(avahi_t)
 corenet_tcp_bind_howl_port(avahi_t)
 corenet_udp_bind_howl_port(avahi_t)
-corenet_send_howl_client_packets(avahi_t)
-corenet_receive_howl_server_packets(avahi_t)
 
 dev_read_sysfs(avahi_t)
 dev_read_urand(avahi_t)
@@ -74,7 +73,6 @@
 
 domain_use_interactive_fds(avahi_t)
 
-files_read_etc_files(avahi_t)
 files_read_etc_runtime_files(avahi_t)
 files_read_usr_files(avahi_t)
 
@@ -100,7 +98,13 @@
 	dbus_system_bus_client(avahi_t)
 	dbus_connect_system_bus(avahi_t)
 
-	init_dbus_chat_script(avahi_t)
+	optional_policy(`
+		init_dbus_chat_script(avahi_t)
+	')
+')
+
+optional_policy(`
+	rpcbind_signull(avahi_t)
 ')
 
 optional_policy(`
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/awstats.fc refpolicy/policy/modules/contrib/awstats.fc
--- refpolicy/policy/modules/contrib/awstats.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/awstats.fc	2012-09-27 20:03:30.730126498 +0200
@@ -1,5 +1,5 @@
-/usr/share/awstats/tools/.+\.pl		--	gen_context(system_u:object_r:awstats_exec_t,s0)
-/usr/share/awstats/wwwroot(/.*)?		gen_context(system_u:object_r:httpd_awstats_content_t,s0)
+/usr/share/awstats/tools/.+\.pl	--	gen_context(system_u:object_r:awstats_exec_t,s0)
+/usr/share/awstats/wwwroot(/.*)?	gen_context(system_u:object_r:httpd_awstats_content_t,s0)
 /usr/share/awstats/wwwroot/cgi-bin(/.*)?	gen_context(system_u:object_r:httpd_awstats_script_exec_t,s0)
 
-/var/lib/awstats(/.*)?				gen_context(system_u:object_r:awstats_var_lib_t,s0)
+/var/lib/awstats(/.*)?	gen_context(system_u:object_r:awstats_var_lib_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/awstats.if refpolicy/policy/modules/contrib/awstats.if
--- refpolicy/policy/modules/contrib/awstats.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/awstats.if	2012-09-27 20:03:30.730126498 +0200
@@ -1,11 +1,8 @@
-## <summary>
-##	AWStats is a free powerful and featureful tool that generates advanced
-##	web, streaming, ftp or mail server statistics, graphically.
-## </summary>
+## <summary>Log file analyzer for advanced statistics.</summary>
 
 ########################################
 ## <summary>
-##	Read and write awstats unnamed pipes.
+##	Read and write awstats unnamed pipes. (Deprecated)
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -14,16 +11,12 @@
 ## </param>
 #
 interface(`awstats_rw_pipes',`
-	gen_require(`
-		type awstats_t;
-	')
-
-	allow $1 awstats_t:fifo_file rw_fifo_file_perms;
+	refpolicywarn(`$0($*) has been deprecated.')
 ')
 
 ########################################
 ## <summary>
-##	Execute awstats cgi scripts in the caller domain.
+##	Execute awstats cgi scripts in the caller domain. (Deprecated)
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -32,11 +25,5 @@
 ## </param>
 #
 interface(`awstats_cgi_exec',`
-	gen_require(`
-		type httpd_awstats_script_exec_t, httpd_awstats_content_t;
-	')
-
-	allow $1 httpd_awstats_content_t:dir search_dir_perms;
-	allow $1 httpd_awstats_script_exec_t:dir search_dir_perms;
-	can_exec($1, httpd_awstats_script_exec_t)
+	refpolicywarn(`$0($*) has been deprecated.')
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/awstats.te refpolicy/policy/modules/contrib/awstats.te
--- refpolicy/policy/modules/contrib/awstats.te	2012-09-28 19:56:54.100040255 +0200
+++ refpolicy/policy/modules/contrib/awstats.te	2012-09-27 20:03:30.731126498 +0200
@@ -1,4 +1,4 @@
-policy_module(awstats, 1.4.0)
+policy_module(awstats, 1.4.1)
 
 ########################################
 #
@@ -20,22 +20,21 @@
 
 ########################################
 #
-# awstats policy
+# Local policy
 #
 
-awstats_rw_pipes(awstats_t)
-awstats_cgi_exec(awstats_t)
-
-can_exec(awstats_t, awstats_exec_t)
+allow awstats_t self:fifo_file rw_fifo_file_perms;
 
 manage_dirs_pattern(awstats_t, awstats_tmp_t, awstats_tmp_t)
 manage_files_pattern(awstats_t, awstats_tmp_t, awstats_tmp_t)
 files_tmp_filetrans(awstats_t, awstats_tmp_t, { dir file })
 
 manage_files_pattern(awstats_t, awstats_var_lib_t, awstats_var_lib_t)
-files_var_lib_filetrans(awstats_t, awstats_var_lib_t, file)
 
-# dontaudit access to /proc/meminfo
+allow awstats_t { httpd_awstats_content_t  httpd_awstats_script_exec_t }:dir search_dir_perms;
+
+can_exec(awstats_t, { awstats_exec_t httpd_awstats_script_exec_t })
+
 kernel_dontaudit_read_system_state(awstats_t)
 
 corecmd_exec_bin(awstats_t)
@@ -43,10 +42,9 @@
 
 dev_read_urand(awstats_t)
 
+files_dontaudit_search_all_mountpoints(awstats_t)
 files_read_etc_files(awstats_t)
-# e.g. /usr/share/awstats/lang/awstats-en.txt
 files_read_usr_files(awstats_t)
-files_dontaudit_search_all_mountpoints(awstats_t)
 
 fs_list_inotifyfs(awstats_t)
 
@@ -66,7 +64,6 @@
 ')
 
 optional_policy(`
-	# dontaudit searching nscd pid directory
 	nscd_dontaudit_search_pid(awstats_t)
 ')
 
@@ -76,7 +73,7 @@
 
 ########################################
 #
-# awstats cgi script policy
+# CGI local policy
 #
 
 allow httpd_awstats_script_t awstats_var_lib_t:dir list_dir_perms;
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/backup.fc refpolicy/policy/modules/contrib/backup.fc
--- refpolicy/policy/modules/contrib/backup.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/backup.fc	2012-09-27 20:03:30.731126498 +0200
@@ -1,13 +1,4 @@
-# backup
-# label programs that do backups to other files on disk (IE a cron job that
-# calls tar) in backup_exec_t and label the directory for storing them as
-# backup_store_t, Debian uses /var/backups
+/etc/cron\.daily/aptitude	--	gen_context(system_u:object_r:backup_exec_t,s0)
+/etc/cron\.daily/standard	--	gen_context(system_u:object_r:backup_exec_t,s0)
 
-#/usr/local/bin/backup-script	--	gen_context(system_u:object_r:backup_exec_t,s0)
-
-ifdef(`distro_debian',`
-/etc/cron.daily/aptitude	--	gen_context(system_u:object_r:backup_exec_t,s0)
-/etc/cron.daily/standard	--	gen_context(system_u:object_r:backup_exec_t,s0)
-')
-
-/var/backups(/.*)?			gen_context(system_u:object_r:backup_store_t,s0)
+/var/backups(/.*)?	gen_context(system_u:object_r:backup_store_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/backup.if refpolicy/policy/modules/contrib/backup.if
--- refpolicy/policy/modules/contrib/backup.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/backup.if	2012-09-27 20:03:30.731126498 +0200
@@ -1,4 +1,4 @@
-## <summary>System backup scripts</summary>
+## <summary>System backup scripts.</summary>
 
 ########################################
 ## <summary>
@@ -15,13 +15,15 @@
 		type backup_t, backup_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, backup_exec_t, backup_t)
 ')
 
 ########################################
 ## <summary>
-##	Execute backup in the backup domain, and
-##	allow the specified role the backup domain.
+##	Execute backup in the backup
+##	domain, and allow the specified
+##	role the backup domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -37,9 +39,9 @@
 #
 interface(`backup_run',`
 	gen_require(`
-		type backup_t;
+		attribute_role backup_roles;
 	')
 
 	backup_domtrans($1)
-	role $2 types backup_t;
+	roleattribute $2 backup_roles;
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/backup.te refpolicy/policy/modules/contrib/backup.te
--- refpolicy/policy/modules/contrib/backup.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/backup.te	2012-09-27 20:03:30.731126498 +0200
@@ -1,15 +1,17 @@
-policy_module(backup, 1.5.0)
+policy_module(backup, 1.5.2)
 
 ########################################
 #
 # Declarations
 #
 
+attribute_role backup_roles;
+roleattribute system_r backup_roles;
+
 type backup_t;
 type backup_exec_t;
-domain_type(backup_t)
-domain_entry_file(backup_t, backup_exec_t)
-role system_r types backup_t;
+application_domain(backup_t, backup_exec_t)
+role backup_roles types backup_t;
 
 type backup_store_t;
 files_type(backup_store_t)
@@ -25,7 +27,7 @@
 allow backup_t self:tcp_socket create_socket_perms;
 allow backup_t self:udp_socket create_socket_perms;
 
-allow backup_t backup_store_t:file setattr;
+allow backup_t backup_store_t:file setattr_file_perms;
 manage_files_pattern(backup_t, backup_store_t, backup_store_t)
 rw_files_pattern(backup_t, backup_store_t, backup_store_t)
 read_lnk_files_pattern(backup_t, backup_store_t, backup_store_t)
@@ -39,19 +41,14 @@
 corenet_all_recvfrom_unlabeled(backup_t)
 corenet_all_recvfrom_netlabel(backup_t)
 corenet_tcp_sendrecv_generic_if(backup_t)
-corenet_udp_sendrecv_generic_if(backup_t)
-corenet_raw_sendrecv_generic_if(backup_t)
 corenet_tcp_sendrecv_generic_node(backup_t)
-corenet_udp_sendrecv_generic_node(backup_t)
-corenet_raw_sendrecv_generic_node(backup_t)
 corenet_tcp_sendrecv_all_ports(backup_t)
-corenet_udp_sendrecv_all_ports(backup_t)
+
 corenet_tcp_connect_all_ports(backup_t)
 corenet_sendrecv_all_client_packets(backup_t)
 
 dev_getattr_all_blk_files(backup_t)
 dev_getattr_all_chr_files(backup_t)
-# for SSP
 dev_read_urand(backup_t)
 
 domain_use_interactive_fds(backup_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bacula.fc refpolicy/policy/modules/contrib/bacula.fc
--- refpolicy/policy/modules/contrib/bacula.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/bacula.fc	2012-09-27 20:03:30.731126498 +0200
@@ -1,20 +1,17 @@
-#
-# /usr
-#
-/usr/sbin/bacula-(.*)?	--	gen_context(system_u:object_r:bacula_exec_t,s0)
-/usr/sbin/bat			gen_context(system_u:object_r:bacula_admin_exec_t,s0)
-/usr/sbin/bconsole		gen_context(system_u:object_r:bacula_admin_exec_t,s0)
-
-#
-# /etc
-#
-/etc/bacula(/.*)?		gen_context(system_u:object_r:bacula_etc_t,s0)
-
-#
-# /var
-#
-/var/lib/bacula(/.*)?		gen_context(system_u:object_r:bacula_var_lib_t,s0)
-
-# A separate disk for backups mounted at /bacula or beginning with
-# /bacula also matches a restore directory like /bacula-restores
-/bacula(.*)?			gen_context(system_u:object_r:bacula_store_t,s0)
+/bacula(/.*)?	gen_context(system_u:object_r:bacula_store_t,s0)
+
+/etc/bacula.*	gen_context(system_u:object_r:bacula_etc_t,s0)
+
+/etc/rc\.d/init\.d/bacula.*	--	gen_context(system_u:object_r:bacula_initrc_exec_t,s0)
+
+/usr/sbin/bacula.*	--	gen_context(system_u:object_r:bacula_exec_t,s0)
+/usr/sbin/bat	--	gen_context(system_u:object_r:bacula_admin_exec_t,s0)
+/usr/sbin/bconsole	--	gen_context(system_u:object_r:bacula_admin_exec_t,s0)
+
+/var/lib/bacula.*	gen_context(system_u:object_r:bacula_var_lib_t,s0)
+
+/var/log/bacula.*	gen_context(system_u:object_r:bacula_log_t,s0)
+
+/var/run/bacula.*	--	gen_context(system_u:object_r:bacula_var_run_t,s0)
+
+/var/spool/bacula.*	gen_context(system_u:object_r:bacula_spool_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bacula.if refpolicy/policy/modules/contrib/bacula.if
--- refpolicy/policy/modules/contrib/bacula.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/bacula.if	2012-09-27 20:03:30.731126498 +0200
@@ -1,8 +1,9 @@
-## <summary>bacula backup program</summary>
+## <summary>Cross platform network backup.</summary>
 
 ########################################
 ## <summary>
-##	Execute user interfaces in the bacula_admin domain.
+##	Execute bacula admin bacula
+##	admin domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -15,13 +16,15 @@
 		type bacula_admin_t, bacula_admin_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, bacula_admin_exec_t, bacula_admin_t)
 ')
 
 ########################################
 ## <summary>
-##	Execute user interfaces in the bacula_admin domain, and
-##	allow the specified role to transition to the bacula_admin domain.
+##	Execute user interfaces in the
+##	bacula admin domain, and allow the
+##	specified role the bacula admin domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -37,9 +40,59 @@
 #
 interface(`bacula_run_admin',`
 	gen_require(`
-		type bacula_admin_t;
+		attribute_role bacula_admin_roles;
 	')
 
 	bacula_domtrans_admin($1)
-	role $2 types bacula_admin_t;
+	roleattribute $2 bacula_admin_roles;
+')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an bacula environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`bacula_admin',`
+	gen_require(`
+		type bacula_t, bacula_etc_t, bacula_log_t;
+		type bacula_spool_t, bacula_var_lib_t;
+		type bacula_var_run_t, bacula_initrc_exec_t;
+	')
+
+	allow $1 bacula_t:process { ptrace signal_perms };
+	ps_process_pattern($1, bacula_t)
+
+	init_labeled_script_domtrans($1, bacula_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 bacula_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_etc($1)
+	admin_pattern($1, bacula_etc_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, bacula_log_t)
+
+	files_search_var($1)
+	admin_pattern($1, bacula_spool_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, bacula_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, bacula_var_run_t)
+
+	bacula_run_admin($1, $2)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bacula.te refpolicy/policy/modules/contrib/bacula.te
--- refpolicy/policy/modules/contrib/bacula.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/bacula.te	2012-09-27 20:03:30.731126498 +0200
@@ -1,17 +1,28 @@
-policy_module(bacula, 1.0.0)
+policy_module(bacula, 1.1.0)
 
 ########################################
 #
 # Declarations
 #
 
+attribute_role bacula_admin_roles;
+
 type bacula_t;
 type bacula_exec_t;
 init_daemon_domain(bacula_t, bacula_exec_t)
 
+type bacula_initrc_exec_t;
+init_script_file(bacula_initrc_exec_t)
+
 type bacula_etc_t;
 files_type(bacula_etc_t)
 
+type bacula_log_t;
+logging_log_file(bacula_log_t)
+
+type bacula_spool_t;
+files_type(bacula_spool_t)
+
 type bacula_store_t;
 files_type(bacula_store_t)
 files_mountpoint(bacula_store_t)
@@ -25,10 +36,11 @@
 type bacula_admin_t;
 type bacula_admin_exec_t;
 application_domain(bacula_admin_t, bacula_admin_exec_t)
+role bacula_admin_roles types bacula_admin_t;
 
 ########################################
 #
-# Local policy - bacula daemon
+# Local policy
 #
 
 allow bacula_t self:capability { dac_read_search dac_override chown fowner fsetid};
@@ -40,14 +52,22 @@
 
 read_files_pattern(bacula_t, bacula_etc_t, bacula_etc_t)
 
+append_files_pattern(bacula_t, bacula_log_t, bacula_log_t)
+create_files_pattern(bacula_t, bacula_log_t, bacula_log_t)
+setattr_files_pattern(bacula_t, bacula_log_t, bacula_log_t)
+
+manage_dirs_pattern(bacula_t, bacula_spool_t, bacula_spool_t)
+manage_files_pattern(bacula_t, bacula_spool_t, bacula_spool_t)
+
 manage_files_pattern(bacula_t, bacula_store_t, bacula_store_t)
 manage_lnk_files_pattern(bacula_t, bacula_store_t, bacula_store_t)
 manage_dirs_pattern(bacula_t, bacula_store_t, bacula_store_t)
 
+manage_dirs_pattern(bacula_t, bacula_var_lib_t, bacula_var_lib_t)
 manage_files_pattern(bacula_t, bacula_var_lib_t, bacula_var_lib_t)
-files_var_lib_filetrans(bacula_t, bacula_var_lib_t, file)
+files_var_lib_filetrans(bacula_t, bacula_var_lib_t, dir)
 
-allow bacula_t bacula_var_run_t:file { create_file_perms write_file_perms unlink};
+allow bacula_t bacula_var_run_t:file manage_file_perms;
 files_pid_filetrans(bacula_t, bacula_var_run_t, file)
 
 kernel_read_kernel_sysctls(bacula_t)
@@ -56,15 +76,26 @@
 corecmd_exec_bin(bacula_t)
 corecmd_exec_shell(bacula_t)
 
+corenet_all_recvfrom_unlabeled(bacula_t)
+corenet_all_recvfrom_netlabel(bacula_t)
+corenet_tcp_sendrecv_generic_if(bacula_t)
+corenet_udp_sendrecv_generic_if(bacula_t)
+corenet_tcp_sendrecv_generic_node(bacula_t)
+corenet_udp_sendrecv_generic_node(bacula_t)
+corenet_tcp_sendrecv_all_ports(bacula_t)
+corenet_udp_sendrecv_all_ports(bacula_t)
 corenet_tcp_bind_generic_node(bacula_t)
 corenet_udp_bind_generic_node(bacula_t)
-corenet_tcp_bind_generic_port(bacula_t)
+
+corenet_sendrecv_generic_server_packets(bacula_t)
 corenet_udp_bind_generic_port(bacula_t)
+
+corenet_sendrecv_hplip_server_packets(bacula_t)
 corenet_tcp_bind_hplip_port(bacula_t)
 corenet_udp_bind_hplip_port(bacula_t)
+
+corenet_sendrecv_all_client_packets(bacula_t)
 corenet_tcp_connect_all_ports(bacula_t)
-corenet_tcp_connect_smtp_port(bacula_t)
-# Bacula's default port are listed already under hplip
 
 dev_getattr_all_blk_files(bacula_t)
 dev_getattr_all_chr_files(bacula_t)
@@ -96,16 +127,24 @@
 
 ########################################
 #
-# Local policy - bacula admin client
+# Client local policy
 #
+
 allow bacula_admin_t self:process signal;
 allow bacula_admin_t self:tcp_socket create_stream_socket_perms;
 allow bacula_admin_t self:dgram_socket_class_set create_socket_perms;
 
 read_files_pattern(bacula_admin_t, bacula_etc_t, bacula_etc_t)
 
+corenet_all_recvfrom_unlabeled(bacula_admin_t)
+corenet_all_recvfrom_netlabel(bacula_admin_t)
+corenet_tcp_sendrecv_generic_if(bacula_admin_t)
+corenet_tcp_sendrecv_generic_node(bacula_admin_t)
+corenet_tcp_sendrecv_all_ports(bacula_admin_t)
+corenet_tcp_bind_generic_node(bacula_admin_t)
+
+corenet_sendrecv_hplip_client_packets(bacula_admin_t)
 corenet_tcp_connect_hplip_port(bacula_admin_t)
-corenet_udp_sendrecv_hplip_port(bacula_admin_t)
 
 domain_use_interactive_fds(bacula_admin_t)
 
@@ -117,4 +156,3 @@
 
 userdom_dontaudit_search_user_home_dirs(bacula_admin_t)
 userdom_use_user_ptys(bacula_admin_t)
-
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bcfg2.fc refpolicy/policy/modules/contrib/bcfg2.fc
--- refpolicy/policy/modules/contrib/bcfg2.fc	2012-07-10 14:14:31.000000000 +0200
+++ refpolicy/policy/modules/contrib/bcfg2.fc	2012-09-27 20:03:30.732126498 +0200
@@ -1,7 +1,7 @@
-/etc/rc\.d/init\.d/bcfg2					--	gen_context(system_u:object_r:bcfg2_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/bcfg2-server	--	gen_context(system_u:object_r:bcfg2_initrc_exec_t,s0)
 
-/usr/sbin/bcfg2-server						--	gen_context(system_u:object_r:bcfg2_exec_t,s0)
+/usr/sbin/bcfg2-server	--	gen_context(system_u:object_r:bcfg2_exec_t,s0)
 
-/var/lib/bcfg2(/.*)?							gen_context(system_u:object_r:bcfg2_var_lib_t,s0)
+/var/lib/bcfg2(/.*)?	gen_context(system_u:object_r:bcfg2_var_lib_t,s0)
 
-/var/run/bcfg2-server\.pid					--	gen_context(system_u:object_r:bcfg2_var_run_t,s0)
+/var/run/bcfg2-server\.pid	--	gen_context(system_u:object_r:bcfg2_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bcfg2.if refpolicy/policy/modules/contrib/bcfg2.if
--- refpolicy/policy/modules/contrib/bcfg2.if	2012-07-10 14:14:31.000000000 +0200
+++ refpolicy/policy/modules/contrib/bcfg2.if	2012-09-27 20:03:30.732126498 +0200
@@ -1,8 +1,8 @@
-## <summary>bcfg2-server daemon which serves configurations to clients based on the data in its repository</summary>
+## <summary>configuration management suite.</summary>
 
 ########################################
 ## <summary>
-##	Execute bcfg2 in the bcfg2 domain..
+##	Execute bcfg2 in the bcfg2 domain.
 ## </summary>
 ## <param name="domain">
 ## <summary>
@@ -25,7 +25,7 @@
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain allowed to transition.
 ##	</summary>
 ## </param>
 #
@@ -77,7 +77,8 @@
 
 ########################################
 ## <summary>
-##	Manage bcfg2 lib files.
+##	Create, read, write, and delete
+##	bcfg2 lib files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -96,7 +97,8 @@
 
 ########################################
 ## <summary>
-##	Manage bcfg2 lib directories.
+##	Create, read, write, and delete
+##	bcfg2 lib directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -115,8 +117,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an bcfg2 environment
+##	All of the rules required to
+##	administrate an bcfg2 environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -132,9 +134,8 @@
 #
 interface(`bcfg2_admin',`
 	gen_require(`
-		type bcfg2_t;
-		type bcfg2_initrc_exec_t;
-		type bcfg2_var_lib_t;
+		type bcfg2_t, bcfg2_initrc_exec_t, bcfg2_var_lib_t;
+		type bcfg2_var_run_t;
 	')
 
 	allow $1 bcfg2_t:process { ptrace signal_perms };
@@ -145,6 +146,9 @@
 	role_transition $2 bcfg2_initrc_exec_t system_r;
 	allow $2 system_r;
 
+	files_search_pids($1)
+	admin_pattern($1, bcfg2_var_run_t)
+
 	files_search_var_lib($1)
 	admin_pattern($1, bcfg2_var_lib_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bcfg2.te refpolicy/policy/modules/contrib/bcfg2.te
--- refpolicy/policy/modules/contrib/bcfg2.te	2012-07-10 14:14:31.000000000 +0200
+++ refpolicy/policy/modules/contrib/bcfg2.te	2012-09-27 20:03:30.732126498 +0200
@@ -1,4 +1,4 @@
-policy_module(bcfg2, 1.0.0)
+policy_module(bcfg2, 1.0.1)
 
 ########################################
 #
@@ -20,22 +20,32 @@
 
 ########################################
 #
-# bcfg2 local policy
+# Local policy
 #
 
 allow bcfg2_t self:fifo_file rw_fifo_file_perms;
-allow bcfg2_t self:tcp_socket create_stream_socket_perms;
-allow bcfg2_t self:unix_stream_socket { connectto create_stream_socket_perms };
+allow bcfg2_t self:tcp_socket { accept listen };
+allow bcfg2_t self:unix_stream_socket { accept connectto listen };
 
 manage_dirs_pattern(bcfg2_t, bcfg2_var_lib_t, bcfg2_var_lib_t)
 manage_files_pattern(bcfg2_t, bcfg2_var_lib_t, bcfg2_var_lib_t)
-files_var_lib_filetrans(bcfg2_t, bcfg2_var_lib_t, dir )
+files_var_lib_filetrans(bcfg2_t, bcfg2_var_lib_t, dir)
 
 manage_files_pattern(bcfg2_t, bcfg2_var_run_t, bcfg2_var_run_t)
-files_pid_filetrans(bcfg2_t, bcfg2_var_run_t, file )
+files_pid_filetrans(bcfg2_t, bcfg2_var_run_t, file)
 
 kernel_read_system_state(bcfg2_t)
 
+corenet_all_recvfrom_unlabeled(bcfg2_t)
+corenet_all_recvfrom_netlabel(bcfg2_t)
+corenet_tcp_sendrecv_generic_if(bcfg2_t)
+corenet_tcp_sendrecv_generic_node(bcfg2_t)
+corenet_tcp_bind_generic_node(bcfg2_t)
+
+corenet_sendrecv_cyphesis_server_packets(bcfg2_t)
+corenet_tcp_bind_cyphesis_port(bcfg2_t)
+corenet_tcp_sendrecv_cyphesis_port(bcfg2_t)
+
 corecmd_exec_bin(bcfg2_t)
 
 dev_read_urand(bcfg2_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bind.fc refpolicy/policy/modules/contrib/bind.fc
--- refpolicy/policy/modules/contrib/bind.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/bind.fc	2012-09-27 20:03:30.732126498 +0200
@@ -1,63 +1,54 @@
-/etc/rc\.d/init\.d/named --	gen_context(system_u:object_r:named_initrc_exec_t,s0)
-/etc/rc\.d/init\.d/unbound --	gen_context(system_u:object_r:named_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/named	--	gen_context(system_u:object_r:named_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/unbound	--	gen_context(system_u:object_r:named_initrc_exec_t,s0)
 
-/etc/rndc.*		--	gen_context(system_u:object_r:named_conf_t,s0)
-/etc/rndc\.key 		-- 	gen_context(system_u:object_r:dnssec_t,s0)
-/etc/unbound(/.*)?		gen_context(system_u:object_r:named_conf_t,s0)
+/etc/bind(/.*)?	gen_context(system_u:object_r:named_zone_t,s0)
+/etc/bind/named\.conf.*	--	gen_context(system_u:object_r:named_conf_t,s0)
+/etc/bind/rndc\.key	--	gen_context(system_u:object_r:dnssec_t,s0)
+/etc/dnssec-trigger/dnssec_trigger_server\.key	--	gen_context(system_u:object_r:dnssec_t,s0)
+/etc/named\.rfc1912\.zones	--	gen_context(system_u:object_r:named_conf_t,s0)
+/etc/named\.root\.hints	--	gen_context(system_u:object_r:named_conf_t,s0)
+/etc/named\.conf	--	gen_context(system_u:object_r:named_conf_t,s0)
+/etc/named\.caching-nameserver\.conf	--	gen_context(system_u:object_r:named_conf_t,s0)
+/etc/rndc.*	--	gen_context(system_u:object_r:named_conf_t,s0)
+/etc/rndc\.key	--	gen_context(system_u:object_r:dnssec_t,s0)
+/etc/unbound(/.*)?	gen_context(system_u:object_r:named_conf_t,s0)
+/etc/unbound/.*\.key	--	gen_context(system_u:object_r:dnssec_t,s0)
 
 /usr/sbin/lwresd	--	gen_context(system_u:object_r:named_exec_t,s0)
-/usr/sbin/named		--	gen_context(system_u:object_r:named_exec_t,s0)
-/usr/sbin/named-checkconf --	gen_context(system_u:object_r:named_checkconf_exec_t,s0)
-/usr/sbin/r?ndc		--	gen_context(system_u:object_r:ndc_exec_t,s0)
+/usr/sbin/named	--	gen_context(system_u:object_r:named_exec_t,s0)
+/usr/sbin/named-checkconf	--	gen_context(system_u:object_r:named_checkconf_exec_t,s0)
+/usr/sbin/r?ndc	--	gen_context(system_u:object_r:ndc_exec_t,s0)
 /usr/sbin/unbound	--	gen_context(system_u:object_r:named_exec_t,s0)
 
-/var/log/named.*	--	gen_context(system_u:object_r:named_log_t,s0)
+/var/bind(/.*)?	gen_context(system_u:object_r:named_cache_t,s0)
+/var/bind/pri(/.*)?	gen_context(system_u:object_r:named_zone_t,s0)
 
-/var/run/ndc		-s	gen_context(system_u:object_r:named_var_run_t,s0)
-/var/run/bind(/.*)?		gen_context(system_u:object_r:named_var_run_t,s0)
-/var/run/named(/.*)?		gen_context(system_u:object_r:named_var_run_t,s0)
-/var/run/unbound(/.*)?		gen_context(system_u:object_r:named_var_run_t,s0)
-
-ifdef(`distro_debian',`
-/etc/bind(/.*)?			gen_context(system_u:object_r:named_zone_t,s0)
-/etc/bind/named\.conf	--	gen_context(system_u:object_r:named_conf_t,s0)
-/etc/bind/named\.conf\.local --	gen_context(system_u:object_r:named_conf_t,s0)
-/etc/bind/named\.conf\.options -- gen_context(system_u:object_r:named_conf_t,s0)
-/etc/bind/rndc\.key	--	gen_context(system_u:object_r:dnssec_t,s0)
-/var/cache/bind(/.*)?		gen_context(system_u:object_r:named_cache_t,s0)
-')
+/var/cache/bind(/.*)?	gen_context(system_u:object_r:named_cache_t,s0)
 
-ifdef(`distro_gentoo',`
-/etc/bind(/.*)?			gen_context(system_u:object_r:named_zone_t,s0)
-/etc/bind/named\.conf	--	gen_context(system_u:object_r:named_conf_t,s0)
-/etc/bind/rndc\.key	--	gen_context(system_u:object_r:dnssec_t,s0)
-/var/bind(/.*)?			gen_context(system_u:object_r:named_cache_t,s0)
-/var/bind/pri(/.*)?		gen_context(system_u:object_r:named_zone_t,s0)
-')
+/var/log/named.*	--	gen_context(system_u:object_r:named_log_t,s0)
 
-ifdef(`distro_redhat',`
-/etc/named\.rfc1912.zones --	gen_context(system_u:object_r:named_conf_t,s0)
-/etc/named\.root\.hints	--	gen_context(system_u:object_r:named_conf_t,s0)
-/etc/named\.conf	--	gen_context(system_u:object_r:named_conf_t,s0)
-/etc/named\.caching-nameserver\.conf -- gen_context(system_u:object_r:named_conf_t,s0)
-/var/named(/.*)?		gen_context(system_u:object_r:named_zone_t,s0)
-/var/named/slaves(/.*)?		gen_context(system_u:object_r:named_cache_t,s0)
-/var/named/data(/.*)?		gen_context(system_u:object_r:named_cache_t,s0)
+/var/named(/.*)?	gen_context(system_u:object_r:named_zone_t,s0)
+/var/named/slaves(/.*)?	gen_context(system_u:object_r:named_cache_t,s0)
+/var/named/data(/.*)?	gen_context(system_u:object_r:named_cache_t,s0)
 /var/named/named\.ca	--	gen_context(system_u:object_r:named_conf_t,s0)
-/var/named/chroot(/.*)?		gen_context(system_u:object_r:named_conf_t,s0)
-/var/named/chroot/etc/rndc\.key -- gen_context(system_u:object_r:dnssec_t,s0)
-/var/named/chroot/etc/named\.conf -- gen_context(system_u:object_r:named_conf_t,s0)
-/var/named/chroot/etc/named\.rfc1912.zones -- gen_context(system_u:object_r:named_conf_t,s0)
-/var/named/chroot/etc/named\.root\.hints -- gen_context(system_u:object_r:named_conf_t,s0)
-/var/named/chroot/etc/named\.caching-nameserver\.conf -- gen_context(system_u:object_r:named_conf_t,s0)
+/var/named/chroot(/.*)?	gen_context(system_u:object_r:named_conf_t,s0)
+/var/named/chroot/etc/rndc\.key	--	gen_context(system_u:object_r:dnssec_t,s0)
+/var/named/chroot/etc/named\.conf	--	gen_context(system_u:object_r:named_conf_t,s0)
+/var/named/chroot/etc/named\.rfc1912\.zones	--	gen_context(system_u:object_r:named_conf_t,s0)
+/var/named/chroot/etc/named\.root\.hints	--	gen_context(system_u:object_r:named_conf_t,s0)
+/var/named/chroot/etc/named\.caching-nameserver\.conf	--	gen_context(system_u:object_r:named_conf_t,s0)
 /var/named/chroot/proc(/.*)?	<<none>>
-/var/named/chroot/var/run/named.* gen_context(system_u:object_r:named_var_run_t,s0)
-/var/named/chroot/var/tmp(/.*)? gen_context(system_u:object_r:named_cache_t,s0)
-/var/named/chroot/var/named(/.*)? gen_context(system_u:object_r:named_zone_t,s0)
-/var/named/chroot/var/named/slaves(/.*)? gen_context(system_u:object_r:named_cache_t,s0)
-/var/named/chroot/var/named/data(/.*)? gen_context(system_u:object_r:named_cache_t,s0)
+/var/named/chroot/var/run/named.*	gen_context(system_u:object_r:named_var_run_t,s0)
+/var/named/chroot/var/tmp(/.*)?	gen_context(system_u:object_r:named_cache_t,s0)
+/var/named/chroot/var/named(/.*)?	gen_context(system_u:object_r:named_zone_t,s0)
+/var/named/chroot/var/named/slaves(/.*)?	gen_context(system_u:object_r:named_cache_t,s0)
+/var/named/chroot/var/named/data(/.*)?	gen_context(system_u:object_r:named_cache_t,s0)
 /var/named/chroot/var/named/dynamic(/.*)?	gen_context(system_u:object_r:named_cache_t,s0)
-/var/named/chroot/var/named/named\.ca -- gen_context(system_u:object_r:named_conf_t,s0)
+/var/named/chroot/var/named/named\.ca	--	gen_context(system_u:object_r:named_conf_t,s0)
 /var/named/chroot/var/log/named.*	--	gen_context(system_u:object_r:named_log_t,s0)
-/var/named/dynamic(/.*)?		gen_context(system_u:object_r:named_cache_t,s0)
-')
+/var/named/dynamic(/.*)?	gen_context(system_u:object_r:named_cache_t,s0)
+
+/var/run/ndc	-s	gen_context(system_u:object_r:named_var_run_t,s0)
+/var/run/bind(/.*)?	gen_context(system_u:object_r:named_var_run_t,s0)
+/var/run/named(/.*)?	gen_context(system_u:object_r:named_var_run_t,s0)
+/var/run/unbound(/.*)?	gen_context(system_u:object_r:named_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bind.if refpolicy/policy/modules/contrib/bind.if
--- refpolicy/policy/modules/contrib/bind.if	2012-09-28 19:56:54.166040257 +0200
+++ refpolicy/policy/modules/contrib/bind.if	2012-09-27 20:03:30.732126498 +0200
@@ -1,4 +1,4 @@
-## <summary>Berkeley internet name domain DNS server.</summary>
+## <summary>Berkeley Internet name domain DNS server.</summary>
 
 ########################################
 ## <summary>
@@ -33,12 +33,13 @@
 		type ndc_t, ndc_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, ndc_exec_t, ndc_t)
 ')
 
 ########################################
 ## <summary>
-##	Send generic signals to BIND.
+##	Send generic signals to bind.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -56,7 +57,7 @@
 
 ########################################
 ## <summary>
-##	Send null sigals to BIND.
+##	Send null signals to bind.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -74,7 +75,7 @@
 
 ########################################
 ## <summary>
-##	Send BIND the kill signal
+##	Send kill signals to bind.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -109,11 +110,11 @@
 #
 interface(`bind_run_ndc',`
 	gen_require(`
-		type ndc_t;
+		attribute_role ndc_roles;
 	')
 
 	bind_domtrans_ndc($1)
-	role $2 types ndc_t;
+	roleattribute $2 ndc_roles;
 ')
 
 ########################################
@@ -131,12 +132,13 @@
 		type named_t, named_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, named_exec_t, named_t)
 ')
 
 ########################################
 ## <summary>
-##	Read DNSSEC keys.
+##	Read dnssec key files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -154,7 +156,7 @@
 
 ########################################
 ## <summary>
-##	Read BIND named configuration files.
+##	Read bind named configuration files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -172,7 +174,7 @@
 
 ########################################
 ## <summary>
-##	Write BIND named configuration files.
+##	Write bind named configuration files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -186,13 +188,13 @@
 	')
 
 	write_files_pattern($1, named_conf_t, named_conf_t)
-	allow $1 named_conf_t:file setattr;
+	allow $1 named_conf_t:file setattr_file_perms;
 ')
 
 ########################################
 ## <summary>
 ##	Create, read, write, and delete
-##	BIND configuration directories.
+##	bind configuration directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -210,7 +212,7 @@
 
 ########################################
 ## <summary>
-##	Search the BIND cache directory.
+##	Search bind cache directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -232,7 +234,7 @@
 ########################################
 ## <summary>
 ##	Create, read, write, and delete
-##	BIND cache files.
+##	bind cache files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -253,7 +255,7 @@
 
 ########################################
 ## <summary>
-##	Set the attributes of the BIND pid directory.
+##	Set attributes of bind pid directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -266,12 +268,12 @@
 		type named_var_run_t;
 	')
 
-	allow $1 named_var_run_t:dir setattr;
+	allow $1 named_var_run_t:dir setattr_dir_perms;
 ')
 
 ########################################
 ## <summary>
-##	Set the attributes of the BIND zone directory.
+##	Set attributes of bind zone directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -284,12 +286,12 @@
 		type named_zone_t;
 	')
 
-	allow $1 named_zone_t:dir setattr;
+	allow $1 named_zone_t:dir setattr_dir_perms;
 ')
 
 ########################################
 ## <summary>
-##	Read BIND zone files.
+##	Read bind zone files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -308,7 +310,8 @@
 
 ########################################
 ## <summary>
-##	Manage BIND zone files.
+##	Create, read, write, and delete
+##	bind zone files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -341,8 +344,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an bind environment
+##	All of the rules required to
+##	administrate an bind environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -351,7 +354,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the bind domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -360,18 +363,12 @@
 	gen_require(`
 		type named_t, named_tmp_t, named_log_t;
 		type named_conf_t, named_var_run_t;
-		type named_cache_t, named_zone_t;
+		type named_cache_t, named_zone_t, named_initrc_exec_t;
 		type dnssec_t, ndc_t;
-		type named_initrc_exec_t;
 	')
 
-	allow $1 named_t:process { ptrace signal_perms };
-	ps_process_pattern($1, named_t)
-
-	allow $1 ndc_t:process { ptrace signal_perms };
-	ps_process_pattern($1, ndc_t)
-
-	bind_run_ndc($1, $2)
+	allow $1 { named_t ndc_t }:process { ptrace signal_perms };
+	ps_process_pattern($1, { named_t ndc_t })
 
 	init_labeled_script_domtrans($1, named_initrc_exec_t)
 	domain_system_change_exemption($1)
@@ -387,10 +384,10 @@
 	files_list_etc($1)
 	admin_pattern($1, named_conf_t)
 
-	admin_pattern($1, named_cache_t)
-	admin_pattern($1, named_zone_t)
-	admin_pattern($1, dnssec_t)
+	admin_pattern($1, { dnssec_t named_cache_t named_zone_t })
 
 	files_list_pids($1)
 	admin_pattern($1, named_var_run_t)
+
+	bind_run_ndc($1, $2)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bind.te refpolicy/policy/modules/contrib/bind.te
--- refpolicy/policy/modules/contrib/bind.te	2012-07-10 14:45:57.000000000 +0200
+++ refpolicy/policy/modules/contrib/bind.te	2012-09-27 20:03:30.732126498 +0200
@@ -1,4 +1,4 @@
-policy_module(bind, 1.11.0)
+policy_module(bind, 1.12.5)
 
 ########################################
 #
@@ -6,26 +6,33 @@
 #
 
 ## <desc>
-## <p>
-## Allow BIND to write the master zone files.
-## Generally this is used for dynamic DNS or zone transfers.
-## </p>
+##	<p>
+##	Determine whether Bind can bind tcp socket to http ports.
+##	</p>
+## </desc>
+gen_tunable(named_tcp_bind_http_port, false)
+
+## <desc>
+##	<p>
+##	Determine whether Bind can write to master zone files.
+##	Generally this is used for dynamic DNS or zone transfers.
+##	</p>
 ## </desc>
 gen_tunable(named_write_master_zones, false)
 
-# for DNSSEC key files
+attribute_role ndc_roles;
+
 type dnssec_t;
 files_security_file(dnssec_t)
+files_mountpoint(dnssec_t)
 
 type named_t;
 type named_exec_t;
 init_daemon_domain(named_t, named_exec_t)
-role system_r types named_t;
 
 type named_checkconf_exec_t;
 init_system_domain(named_t, named_checkconf_exec_t)
 
-# A type for configuration files of named.
 type named_conf_t;
 files_type(named_conf_t)
 files_mountpoint(named_conf_t)
@@ -53,47 +60,45 @@
 type ndc_t;
 type ndc_exec_t;
 init_system_domain(ndc_t, ndc_exec_t)
-role system_r types ndc_t;
+role ndc_roles types ndc_t;
 
 ########################################
 #
-# Named local policy
+# Local policy
 #
 
 allow named_t self:capability { chown dac_override fowner setgid setuid sys_chroot sys_nice sys_resource };
 dontaudit named_t self:capability sys_tty_config;
 allow named_t self:process { setsched getcap setcap setrlimit signal_perms };
 allow named_t self:fifo_file rw_fifo_file_perms;
-allow named_t self:unix_stream_socket create_stream_socket_perms;
-allow named_t self:unix_dgram_socket create_socket_perms;
-allow named_t self:tcp_socket create_stream_socket_perms;
-allow named_t self:udp_socket create_socket_perms;
+allow named_t self:unix_stream_socket { accept listen };
+allow named_t self:tcp_socket { accept listen };
 
 allow named_t dnssec_t:file read_file_perms;
 
-# read configuration
 allow named_t named_conf_t:dir list_dir_perms;
 read_files_pattern(named_t, named_conf_t, named_conf_t)
 read_lnk_files_pattern(named_t, named_conf_t, named_conf_t)
 
-# write cache for secondary zones
 manage_files_pattern(named_t, named_cache_t, named_cache_t)
 manage_lnk_files_pattern(named_t, named_cache_t, named_cache_t)
 
 can_exec(named_t, named_exec_t)
 
-manage_files_pattern(named_t, named_log_t, named_log_t)
-logging_log_filetrans(named_t, named_log_t, { file dir })
+append_files_pattern(named_t, named_log_t, named_log_t)
+create_files_pattern(named_t, named_log_t, named_log_t)
+setattr_files_pattern(named_t, named_log_t, named_log_t)
+logging_log_filetrans(named_t, named_log_t, file)
 
 manage_dirs_pattern(named_t, named_tmp_t, named_tmp_t)
 manage_files_pattern(named_t, named_tmp_t, named_tmp_t)
 files_tmp_filetrans(named_t, named_tmp_t, { file dir })
 
+manage_dirs_pattern(named_t, named_var_run_t, named_var_run_t)
 manage_files_pattern(named_t, named_var_run_t, named_var_run_t)
 manage_sock_files_pattern(named_t, named_var_run_t, named_var_run_t)
-files_pid_filetrans(named_t, named_var_run_t, { file sock_file })
+files_pid_filetrans(named_t, named_var_run_t, { dir file sock_file })
 
-# read zone files
 allow named_t named_zone_t:dir list_dir_perms;
 read_files_pattern(named_t, named_zone_t, named_zone_t)
 read_lnk_files_pattern(named_t, named_zone_t, named_zone_t)
@@ -110,20 +115,25 @@
 corenet_udp_sendrecv_generic_if(named_t)
 corenet_tcp_sendrecv_generic_node(named_t)
 corenet_udp_sendrecv_generic_node(named_t)
-corenet_tcp_sendrecv_all_ports(named_t)
-corenet_udp_sendrecv_all_ports(named_t)
 corenet_tcp_bind_generic_node(named_t)
 corenet_udp_bind_generic_node(named_t)
+
+corenet_sendrecv_all_server_packets(named_t)
 corenet_tcp_bind_dns_port(named_t)
 corenet_udp_bind_dns_port(named_t)
+corenet_tcp_sendrecv_dns_port(named_t)
+corenet_udp_sendrecv_dns_port(named_t)
+
 corenet_tcp_bind_rndc_port(named_t)
-corenet_tcp_connect_all_ports(named_t)
-corenet_sendrecv_dns_server_packets(named_t)
-corenet_sendrecv_dns_client_packets(named_t)
-corenet_sendrecv_rndc_server_packets(named_t)
-corenet_sendrecv_rndc_client_packets(named_t)
+corenet_tcp_sendrecv_rndc_port(named_t)
+
 corenet_dontaudit_udp_bind_all_reserved_ports(named_t)
 corenet_udp_bind_all_unreserved_ports(named_t)
+corenet_udp_sendrecv_all_ports(named_t)
+
+corenet_sendrecv_all_client_packets(named_t)
+corenet_tcp_connect_all_ports(named_t)
+corenet_tcp_sendrecv_all_ports(named_t)
 
 dev_read_sysfs(named_t)
 dev_read_rand(named_t)
@@ -131,7 +141,6 @@
 
 domain_use_interactive_fds(named_t)
 
-files_read_etc_files(named_t)
 files_read_etc_runtime_files(named_t)
 
 fs_getattr_all_fs(named_t)
@@ -141,12 +150,18 @@
 
 logging_send_syslog_msg(named_t)
 
-miscfiles_read_localization(named_t)
 miscfiles_read_generic_certs(named_t)
+miscfiles_read_localization(named_t)
 
 userdom_dontaudit_use_unpriv_user_fds(named_t)
 userdom_dontaudit_search_user_home_dirs(named_t)
 
+tunable_policy(`named_tcp_bind_http_port',`
+	corenet_sendrecv_http_server_packets(named_t)
+	corenet_tcp_bind_http_port(named_t)
+	corenet_tcp_sendrecv_http_port(named_t)
+')
+
 tunable_policy(`named_write_master_zones',`
 	manage_dirs_pattern(named_t, named_zone_t, named_zone_t)
 	manage_files_pattern(named_t, named_zone_t, named_zone_t)
@@ -171,14 +186,10 @@
 ')
 
 optional_policy(`
-	# needed by FreeIPA with DNS support
 	ldap_stream_connect(named_t)
 ')
 
 optional_policy(`
-	# this seems like fds that arent being
-	# closed. these should probably be
-	# dontaudits instead.
 	networkmanager_rw_udp_sockets(named_t)
 	networkmanager_rw_packet_sockets(named_t)
 	networkmanager_rw_routing_sockets(named_t)
@@ -197,25 +208,23 @@
 # NDC local policy
 #
 
-# cjp: why net_admin?!
 allow ndc_t self:capability { dac_override net_admin };
-allow ndc_t self:process { fork signal_perms };
+allow ndc_t self:process signal_perms;
 allow ndc_t self:fifo_file rw_fifo_file_perms;
-allow ndc_t self:unix_stream_socket { connect create_stream_socket_perms };
-allow ndc_t self:tcp_socket create_socket_perms;
-allow ndc_t self:netlink_route_socket r_netlink_socket_perms;
+allow ndc_t self:unix_stream_socket { accept listen };
 
 allow ndc_t dnssec_t:file read_file_perms;
-allow ndc_t dnssec_t:lnk_file { getattr read };
+allow ndc_t dnssec_t:lnk_file read_lnk_file_perms;
 
 stream_connect_pattern(ndc_t, named_var_run_t, named_var_run_t, named_t)
 
 allow ndc_t named_conf_t:file read_file_perms;
-allow ndc_t named_conf_t:lnk_file { getattr read };
+allow ndc_t named_conf_t:lnk_file read_lnk_file_perms;
 
 allow ndc_t named_zone_t:dir search_dir_perms;
 
 kernel_read_kernel_sysctls(ndc_t)
+kernel_read_system_state(ndc_t)
 
 corenet_all_recvfrom_unlabeled(ndc_t)
 corenet_all_recvfrom_netlabel(ndc_t)
@@ -223,16 +232,20 @@
 corenet_tcp_sendrecv_generic_node(ndc_t)
 corenet_tcp_sendrecv_all_ports(ndc_t)
 corenet_tcp_bind_generic_node(ndc_t)
+
 corenet_tcp_connect_rndc_port(ndc_t)
 corenet_sendrecv_rndc_client_packets(ndc_t)
 
 domain_use_interactive_fds(ndc_t)
 
-files_read_etc_files(ndc_t)
 files_search_pids(ndc_t)
 
 fs_getattr_xattr_fs(ndc_t)
 
+term_dontaudit_use_console(ndc_t)
+
+auth_use_nsswitch(ndc_t)
+
 init_use_fds(ndc_t)
 init_use_script_ptys(ndc_t)
 
@@ -240,24 +253,10 @@
 
 miscfiles_read_localization(ndc_t)
 
-sysnet_read_config(ndc_t)
-sysnet_dns_name_resolve(ndc_t)
-
 userdom_use_user_terminals(ndc_t)
 
-term_dontaudit_use_console(ndc_t)
-
-# for /etc/rndc.key
 ifdef(`distro_redhat',`
-	allow ndc_t named_conf_t:dir search;
-')
-
-optional_policy(`
-	nis_use_ypbind(ndc_t)
-')
-
-optional_policy(`
-	nscd_socket_use(ndc_t)
+	allow ndc_t named_conf_t:dir search_dir_perms;
 ')
 
 optional_policy(`
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bird.fc refpolicy/policy/modules/contrib/bird.fc
--- refpolicy/policy/modules/contrib/bird.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/bird.fc	2012-08-08 20:44:02.974852881 +0200
@@ -0,0 +1,11 @@
+/etc/bird\.conf	--	gen_context(system_u:object_r:bird_etc_t,s0)
+
+/etc/default/bird	--	gen_context(system_u:object_r:bird_etc_t,s0)
+
+/etc/rc\.d/init\.d/bird	--	gen_context(system_u:object_r:bird_initrc_exec_t,s0)
+
+/usr/sbin/bird	--	gen_context(system_u:object_r:bird_exec_t,s0)
+
+/var/log/bird\.log.*	--	gen_context(system_u:object_r:bird_log_t,s0)
+
+/var/run/bird\.ctl	-s	gen_context(system_u:object_r:bird_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bird.if refpolicy/policy/modules/contrib/bird.if
--- refpolicy/policy/modules/contrib/bird.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/bird.if	2012-09-27 20:03:30.732126498 +0200
@@ -0,0 +1,42 @@
+## <summary>BIRD Internet Routing Daemon.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an bird environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`bird_admin',`
+	gen_require(`
+		type bird_t, bird_etc_t, bird_log_t;
+		type bird_var_run_t, bird_initrc_exec_t;
+	')
+
+	allow $1 bird_t:process { ptrace signal_perms };
+	ps_process_pattern($1, bird_t)
+
+	init_labeled_script_domtrans($1, bird_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 bird_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_list_etc($1)
+	admin_pattern($1, bird_etc_t)
+
+	logging_list_logs($1)
+	admin_pattern($1, bird_log_t)
+
+	files_list_pids($1)
+	admin_pattern($1, bird_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bird.te refpolicy/policy/modules/contrib/bird.te
--- refpolicy/policy/modules/contrib/bird.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/bird.te	2012-09-27 20:03:30.733126498 +0200
@@ -0,0 +1,58 @@
+policy_module(bird, 1.0.1)
+
+########################################
+#
+# Declarations
+#
+
+type bird_t;
+type bird_exec_t;
+init_daemon_domain(bird_t, bird_exec_t)
+
+type bird_initrc_exec_t;
+init_script_file(bird_initrc_exec_t)
+
+type bird_etc_t;
+files_config_file(bird_etc_t)
+
+type bird_log_t;
+logging_log_file(bird_log_t)
+
+type bird_var_run_t;
+files_pid_file(bird_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow bird_t self:capability { net_admin net_bind_service };
+allow bird_t self:netlink_route_socket create_netlink_socket_perms;
+allow bird_t self:tcp_socket create_stream_socket_perms;
+
+allow bird_t bird_etc_t:file read_file_perms;
+
+allow bird_t bird_log_t:file { create_file_perms append_file_perms setattr_file_perms };
+logging_log_filetrans(bird_t, bird_log_t, file)
+
+allow bird_t bird_var_run_t:sock_file manage_sock_file_perms;
+files_pid_filetrans(bird_t, bird_var_run_t, sock_file)
+
+corenet_all_recvfrom_unlabeled(bird_t)
+corenet_all_recvfrom_netlabel(bird_t)
+corenet_tcp_sendrecv_generic_if(bird_t)
+corenet_tcp_bind_generic_node(bird_t)
+corenet_tcp_sendrecv_generic_node(bird_t)
+
+corenet_sendrecv_bgp_client_packets(bird_t)
+corenet_sendrecv_bgp_server_packets(bird_t)
+corenet_tcp_bind_bgp_port(bird_t)
+corenet_tcp_connect_bgp_port(bird_t)
+corenet_tcp_sendrecv_bgp_port(bird_t)
+
+# /etc/iproute2/rt_realms
+files_read_etc_files(bird_t)
+
+logging_send_syslog_msg(bird_t)
+
+miscfiles_read_localization(bird_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bitlbee.fc refpolicy/policy/modules/contrib/bitlbee.fc
--- refpolicy/policy/modules/contrib/bitlbee.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/bitlbee.fc	2012-09-27 20:03:30.733126498 +0200
@@ -1,6 +1,14 @@
-/etc/rc\.d/init\.d/bitlbee --	gen_context(system_u:object_r:bitlbee_initrc_exec_t,s0)
-/etc/bitlbee(/.*)?		gen_context(system_u:object_r:bitlbee_conf_t,s0)
+/etc/bitlbee(/.*)?	gen_context(system_u:object_r:bitlbee_conf_t,s0)
 
+/etc/rc\.d/init\.d/bitlbee	--	gen_context(system_u:object_r:bitlbee_initrc_exec_t,s0)
+
+/usr/bin/bip	--	gen_context(system_u:object_r:bitlbee_exec_t,s0)
 /usr/sbin/bitlbee	--	gen_context(system_u:object_r:bitlbee_exec_t,s0)
 
-/var/lib/bitlbee(/.*)?		gen_context(system_u:object_r:bitlbee_var_t,s0)
+/var/lib/bitlbee(/.*)?	gen_context(system_u:object_r:bitlbee_var_t,s0)
+
+/var/log/bip(/.*)?	gen_context(system_u:object_r:bitlbee_log_t,s0)
+
+/var/run/bitlbee\.pid	--	gen_context(system_u:object_r:bitlbee_var_run_t,s0)
+/var/run/bitlbee\.sock	-s	gen_context(system_u:object_r:bitlbee_var_run_t,s0)
+/var/run/bip(/.*)?	gen_context(system_u:object_r:bitlbee_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bitlbee.if refpolicy/policy/modules/contrib/bitlbee.if
--- refpolicy/policy/modules/contrib/bitlbee.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/bitlbee.if	2012-09-27 20:03:30.733126498 +0200
@@ -1,12 +1,12 @@
-## <summary>Bitlbee service</summary>
+## <summary>Tunnels instant messaging traffic to a virtual IRC channel.</summary>
 
 ########################################
 ## <summary>
-##	Read bitlbee configuration files
+##	Read bitlbee configuration files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed accesss.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
@@ -22,8 +22,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an bitlbee environment
+##	All of the rules required to
+##	administrate an bitlbee environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -32,7 +32,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the bitlbee domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -40,7 +40,8 @@
 interface(`bitlbee_admin',`
 	gen_require(`
 		type bitlbee_t, bitlbee_conf_t, bitlbee_var_t;
-		type bitlbee_initrc_exec_t;
+		type bitlbee_initrc_exec_t, bitlbee_var_run_t;
+		type bitlbee_log_t, bitlbee_tmp_t;
 	')
 
 	allow $1 bitlbee_t:process { ptrace signal_perms };
@@ -51,9 +52,18 @@
 	role_transition $2 bitlbee_initrc_exec_t system_r;
 	allow $2 system_r;
 
-	files_list_etc($1)
+	files_search_etc($1)
 	admin_pattern($1, bitlbee_conf_t)
 
-	files_list_var($1)
+	logging_search_logs($1)
+	admin_pattern($1, bitlbee_log_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, bitlbee_tmp_t)
+
+	files_search_pids($1)
+	admin_pattern($1, bitlbee_var_run_t)
+
+	files_search_var_lib($1)
 	admin_pattern($1, bitlbee_var_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bitlbee.te refpolicy/policy/modules/contrib/bitlbee.te
--- refpolicy/policy/modules/contrib/bitlbee.te	2012-09-28 19:56:54.101040255 +0200
+++ refpolicy/policy/modules/contrib/bitlbee.te	2012-09-27 20:03:30.733126498 +0200
@@ -1,4 +1,4 @@
-policy_module(bitlbee, 1.4.0)
+policy_module(bitlbee, 1.4.3)
 
 ########################################
 #
@@ -21,60 +21,92 @@
 type bitlbee_var_t;
 files_type(bitlbee_var_t)
 
+type bitlbee_log_t;
+logging_log_file(bitlbee_log_t)
+
+type bitlbee_var_run_t;
+files_pid_file(bitlbee_var_run_t)
+
 ########################################
 #
 # Local policy
 #
 
-allow bitlbee_t self:capability { setgid setuid };
-allow bitlbee_t self:process signal;
-allow bitlbee_t self:udp_socket create_socket_perms;
-allow bitlbee_t self:tcp_socket { create_stream_socket_perms connected_stream_socket_perms };
-allow bitlbee_t self:unix_stream_socket create_stream_socket_perms;
+allow bitlbee_t self:capability { dac_override kill setgid setuid sys_nice };
+allow bitlbee_t self:process { setsched signal };
 allow bitlbee_t self:fifo_file rw_fifo_file_perms;
+allow bitlbee_t self:tcp_socket { accept listen };
+allow bitlbee_t self:unix_stream_socket { accept listen };
 
-bitlbee_read_config(bitlbee_t)
+allow bitlbee_t bitlbee_conf_t:dir list_dir_perms;
+allow bitlbee_t bitlbee_conf_t:file read_file_perms;
+
+manage_dirs_pattern(bitlbee_t, bitlbee_log_t, bitlbee_log_t)
+append_files_pattern(bitlbee_t, bitlbee_log_t, bitlbee_log_t)
+create_files_pattern(bitlbee_t, bitlbee_log_t, bitlbee_log_t)
+setattr_files_pattern(bitlbee_t, bitlbee_log_t, bitlbee_log_t)
 
-# tmp files
 manage_files_pattern(bitlbee_t, bitlbee_tmp_t, bitlbee_tmp_t)
-files_tmp_filetrans(bitlbee_t, bitlbee_tmp_t, file)
+manage_dirs_pattern(bitlbee_t, bitlbee_tmp_t, bitlbee_tmp_t)
+files_tmp_filetrans(bitlbee_t, bitlbee_tmp_t, { dir file })
 
-# user account information is read and edited at runtime; give the usual
-# r/w access to bitlbee_var_t
 manage_files_pattern(bitlbee_t, bitlbee_var_t, bitlbee_var_t)
 files_var_lib_filetrans(bitlbee_t, bitlbee_var_t, file)
 
+manage_dirs_pattern(bitlbee_t, bitlbee_var_run_t, bitlbee_var_run_t)
+manage_files_pattern(bitlbee_t, bitlbee_var_run_t, bitlbee_var_run_t)
+manage_sock_files_pattern(bitlbee_t, bitlbee_var_run_t, bitlbee_var_run_t)
+files_pid_filetrans(bitlbee_t, bitlbee_var_run_t, { dir file sock_file })
+
 kernel_read_system_state(bitlbee_t)
 
 corenet_all_recvfrom_unlabeled(bitlbee_t)
-corenet_udp_sendrecv_generic_if(bitlbee_t)
-corenet_udp_sendrecv_generic_node(bitlbee_t)
+corenet_all_recvfrom_netlabel(bitlbee_t)
 corenet_tcp_sendrecv_generic_if(bitlbee_t)
 corenet_tcp_sendrecv_generic_node(bitlbee_t)
-# Allow bitlbee to connect to jabber servers
+corenet_tcp_bind_generic_node(bitlbee_t)
+
+corenet_sendrecv_jabber_client_client_packets(bitlbee_t)
 corenet_tcp_connect_jabber_client_port(bitlbee_t)
 corenet_tcp_sendrecv_jabber_client_port(bitlbee_t)
-# to AIM servers:
+
+corenet_sendrecv_aol_client_packets(bitlbee_t)
 corenet_tcp_connect_aol_port(bitlbee_t)
 corenet_tcp_sendrecv_aol_port(bitlbee_t)
-# and to MMCC (Yahoo IM) servers:
+
+corenet_sendrecv_gatekeeper_client_packets(bitlbee_t)
+corenet_tcp_connect_gatekeeper_port(bitlbee_t)
+corenet_tcp_sendrecv_gatekeeper_port(bitlbee_t)
+
+corenet_sendrecv_mmcc_client_packets(bitlbee_t)
 corenet_tcp_connect_mmcc_port(bitlbee_t)
 corenet_tcp_sendrecv_mmcc_port(bitlbee_t)
-# and to MSNP (MSN Messenger) servers:
+
+corenet_sendrecv_msnp_client_packets(bitlbee_t)
 corenet_tcp_connect_msnp_port(bitlbee_t)
 corenet_tcp_sendrecv_msnp_port(bitlbee_t)
-# MSN can use passport auth, which is over http:
+
+corenet_sendrecv_http_client_packets(bitlbee_t)
 corenet_tcp_connect_http_port(bitlbee_t)
 corenet_tcp_sendrecv_http_port(bitlbee_t)
+
+corenet_sendrecv_http_cache_client_packets(bitlbee_t)
 corenet_tcp_connect_http_cache_port(bitlbee_t)
 corenet_tcp_sendrecv_http_cache_port(bitlbee_t)
 
+corenet_sendrecv_ircd_server_packets(bitlbee_t)
+corenet_tcp_bind_ircd_port(bitlbee_t)
+corenet_sendrecv_ircd_client_packets(bitlbee_t)
+corenet_tcp_connect_ircd_port(bitlbee_t)
+corenet_tcp_sendrecv_ircd_port(bitlbee_t)
+
+corenet_sendrecv_interwise_server_packets(bitlbee_t)
+corenet_tcp_bind_interwise_port(bitlbee_t)
+corenet_tcp_sendrecv_interwise_port(bitlbee_t)
+
 dev_read_rand(bitlbee_t)
 dev_read_urand(bitlbee_t)
 
-files_read_etc_files(bitlbee_t)
-files_search_pids(bitlbee_t)
-# grant read-only access to the user help files
 files_read_usr_files(bitlbee_t)
 
 libs_legacy_use_shared_libs(bitlbee_t)
@@ -85,13 +117,10 @@
 
 miscfiles_read_localization(bitlbee_t)
 
-sysnet_dns_name_resolve(bitlbee_t)
-
 optional_policy(`
 	inetd_tcp_service_domain(bitlbee_t, bitlbee_exec_t)
 ')
 
 optional_policy(`
-	# normally started from inetd using tcpwrappers, so use those entry points
 	tcpd_wrapped_domain(bitlbee_t, bitlbee_exec_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/blueman.fc refpolicy/policy/modules/contrib/blueman.fc
--- refpolicy/policy/modules/contrib/blueman.fc	2012-07-10 14:17:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/blueman.fc	2012-09-27 20:03:30.733126498 +0200
@@ -1,3 +1,3 @@
 /usr/libexec/blueman-mechanism	--	gen_context(system_u:object_r:blueman_exec_t,s0)
 
-/var/lib/blueman(/.*)?			gen_context(system_u:object_r:blueman_var_lib_t,s0)
+/var/lib/blueman(/.*)?	gen_context(system_u:object_r:blueman_var_lib_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/blueman.if refpolicy/policy/modules/contrib/blueman.if
--- refpolicy/policy/modules/contrib/blueman.if	2012-07-10 14:17:38.000000000 +0200
+++ refpolicy/policy/modules/contrib/blueman.if	2012-09-27 20:03:30.733126498 +0200
@@ -1,8 +1,8 @@
-## <summary>Blueman is a tool to manage Bluetooth devices</summary>
+## <summary>Tool to manage Bluetooth devices.</summary>
 
 ########################################
 ## <summary>
-##	Execute blueman in the blueman domain..
+##	Execute blueman in the blueman domain.
 ## </summary>
 ## <param name="domain">
 ## <summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/blueman.te refpolicy/policy/modules/contrib/blueman.te
--- refpolicy/policy/modules/contrib/blueman.te	2012-07-10 14:17:09.000000000 +0200
+++ refpolicy/policy/modules/contrib/blueman.te	2012-09-27 20:03:30.733126498 +0200
@@ -1,4 +1,4 @@
-policy_module(blueman, 1.0.0)
+policy_module(blueman, 1.0.1)
 
 ########################################
 #
@@ -8,15 +8,15 @@
 type blueman_t;
 type blueman_exec_t;
 dbus_system_domain(blueman_t, blueman_exec_t)
-init_daemon_domain(blueman_t, blueman_exec_t)
 
 type blueman_var_lib_t;
 files_type(blueman_var_lib_t)
 
 ########################################
 #
-# blueman local policy
+# Local policy
 #
+
 allow blueman_t self:fifo_file rw_fifo_file_perms;
 
 manage_dirs_pattern(blueman_t, blueman_var_lib_t, blueman_var_lib_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bluetooth.fc refpolicy/policy/modules/contrib/bluetooth.fc
--- refpolicy/policy/modules/contrib/bluetooth.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/bluetooth.fc	2012-09-27 20:03:30.734126498 +0200
@@ -1,30 +1,24 @@
-#
-# /etc
-#
-/etc/bluetooth(/.*)?		gen_context(system_u:object_r:bluetooth_conf_t,s0)
-/etc/bluetooth/link_key		gen_context(system_u:object_r:bluetooth_conf_rw_t,s0)
-/etc/rc\.d/init\.d/bluetooth --	gen_context(system_u:object_r:bluetooth_initrc_exec_t,s0)
+/etc/bluetooth(/.*)?	gen_context(system_u:object_r:bluetooth_conf_t,s0)
+/etc/bluetooth/link_key	--	gen_context(system_u:object_r:bluetooth_conf_rw_t,s0)
+
+/etc/rc\.d/init\.d/bluetooth	--	gen_context(system_u:object_r:bluetooth_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/dund	--	gen_context(system_u:object_r:bluetooth_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/pand	--	gen_context(system_u:object_r:bluetooth_initrc_exec_t,s0)
 
-#
-# /usr
-#
 /usr/bin/blue.*pin	--	gen_context(system_u:object_r:bluetooth_helper_exec_t,s0)
-/usr/bin/dund		--	gen_context(system_u:object_r:bluetooth_exec_t,s0)
-/usr/bin/hidd		--	gen_context(system_u:object_r:bluetooth_exec_t,s0)
-/usr/bin/rfcomm		--	gen_context(system_u:object_r:bluetooth_exec_t,s0)
+/usr/bin/dund	--	gen_context(system_u:object_r:bluetooth_exec_t,s0)
+/usr/bin/hidd	--	gen_context(system_u:object_r:bluetooth_exec_t,s0)
+/usr/bin/rfcomm	--	gen_context(system_u:object_r:bluetooth_exec_t,s0)
 
 /usr/sbin/bluetoothd	--	gen_context(system_u:object_r:bluetooth_exec_t,s0)
 /usr/sbin/hciattach	--	gen_context(system_u:object_r:bluetooth_exec_t,s0)
-/usr/sbin/hcid		--	gen_context(system_u:object_r:bluetooth_exec_t,s0)
+/usr/sbin/hcid	--	gen_context(system_u:object_r:bluetooth_exec_t,s0)
 /usr/sbin/hid2hci	--	gen_context(system_u:object_r:bluetooth_exec_t,s0)
-/usr/sbin/sdpd		--	gen_context(system_u:object_r:bluetooth_exec_t,s0)
+/usr/sbin/sdpd	--	gen_context(system_u:object_r:bluetooth_exec_t,s0)
 
-#
-# /var
-#
 /var/lib/bluetooth(/.*)?	gen_context(system_u:object_r:bluetooth_var_lib_t,s0)
 
-/var/run/bluetoothd_address	gen_context(system_u:object_r:bluetooth_var_run_t,s0)
-/var/run/sdp		-s	gen_context(system_u:object_r:bluetooth_var_run_t,s0)
+/var/lock/subsys/bluetoothd	--	gen_context(system_u:object_r:bluetooth_lock_t,s0)
+
+/var/run/bluetoothd_address	--	gen_context(system_u:object_r:bluetooth_var_run_t,s0)
+/var/run/sdp	-s	gen_context(system_u:object_r:bluetooth_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bluetooth.if refpolicy/policy/modules/contrib/bluetooth.if
--- refpolicy/policy/modules/contrib/bluetooth.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/bluetooth.if	2012-09-27 20:03:30.734126498 +0200
@@ -2,7 +2,7 @@
 
 ########################################
 ## <summary>
-##	Role access for bluetooth
+##	Role access for bluetooth.
 ## </summary>
 ## <param name="role">
 ##	<summary>
@@ -17,17 +17,19 @@
 #
 interface(`bluetooth_role',`
 	gen_require(`
-		type bluetooth_helper_t, bluetooth_helper_exec_t;
-		type bluetooth_helper_tmp_t, bluetooth_helper_tmpfs_t;
+		attribute_role bluetooth_helper_roles;
+		type bluetooth_t, bluetooth_helper_t, bluetooth_helper_exec_t;
+		type bluetooth_helper_tmp_t, bluetooth_helper_tmpfs_t, bluetooth_var_run_t;
 	')
 
-	role $1 types bluetooth_helper_t;
+	roleattribute $1 bluetooth_helper_roles;
+
+	allow $2 bluetooth_t:socket rw_socket_perms;
 
 	domtrans_pattern($2, bluetooth_helper_exec_t, bluetooth_helper_t)
 
-	# allow ps to show cdrecord and allow the user to kill it
 	ps_process_pattern($2, bluetooth_helper_t)
-	allow $2 bluetooth_helper_t:process signal;
+	allow $2 bluetooth_helper_t:process { ptrace signal_perms };
 
 	manage_dirs_pattern($2, bluetooth_helper_tmp_t, bluetooth_helper_tmp_t)
 	manage_files_pattern($2, bluetooth_helper_tmp_t, bluetooth_helper_tmp_t)
@@ -35,6 +37,10 @@
 
 	manage_dirs_pattern($2, bluetooth_helper_tmpfs_t, bluetooth_helper_tmpfs_t)
 	manage_files_pattern($2, bluetooth_helper_tmpfs_t, bluetooth_helper_tmpfs_t)
+
+	stream_connect_pattern($2, bluetooth_var_run_t, bluetooth_var_run_t, bluetooth_t)
+
+	files_search_pids($2)
 ')
 
 #####################################
@@ -73,12 +79,13 @@
 		type bluetooth_t, bluetooth_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, bluetooth_exec_t, bluetooth_t)
 ')
 
 ########################################
 ## <summary>
-##	Read bluetooth daemon configuration.
+##	Read bluetooth configuration files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -91,7 +98,7 @@
 		type bluetooth_conf_t;
 	')
 
-	allow $1 bluetooth_conf_t:file { getattr read ioctl };
+	allow $1 bluetooth_conf_t:file read_file_perms;
 ')
 
 ########################################
@@ -157,7 +164,8 @@
 
 ########################################
 ## <summary>
-##	Read bluetooth helper state files.
+##	Do not audit attempts to read
+##	bluetooth process state files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -170,14 +178,14 @@
 		type bluetooth_helper_t;
 	')
 
-	dontaudit $1 bluetooth_helper_t:dir search;
-	dontaudit $1 bluetooth_helper_t:file { read getattr };
+	dontaudit $1 bluetooth_helper_t:dir search_dir_perms;
+	dontaudit $1 bluetooth_helper_t:file read_file_perms;
 ')
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an bluetooth environment
+##	All of the rules required to
+##	administrate an bluetooth environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -186,7 +194,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the bluetooth domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -194,8 +202,8 @@
 interface(`bluetooth_admin',`
 	gen_require(`
 		type bluetooth_t, bluetooth_tmp_t, bluetooth_lock_t;
-		type bluetooth_spool_t, bluetooth_var_lib_t, bluetooth_var_run_t;
-		type bluetooth_conf_t, bluetooth_conf_rw_t;
+		type bluetooth_var_lib_t, bluetooth_var_run_t;
+		type bluetooth_conf_t, bluetooth_conf_rw_t, bluetooth_var_lib_t;
 		type bluetooth_initrc_exec_t;
 	')
 
@@ -214,11 +222,7 @@
 	admin_pattern($1, bluetooth_lock_t)
 
 	files_list_etc($1)
-	admin_pattern($1, bluetooth_conf_t)
-	admin_pattern($1, bluetooth_conf_rw_t)
-
-	files_list_spool($1)
-	admin_pattern($1, bluetooth_spool_t)
+	admin_pattern($1, { bluetooth_conf_t bluetooth_conf_rw_t })
 
 	files_list_var_lib($1)
 	admin_pattern($1, bluetooth_var_lib_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bluetooth.te refpolicy/policy/modules/contrib/bluetooth.te
--- refpolicy/policy/modules/contrib/bluetooth.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/bluetooth.te	2012-09-27 20:03:30.734126498 +0200
@@ -1,15 +1,18 @@
-policy_module(bluetooth, 3.4.0)
+policy_module(bluetooth, 3.4.3)
 
 ########################################
 #
 # Declarations
 #
+
+attribute_role bluetooth_helper_roles;
+
 type bluetooth_t;
 type bluetooth_exec_t;
 init_daemon_domain(bluetooth_t, bluetooth_exec_t)
 
 type bluetooth_conf_t;
-files_type(bluetooth_conf_t)
+files_config_file(bluetooth_conf_t)
 
 type bluetooth_conf_rw_t;
 files_type(bluetooth_conf_rw_t)
@@ -19,6 +22,7 @@
 typealias bluetooth_helper_t alias { user_bluetooth_helper_t staff_bluetooth_helper_t sysadm_bluetooth_helper_t };
 typealias bluetooth_helper_t alias { auditadm_bluetooth_helper_t secadm_bluetooth_helper_t };
 userdom_user_application_domain(bluetooth_helper_t, bluetooth_helper_exec_t)
+role bluetooth_helper_roles types bluetooth_helper_t;
 
 type bluetooth_helper_tmp_t;
 typealias bluetooth_helper_tmp_t alias { user_bluetooth_helper_tmp_t staff_bluetooth_helper_tmp_t sysadm_bluetooth_helper_tmp_t };
@@ -47,20 +51,17 @@
 
 ########################################
 #
-# Bluetooth services local policy
+# Local policy
 #
 
-#sys_admin capability - redhat bug 573015
 allow bluetooth_t self:capability { dac_override net_bind_service net_admin net_raw setpcap sys_admin sys_tty_config ipc_lock };
 dontaudit bluetooth_t self:capability sys_tty_config;
 allow bluetooth_t self:process { getcap setcap getsched signal_perms };
 allow bluetooth_t self:fifo_file rw_fifo_file_perms;
 allow bluetooth_t self:shm create_shm_perms;
 allow bluetooth_t self:socket create_stream_socket_perms;
-allow bluetooth_t self:unix_dgram_socket create_socket_perms;
-allow bluetooth_t self:unix_stream_socket { connectto create_stream_socket_perms };
-allow bluetooth_t self:tcp_socket create_stream_socket_perms;
-allow bluetooth_t self:udp_socket create_socket_perms;
+allow bluetooth_t self:unix_stream_socket { accept connectto listen };
+allow bluetooth_t self:tcp_socket { accept listen };
 allow bluetooth_t self:netlink_kobject_uevent_socket create_socket_perms;
 
 read_files_pattern(bluetooth_t, bluetooth_conf_t, bluetooth_conf_t)
@@ -72,14 +73,12 @@
 manage_sock_files_pattern(bluetooth_t, bluetooth_conf_t, bluetooth_conf_rw_t)
 filetrans_pattern(bluetooth_t, bluetooth_conf_t, bluetooth_conf_rw_t, { dir file lnk_file sock_file fifo_file })
 
-can_exec(bluetooth_t, bluetooth_helper_exec_t)
-
 allow bluetooth_t bluetooth_lock_t:file manage_file_perms;
 files_lock_filetrans(bluetooth_t, bluetooth_lock_t, file)
 
 manage_dirs_pattern(bluetooth_t, bluetooth_tmp_t, bluetooth_tmp_t)
 manage_files_pattern(bluetooth_t, bluetooth_tmp_t, bluetooth_tmp_t)
-files_tmp_filetrans(bluetooth_t, bluetooth_tmp_t, { file dir })
+files_tmp_filetrans(bluetooth_t, bluetooth_tmp_t, { dir file })
 
 manage_dirs_pattern(bluetooth_t, bluetooth_var_lib_t, bluetooth_var_lib_t)
 manage_files_pattern(bluetooth_t, bluetooth_var_lib_t, bluetooth_var_lib_t)
@@ -89,23 +88,16 @@
 manage_sock_files_pattern(bluetooth_t, bluetooth_var_run_t, bluetooth_var_run_t)
 files_pid_filetrans(bluetooth_t, bluetooth_var_run_t, { file sock_file })
 
+can_exec(bluetooth_t, bluetooth_helper_exec_t)
+
 kernel_read_kernel_sysctls(bluetooth_t)
 kernel_read_system_state(bluetooth_t)
 kernel_read_network_state(bluetooth_t)
 kernel_request_load_module(bluetooth_t)
-#search debugfs - redhat bug 548206
 kernel_search_debugfs(bluetooth_t)
 
-corenet_all_recvfrom_unlabeled(bluetooth_t)
-corenet_all_recvfrom_netlabel(bluetooth_t)
-corenet_tcp_sendrecv_generic_if(bluetooth_t)
-corenet_udp_sendrecv_generic_if(bluetooth_t)
-corenet_raw_sendrecv_generic_if(bluetooth_t)
-corenet_tcp_sendrecv_generic_node(bluetooth_t)
-corenet_udp_sendrecv_generic_node(bluetooth_t)
-corenet_raw_sendrecv_generic_node(bluetooth_t)
-corenet_tcp_sendrecv_all_ports(bluetooth_t)
-corenet_udp_sendrecv_all_ports(bluetooth_t)
+corecmd_exec_bin(bluetooth_t)
+corecmd_exec_shell(bluetooth_t)
 
 dev_read_sysfs(bluetooth_t)
 dev_rw_usbfs(bluetooth_t)
@@ -114,23 +106,18 @@
 dev_rw_input_dev(bluetooth_t)
 dev_rw_wireless(bluetooth_t)
 
-fs_getattr_all_fs(bluetooth_t)
-fs_search_auto_mountpoints(bluetooth_t)
-fs_list_inotifyfs(bluetooth_t)
-
-#Handle bluetooth serial devices
-term_use_unallocated_ttys(bluetooth_t)
-
-corecmd_exec_bin(bluetooth_t)
-corecmd_exec_shell(bluetooth_t)
-
 domain_use_interactive_fds(bluetooth_t)
 domain_dontaudit_search_all_domains_state(bluetooth_t)
 
-files_read_etc_files(bluetooth_t)
 files_read_etc_runtime_files(bluetooth_t)
 files_read_usr_files(bluetooth_t)
 
+fs_getattr_all_fs(bluetooth_t)
+fs_search_auto_mountpoints(bluetooth_t)
+fs_list_inotifyfs(bluetooth_t)
+
+term_use_unallocated_ttys(bluetooth_t)
+
 auth_use_nsswitch(bluetooth_t)
 
 logging_send_syslog_msg(bluetooth_t)
@@ -152,6 +139,10 @@
 	')
 
 	optional_policy(`
+		devicekit_dbus_chat_power(bluetooth_t)
+	')
+
+	optional_policy(`
 		hal_dbus_chat(bluetooth_t)
 	')
 
@@ -178,23 +169,21 @@
 
 ########################################
 #
-# Bluetooth helper programs local policy
+# Helper local policy
 #
 
 allow bluetooth_helper_t self:capability sys_nice;
 allow bluetooth_helper_t self:process getsched;
 allow bluetooth_helper_t self:fifo_file rw_fifo_file_perms;
 allow bluetooth_helper_t self:shm create_shm_perms;
-allow bluetooth_helper_t self:unix_stream_socket { create_stream_socket_perms connectto };
-allow bluetooth_helper_t self:tcp_socket create_socket_perms;
-allow bluetooth_helper_t self:netlink_route_socket r_netlink_socket_perms;
+allow bluetooth_helper_t self:unix_stream_socket { accept connectto listen };
 
 allow bluetooth_helper_t bluetooth_t:socket { read write };
 
 manage_dirs_pattern(bluetooth_helper_t, bluetooth_helper_tmp_t, bluetooth_helper_tmp_t)
 manage_files_pattern(bluetooth_helper_t, bluetooth_helper_tmp_t, bluetooth_helper_tmp_t)
 manage_sock_files_pattern(bluetooth_helper_t, bluetooth_helper_tmp_t, bluetooth_helper_tmp_t)
-files_tmp_filetrans(bluetooth_helper_t, bluetooth_helper_tmp_t, { file dir sock_file })
+files_tmp_filetrans(bluetooth_helper_t, bluetooth_helper_tmp_t, { dir file sock_file })
 
 manage_dirs_pattern(bluetooth_helper_t, bluetooth_helper_tmpfs_t, bluetooth_helper_tmpfs_t)
 manage_files_pattern(bluetooth_helper_t, bluetooth_helper_tmpfs_t, bluetooth_helper_tmpfs_t)
@@ -203,28 +192,27 @@
 kernel_read_system_state(bluetooth_helper_t)
 kernel_read_kernel_sysctls(bluetooth_helper_t)
 
-dev_read_urand(bluetooth_helper_t)
-
-term_dontaudit_use_all_ttys(bluetooth_helper_t)
-
 corecmd_exec_bin(bluetooth_helper_t)
 corecmd_exec_shell(bluetooth_helper_t)
 
+dev_read_urand(bluetooth_helper_t)
+
 domain_read_all_domains_state(bluetooth_helper_t)
 
-files_read_etc_files(bluetooth_helper_t)
 files_read_etc_runtime_files(bluetooth_helper_t)
 files_read_usr_files(bluetooth_helper_t)
 files_dontaudit_list_default(bluetooth_helper_t)
 
+term_dontaudit_use_all_ttys(bluetooth_helper_t)
+
+auth_use_nsswitch(bluetooth_helper_t)
+
 locallogin_dontaudit_use_fds(bluetooth_helper_t)
 
 logging_send_syslog_msg(bluetooth_helper_t)
 
 miscfiles_read_localization(bluetooth_helper_t)
 
-sysnet_read_config(bluetooth_helper_t)
-
 optional_policy(`
 	bluetooth_dbus_chat(bluetooth_helper_t)
 
@@ -233,9 +221,5 @@
 ')
 
 optional_policy(`
-	nscd_socket_use(bluetooth_helper_t)
-')
-
-optional_policy(`
 	xserver_user_x_domain_template(bluetooth_helper, bluetooth_helper_t, bluetooth_helper_tmpfs_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/boinc.fc refpolicy/policy/modules/contrib/boinc.fc
--- refpolicy/policy/modules/contrib/boinc.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/boinc.fc	2012-09-27 20:03:30.734126498 +0200
@@ -0,0 +1,9 @@
+/etc/rc\.d/init\.d/boinc-client	--	gen_context(system_u:object_r:boinc_initrc_exec_t,s0)
+
+/usr/bin/boinc_client	--	gen_context(system_u:object_r:boinc_exec_t,s0)
+
+/var/lib/boinc(/.*)?	gen_context(system_u:object_r:boinc_var_lib_t,s0)
+/var/lib/boinc/projects(/.*)?	gen_context(system_u:object_r:boinc_project_var_lib_t,s0)
+/var/lib/boinc/slots(/.*)?	gen_context(system_u:object_r:boinc_project_var_lib_t,s0)
+
+/var/log/boinc\.log.*	--	gen_context(system_u:object_r:boinc_log_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/boinc.if refpolicy/policy/modules/contrib/boinc.if
--- refpolicy/policy/modules/contrib/boinc.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/boinc.if	2012-09-27 20:03:30.734126498 +0200
@@ -0,0 +1,44 @@
+## <summary>Platform for computing using volunteered resources.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an boinc environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`boinc_admin',`
+	gen_require(`
+
+		type boinc_t, boinc_project_t, boinc_log_t;
+		type boinc_var_lib_t, boinc_tmp_t, boinc_initrc_exec_t;
+		type boinc_project_var_lib_t, boinc_project_tmp_t;
+	')
+
+	allow $1 { boinc_t boinc_project_t }:process { ptrace signal_perms };
+	ps_process_pattern($1, { boinc_t boinc_project_t })
+
+	init_labeled_script_domtrans($1, boinc_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 boinc_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, boinc_log_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, { boinc_project_tmp_t boinc_tmp_t })
+
+	files_search_var_lib($1)
+	admin_pattern($1, { boinc_project_var_lib_t boinc_var_lib_t })
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/boinc.te refpolicy/policy/modules/contrib/boinc.te
--- refpolicy/policy/modules/contrib/boinc.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/boinc.te	2012-09-27 20:03:30.734126498 +0200
@@ -0,0 +1,180 @@
+policy_module(boinc, 1.0.1)
+
+########################################
+#
+# Declarations
+#
+
+type boinc_t;
+type boinc_exec_t;
+init_daemon_domain(boinc_t, boinc_exec_t)
+
+type boinc_initrc_exec_t;
+init_script_file(boinc_initrc_exec_t)
+
+type boinc_tmp_t;
+files_tmp_file(boinc_tmp_t)
+
+type boinc_tmpfs_t;
+files_tmpfs_file(boinc_tmpfs_t)
+
+type boinc_var_lib_t;
+files_type(boinc_var_lib_t)
+
+type boinc_project_var_lib_t;
+files_type(boinc_project_var_lib_t)
+
+type boinc_log_t;
+logging_log_file(boinc_log_t)
+
+type boinc_project_t;
+domain_type(boinc_project_t)
+domain_entry_file(boinc_project_t, boinc_project_var_lib_t)
+role system_r types boinc_project_t;
+
+type boinc_project_tmp_t;
+files_tmp_file(boinc_project_tmp_t)
+
+########################################
+#
+# Local policy
+#
+
+allow boinc_t self:process { setsched setpgid signull sigkill };
+allow boinc_t self:unix_stream_socket { accept listen };
+allow boinc_t self:tcp_socket create_stream_socket_perms;
+allow boinc_t self:shm create_shm_perms;
+allow boinc_t self:fifo_file rw_fifo_file_perms;
+allow boinc_t self:sem create_sem_perms;
+
+manage_dirs_pattern(boinc_t, boinc_tmp_t, boinc_tmp_t)
+manage_files_pattern(boinc_t, boinc_tmp_t, boinc_tmp_t)
+files_tmp_filetrans(boinc_t, boinc_tmp_t, { dir file })
+
+manage_files_pattern(boinc_t, boinc_tmpfs_t, boinc_tmpfs_t)
+fs_tmpfs_filetrans(boinc_t, boinc_tmpfs_t, file)
+
+manage_dirs_pattern(boinc_t, boinc_var_lib_t, boinc_var_lib_t)
+manage_files_pattern(boinc_t, boinc_var_lib_t, boinc_var_lib_t)
+manage_lnk_files_pattern(boinc_t, boinc_var_lib_t, boinc_var_lib_t)
+
+# entry files to the boinc_project_t domain
+manage_dirs_pattern(boinc_t, boinc_project_var_lib_t, boinc_project_var_lib_t)
+manage_files_pattern(boinc_t, boinc_project_var_lib_t, boinc_project_var_lib_t)
+filetrans_pattern(boinc_t, boinc_var_lib_t, boinc_project_var_lib_t, dir, "slots")
+filetrans_pattern(boinc_t, boinc_var_lib_t, boinc_project_var_lib_t, dir, "projects")
+
+append_files_pattern(boinc_t, boinc_log_t, boinc_log_t)
+create_files_pattern(boinc_t, boinc_log_t, boinc_log_t)
+setattr_files_pattern(boinc_t, boinc_log_t, boinc_log_t)
+logging_log_filetrans(boinc_t, boinc_log_t, file)
+
+can_exec(boinc_t, boinc_var_lib_t)
+
+domtrans_pattern(boinc_t, boinc_project_var_lib_t, boinc_project_t)
+
+kernel_read_system_state(boinc_t)
+kernel_search_vm_sysctl(boinc_t)
+
+corenet_all_recvfrom_unlabeled(boinc_t)
+corenet_all_recvfrom_netlabel(boinc_t)
+corenet_tcp_sendrecv_generic_if(boinc_t)
+corenet_tcp_sendrecv_generic_node(boinc_t)
+corenet_tcp_bind_generic_node(boinc_t)
+
+corenet_sendrecv_boinc_client_packets(boinc_t)
+corenet_sendrecv_boinc_server_packets(boinc_t)
+corenet_tcp_bind_boinc_port(boinc_t)
+corenet_tcp_connect_boinc_port(boinc_t)
+corenet_tcp_sendrecv_boinc_port(boinc_t)
+
+corenet_sendrecv_boinc_client_server_packets(boinc_t)
+corenet_tcp_bind_boinc_client_port(boinc_t)
+corenet_tcp_sendrecv_boinc_client_port(boinc_t)
+
+corenet_sendrecv_http_client_packets(boinc_t)
+corenet_tcp_connect_http_port(boinc_t)
+corenet_tcp_sendrecv_http_port(boinc_t)
+
+corenet_sendrecv_http_cache_client_packets(boinc_t)
+corenet_tcp_connect_http_cache_port(boinc_t)
+corenet_tcp_sendrecv_http_cache_port(boinc_t)
+
+corecmd_exec_bin(boinc_t)
+corecmd_exec_shell(boinc_t)
+
+dev_read_rand(boinc_t)
+dev_read_urand(boinc_t)
+dev_read_sysfs(boinc_t)
+dev_rw_xserver_misc(boinc_t)
+
+domain_read_all_domains_state(boinc_t)
+
+files_dontaudit_getattr_boot_dirs(boinc_t)
+files_getattr_all_dirs(boinc_t)
+files_getattr_all_files(boinc_t)
+files_read_etc_files(boinc_t)
+files_read_etc_runtime_files(boinc_t)
+files_read_usr_files(boinc_t)
+
+fs_getattr_all_fs(boinc_t)
+
+term_getattr_all_ptys(boinc_t)
+term_getattr_unallocated_ttys(boinc_t)
+
+init_read_utmp(boinc_t)
+
+logging_send_syslog_msg(boinc_t)
+
+miscfiles_read_fonts(boinc_t)
+miscfiles_read_localization(boinc_t)
+
+optional_policy(`
+	mta_send_mail(boinc_t)
+')
+
+optional_policy(`
+	sysnet_dns_name_resolve(boinc_t)
+')
+
+########################################
+#
+# Project local policy
+#
+
+allow boinc_project_t self:capability { setuid setgid };
+allow boinc_project_t self:process { execmem execstack noatsecure ptrace setcap getcap setpgid setsched signal_perms };
+
+manage_dirs_pattern(boinc_project_t, boinc_project_tmp_t, boinc_project_tmp_t)
+manage_files_pattern(boinc_project_t, boinc_project_tmp_t, boinc_project_tmp_t)
+manage_sock_files_pattern(boinc_project_t, boinc_project_tmp_t, boinc_project_tmp_t)
+files_tmp_filetrans(boinc_project_t, boinc_project_tmp_t, { dir file sock_file})
+
+manage_dirs_pattern(boinc_project_t, boinc_project_var_lib_t, boinc_project_var_lib_t)
+manage_files_pattern(boinc_project_t, boinc_project_var_lib_t, boinc_project_var_lib_t)
+
+allow boinc_project_t boinc_project_var_lib_t:file execmod;
+can_exec(boinc_project_t, boinc_project_var_lib_t)
+
+allow boinc_project_t boinc_t:shm rw_shm_perms;
+allow boinc_project_t boinc_tmpfs_t:file { read write };
+
+kernel_read_kernel_sysctls(boinc_project_t)
+kernel_read_network_state(boinc_project_t)
+kernel_search_vm_sysctl(boinc_project_t)
+
+corenet_all_recvfrom_unlabeled(boinc_project_t)
+corenet_all_recvfrom_netlabel(boinc_project_t)
+corenet_tcp_sendrecv_generic_if(boinc_project_t)
+corenet_tcp_sendrecv_generic_node(boinc_project_t)
+corenet_tcp_bind_generic_node(boinc_project_t)
+
+corenet_sendrecv_boinc_client_packets(boinc_project_t)
+corenet_tcp_connect_boinc_port(boinc_project_t)
+corenet_tcp_sendrecv_boinc_port(boinc_project_t)
+
+files_dontaudit_search_home(boinc_project_t)
+
+optional_policy(`
+	java_exec(boinc_project_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/brctl.fc refpolicy/policy/modules/contrib/brctl.fc
--- refpolicy/policy/modules/contrib/brctl.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/brctl.fc	2012-09-27 20:03:30.734126498 +0200
@@ -1 +1 @@
-/usr/sbin/brctl		--	gen_context(system_u:object_r:brctl_exec_t,s0)
+/usr/sbin/brctl	--	gen_context(system_u:object_r:brctl_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/brctl.if refpolicy/policy/modules/contrib/brctl.if
--- refpolicy/policy/modules/contrib/brctl.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/brctl.if	2012-09-27 20:03:30.734126498 +0200
@@ -1,4 +1,4 @@
-## <summary>Utilities for configuring the linux ethernet bridge</summary>
+## <summary>Utilities for configuring the Linux ethernet bridge.</summary>
 
 ########################################
 ## <summary>
@@ -18,3 +18,28 @@
 	corecmd_search_bin($1)
 	domtrans_pattern($1, brctl_exec_t, brctl_t)
 ')
+
+########################################
+## <summary>
+##	Execute brctl in the brctl domain, and
+##	allow the specified role the brctl domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+#
+interface(`brctl_run',`
+	gen_require(`
+		attribute_role brctl_roles;
+	')
+
+	brctl_domtrans($1)
+	roleattribute $2 brctl_roles;
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/brctl.te refpolicy/policy/modules/contrib/brctl.te
--- refpolicy/policy/modules/contrib/brctl.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/brctl.te	2012-09-27 20:03:30.735126498 +0200
@@ -1,17 +1,20 @@
-policy_module(brctl, 1.6.0)
+policy_module(brctl, 1.6.2)
 
 ########################################
 #
 # Declarations
 #
 
+attribute_role brctl_roles;
+
 type brctl_t;
 type brctl_exec_t;
 init_system_domain(brctl_t, brctl_exec_t)
+role brctl_roles types brctl_t;
 
 ########################################
 #
-# brctl local policy
+# Local policy
 #
 
 allow brctl_t self:capability net_admin;
@@ -29,7 +32,6 @@
 dev_rw_sysfs(brctl_t)
 dev_write_sysfs_dirs(brctl_t)
 
-# Init script handling
 domain_use_interactive_fds(brctl_t)
 
 files_read_etc_files(brctl_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bugzilla.fc refpolicy/policy/modules/contrib/bugzilla.fc
--- refpolicy/policy/modules/contrib/bugzilla.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/bugzilla.fc	2012-09-27 20:03:30.735126498 +0200
@@ -1,4 +1,4 @@
 /usr/share/bugzilla(/.*)?	-d	gen_context(system_u:object_r:httpd_bugzilla_content_t,s0)
 /usr/share/bugzilla(/.*)?	--	gen_context(system_u:object_r:httpd_bugzilla_script_exec_t,s0)
 
-/var/lib/bugzilla(/.*)?			gen_context(system_u:object_r:httpd_bugzilla_rw_content_t,s0)
+/var/lib/bugzilla(/.*)?	gen_context(system_u:object_r:httpd_bugzilla_rw_content_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bugzilla.if refpolicy/policy/modules/contrib/bugzilla.if
--- refpolicy/policy/modules/contrib/bugzilla.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/bugzilla.if	2012-09-27 20:03:30.735126498 +0200
@@ -1,9 +1,8 @@
-## <summary>Bugzilla server</summary>
+## <summary>Bugtracker.</summary>
 
 ########################################
 ## <summary>
-##	Allow the specified domain to search
-##	bugzilla directories.
+##	Search bugzilla directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -21,8 +20,9 @@
 
 ########################################
 ## <summary>
-##	Do not audit attempts to read and write
-##	bugzilla script unix domain stream sockets.
+##	Do not audit attempts to read and
+##	write bugzilla script unix domain
+##	stream sockets.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -40,8 +40,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an bugzilla environment
+##	All of the rules required to
+##	administrate an bugzilla environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -50,7 +50,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the bugzilla domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -65,13 +65,16 @@
 	allow $1 httpd_bugzilla_script_t:process { ptrace signal_perms };
 	ps_process_pattern($1, httpd_bugzilla_script_t)
 
-	files_list_var_lib(httpd_bugzilla_script_t)
-
-	apache_list_sys_content($1)
+	files_search_usr($1)
 	admin_pattern($1, httpd_bugzilla_script_exec_t)
 	admin_pattern($1, httpd_bugzilla_script_t)
 	admin_pattern($1, httpd_bugzilla_content_t)
 	admin_pattern($1, httpd_bugzilla_htaccess_t)
-	admin_pattern($1, httpd_bugzilla_rw_content_t)
 	admin_pattern($1, httpd_bugzilla_ra_content_t)
+
+	files_search_tmp($1)
+	files_search_var_lib($1)
+	admin_pattern($1, httpd_bugzilla_rw_content_t)
+
+	apache_list_sys_content($1)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/bugzilla.te refpolicy/policy/modules/contrib/bugzilla.te
--- refpolicy/policy/modules/contrib/bugzilla.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/bugzilla.te	2012-09-27 20:03:30.735126498 +0200
@@ -1,4 +1,4 @@
-policy_module(bugzilla, 1.0.0)
+policy_module(bugzilla, 1.0.2)
 
 ########################################
 #
@@ -9,7 +9,7 @@
 
 ########################################
 #
-# bugzilla local policy
+# Local policy
 #
 
 allow httpd_bugzilla_script_t self:netlink_route_socket r_netlink_socket_perms;
@@ -19,17 +19,15 @@
 corenet_all_recvfrom_unlabeled(httpd_bugzilla_script_t)
 corenet_all_recvfrom_netlabel(httpd_bugzilla_script_t)
 corenet_tcp_sendrecv_generic_if(httpd_bugzilla_script_t)
-corenet_udp_sendrecv_generic_if(httpd_bugzilla_script_t)
 corenet_tcp_sendrecv_generic_node(httpd_bugzilla_script_t)
-corenet_udp_sendrecv_generic_node(httpd_bugzilla_script_t)
-corenet_tcp_sendrecv_all_ports(httpd_bugzilla_script_t)
-corenet_udp_sendrecv_all_ports(httpd_bugzilla_script_t)
-corenet_tcp_connect_postgresql_port(httpd_bugzilla_script_t)
-corenet_tcp_connect_mysqld_port(httpd_bugzilla_script_t)
+
+corenet_sendrecv_http_client_packets(httpd_bugzilla_script_t)
 corenet_tcp_connect_http_port(httpd_bugzilla_script_t)
+corenet_tcp_sendrecv_http_port(httpd_bugzilla_script_t)
+
+corenet_sendrecv_smtp_client_packets(httpd_bugzilla_script_t)
 corenet_tcp_connect_smtp_port(httpd_bugzilla_script_t)
-corenet_sendrecv_postgresql_client_packets(httpd_bugzilla_script_t)
-corenet_sendrecv_mysqld_client_packets(httpd_bugzilla_script_t)
+corenet_tcp_sendrecv_smtp_port(httpd_bugzilla_script_t)
 
 files_search_var_lib(httpd_bugzilla_script_t)
 
@@ -43,8 +41,10 @@
 optional_policy(`
 	mysql_search_db(httpd_bugzilla_script_t)
 	mysql_stream_connect(httpd_bugzilla_script_t)
+	mysql_tcp_connect(httpd_bugzilla_script_t)
 ')
 
 optional_policy(`
 	postgresql_stream_connect(httpd_bugzilla_script_t)
+	postgresql_tcp_connect(httpd_bugzilla_script_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/calamaris.fc refpolicy/policy/modules/contrib/calamaris.fc
--- refpolicy/policy/modules/contrib/calamaris.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/calamaris.fc	2012-09-27 20:03:30.735126498 +0200
@@ -1,10 +1,5 @@
-#
-# /etc
-#
-/etc/cron\.daily/calamaris --	gen_context(system_u:object_r:calamaris_exec_t,s0)
+/etc/cron\.daily/calamaris	--	gen_context(system_u:object_r:calamaris_exec_t,s0)
 
-#
-# /var
-#
 /var/log/calamaris(/.*)?	gen_context(system_u:object_r:calamaris_log_t,s0)
+
 /var/www/calamaris(/.*)?	gen_context(system_u:object_r:calamaris_www_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/calamaris.if refpolicy/policy/modules/contrib/calamaris.if
--- refpolicy/policy/modules/contrib/calamaris.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/calamaris.if	2012-09-27 20:03:30.735126498 +0200
@@ -1,8 +1,54 @@
-## <summary>Squid log analysis</summary>
+## <summary>Squid log analysis.</summary>
+
+########################################
+## <summary>
+##	Execute the calamaris in
+##	the calamaris domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`calamaris_domtrans',`
+	gen_require(`
+		type calamaris_t, calamaris_exec_t;
+	')
+
+	files_search_etc($1)
+	domtrans_pattern($1, calamaris_exec_t, calamaris_t)
+')
+
+########################################
+## <summary>
+##	Execute calamaris in the
+##	calamaris domain, and allow the
+##	specified role the calamaris domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+#
+interface(`calamaris_run',`
+	gen_require(`
+		attribute_role calamaris_roles;
+	')
+
+	lightsquid_domtrans($1)
+	roleattribute $2 calamaris_roles;
+')
 
 #######################################
 ## <summary>
-##	Allow domain to read calamaris www files.
+##	Read calamaris www files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -19,3 +65,37 @@
 	read_files_pattern($1, calamaris_www_t, calamaris_www_t)
 	read_lnk_files_pattern($1, calamaris_www_t, calamaris_www_t)
 ')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an calamaris environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`calamaris_admin',`
+	gen_require(`
+		type calamaris_t, calamaris_log_t, calamaris_www_t;
+	')
+
+	allow $1 calamaris_t:process { ptrace signal_perms };
+	ps_process_pattern($1, calamaris_t)
+
+	calamaris_run($1, $2)
+
+	logging_list_logs($1)
+	admin_pattern($1, calamaris_log_t)
+
+	apache_list_sys_content($1)
+	admin_pattern($1, calamaris_www_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/calamaris.te refpolicy/policy/modules/contrib/calamaris.te
--- refpolicy/policy/modules/contrib/calamaris.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/calamaris.te	2012-09-27 20:03:30.735126498 +0200
@@ -1,59 +1,49 @@
-policy_module(calamaris, 1.7.0)
+policy_module(calamaris, 1.7.2)
 
 ########################################
 #
 # Declarations
 #
 
+attribute_role calamaris_roles;
+
 type calamaris_t;
 type calamaris_exec_t;
-init_system_domain(calamaris_t, calamaris_exec_t)
-
-type calamaris_www_t;
-files_type(calamaris_www_t)
+application_domain(calamaris_t, calamaris_exec_t)
+role calamaris_roles types calamaris_t;
 
 type calamaris_log_t;
 logging_log_file(calamaris_log_t)
 
+type calamaris_www_t;
+files_type(calamaris_www_t)
+
 ########################################
 #
 # Local policy
 #
 
-# for when squid has a different UID
 allow calamaris_t self:capability dac_override;
-allow calamaris_t self:process { fork signal_perms setsched };
+allow calamaris_t self:process { signal_perms setsched };
 allow calamaris_t self:fifo_file rw_fifo_file_perms;
-allow calamaris_t self:unix_stream_socket create_stream_socket_perms;
-allow calamaris_t self:tcp_socket create_stream_socket_perms;
-allow calamaris_t self:udp_socket create_socket_perms;
+allow calamaris_t self:unix_stream_socket { accept listen };
+allow calamaris_t self:tcp_socket { accept listen };
+
+manage_dirs_pattern(calamaris_t, calamaris_log_t, calamaris_log_t)
+manage_files_pattern(calamaris_t, calamaris_log_t, calamaris_log_t)
+logging_log_filetrans(calamaris_t, calamaris_log_t, { dir file })
 
 manage_files_pattern(calamaris_t, calamaris_www_t, calamaris_www_t)
 manage_lnk_files_pattern(calamaris_t, calamaris_www_t, calamaris_www_t)
 
-manage_files_pattern(calamaris_t, calamaris_log_t, calamaris_log_t)
-logging_log_filetrans(calamaris_t, calamaris_log_t, { file dir })
-
 kernel_read_all_sysctls(calamaris_t)
 kernel_read_system_state(calamaris_t)
 
 corecmd_exec_bin(calamaris_t)
 
-corenet_all_recvfrom_unlabeled(calamaris_t)
-corenet_all_recvfrom_netlabel(calamaris_t)
-corenet_tcp_sendrecv_generic_if(calamaris_t)
-corenet_udp_sendrecv_generic_if(calamaris_t)
-corenet_tcp_sendrecv_generic_node(calamaris_t)
-corenet_udp_sendrecv_generic_node(calamaris_t)
-corenet_tcp_sendrecv_all_ports(calamaris_t)
-corenet_udp_sendrecv_all_ports(calamaris_t)
-
 dev_read_urand(calamaris_t)
 
-files_search_pids(calamaris_t)
-files_read_etc_files(calamaris_t)
 files_read_usr_files(calamaris_t)
-files_read_var_files(calamaris_t)
 files_read_etc_runtime_files(calamaris_t)
 
 libs_read_lib_files(calamaris_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/callweaver.fc refpolicy/policy/modules/contrib/callweaver.fc
--- refpolicy/policy/modules/contrib/callweaver.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/callweaver.fc	2012-09-27 20:03:30.736126498 +0200
@@ -0,0 +1,11 @@
+/etc/rc\.d/init\.d/callweaver	--	gen_context(system_u:object_r:callweaver_initrc_exec_t,s0)
+
+/usr/sbin/callweaver	--	gen_context(system_u:object_r:callweaver_exec_t,s0)
+
+/var/lib/callweaver(/.*)?	gen_context(system_u:object_r:callweaver_var_lib_t,s0)
+
+/var/log/callweaver(/.*)?	gen_context(system_u:object_r:callweaver_log_t,s0)
+
+/var/run/callweaver(/.*)?	gen_context(system_u:object_r:callweaver_var_run_t,s0)
+
+/var/spool/callweaver(/.*)?	gen_context(system_u:object_r:callweaver_spool_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/callweaver.if refpolicy/policy/modules/contrib/callweaver.if
--- refpolicy/policy/modules/contrib/callweaver.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/callweaver.if	2012-09-27 20:03:30.736126498 +0200
@@ -0,0 +1,42 @@
+## <summary>PBX software.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an callweaver environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`callweaver_admin',`
+	gen_require(`
+		type callweaver_t, callweaver_initrc_exec_t, callweaver_log_t;
+		type callweaver_var_lib_t, callweaver_var_run_t, callweaver_spool_t;
+	')
+
+	allow $1 callweaver_t:process { ptrace signal_perms };
+	ps_process_pattern($1, callweaver_t)
+
+	init_labeled_script_domtrans($1, callweaver_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 callweaver_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, callweaver_log_t)
+
+	files_search_pids($1)
+	admin_pattern($1, callweaver_var_run_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, { callweaver_spool_t callweaver_var_lib_t })
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/callweaver.te refpolicy/policy/modules/contrib/callweaver.te
--- refpolicy/policy/modules/contrib/callweaver.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/callweaver.te	2012-09-27 20:03:30.736126498 +0200
@@ -0,0 +1,87 @@
+policy_module(callweaver, 1.0.1)
+
+########################################
+#
+# Declarations
+#
+
+type callweaver_t;
+type callweaver_exec_t;
+init_daemon_domain(callweaver_t, callweaver_exec_t)
+
+type callweaver_initrc_exec_t;
+init_script_file(callweaver_initrc_exec_t)
+
+type callweaver_log_t;
+logging_log_file(callweaver_log_t)
+
+type callweaver_var_lib_t;
+files_type(callweaver_var_lib_t)
+
+type callweaver_var_run_t;
+files_pid_file(callweaver_var_run_t)
+
+type callweaver_spool_t;
+files_type(callweaver_spool_t)
+
+########################################
+#
+# Local policy
+#
+
+allow callweaver_t self:capability { setuid sys_nice setgid };
+allow callweaver_t self:process { setsched signal };
+allow callweaver_t self:fifo_file rw_fifo_file_perms;
+allow callweaver_t self:tcp_socket { accept listen };
+allow callweaver_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(callweaver_t, callweaver_log_t, callweaver_log_t)
+append_files_pattern(callweaver_t, callweaver_log_t, callweaver_log_t)
+create_files_pattern(callweaver_t, callweaver_log_t, callweaver_log_t)
+setattr_files_pattern(callweaver_t, callweaver_log_t, callweaver_log_t)
+logging_log_filetrans(callweaver_t, callweaver_log_t, { dir file })
+
+manage_dirs_pattern(callweaver_t, callweaver_var_lib_t, callweaver_var_lib_t)
+manage_files_pattern(callweaver_t, callweaver_var_lib_t, callweaver_var_lib_t)
+files_var_lib_filetrans(callweaver_t, callweaver_var_lib_t, { dir file })
+
+manage_dirs_pattern(callweaver_t, callweaver_var_run_t, callweaver_var_run_t)
+manage_files_pattern(callweaver_t, callweaver_var_run_t, callweaver_var_run_t)
+manage_sock_files_pattern(callweaver_t, callweaver_var_run_t, callweaver_var_run_t)
+files_pid_filetrans(callweaver_t, callweaver_var_run_t, { dir file sock_file })
+
+manage_dirs_pattern(callweaver_t, callweaver_spool_t, callweaver_spool_t)
+manage_files_pattern(callweaver_t, callweaver_spool_t, callweaver_spool_t)
+manage_lnk_files_pattern(callweaver_t, callweaver_spool_t, callweaver_spool_t)
+files_spool_filetrans(callweaver_t, callweaver_spool_t, { dir file })
+
+kernel_read_kernel_sysctls(callweaver_t)
+kernel_read_sysctl(callweaver_t)
+
+corenet_all_recvfrom_unlabeled(callweaver_t)
+corenet_all_recvfrom_netlabel(callweaver_t)
+corenet_udp_sendrecv_generic_if(callweaver_t)
+corenet_udp_sendrecv_generic_node(callweaver_t)
+corenet_udp_sendrecv_all_ports(callweaver_t)
+corenet_udp_bind_generic_node(callweaver_t)
+
+corenet_sendrecv_asterisk_server_packets(callweaver_t)
+corenet_udp_bind_asterisk_port(callweaver_t)
+
+corenet_sendrecv_generic_server_packets(callweaver_t)
+corenet_udp_bind_generic_port(callweaver_t)
+
+corenet_sendrecv_sip_server_packets(callweaver_t)
+corenet_udp_bind_sip_port(callweaver_t)
+
+dev_manage_generic_symlinks(callweaver_t)
+
+domain_use_interactive_fds(callweaver_t)
+
+term_getattr_pty_fs(callweaver_t)
+term_use_generic_ptys(callweaver_t)
+term_use_ptmx(callweaver_t)
+
+auth_use_nsswitch(callweaver_t)
+
+miscfiles_read_localization(callweaver_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/canna.fc refpolicy/policy/modules/contrib/canna.fc
--- refpolicy/policy/modules/contrib/canna.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/canna.fc	2012-09-27 20:03:30.736126498 +0200
@@ -1,23 +1,17 @@
-/etc/rc\.d/init\.d/canna --	gen_context(system_u:object_r:canna_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/canna	--	gen_context(system_u:object_r:canna_initrc_exec_t,s0)
 
-#
-# /usr
-#
 /usr/bin/cannaping	--	gen_context(system_u:object_r:canna_exec_t,s0)
-/usr/bin/catdic		--	gen_context(system_u:object_r:canna_exec_t,s0)
+/usr/bin/catdic	--	gen_context(system_u:object_r:canna_exec_t,s0)
 
 /usr/sbin/cannaserver	--	gen_context(system_u:object_r:canna_exec_t,s0)
 /usr/sbin/jserver	--	gen_context(system_u:object_r:canna_exec_t,s0)
 
-#
-# /var
-#
 /var/lib/canna/dic(/.*)?	gen_context(system_u:object_r:canna_var_lib_t,s0)
-/var/lib/wnn/dic(/.*)?		gen_context(system_u:object_r:canna_var_lib_t,s0)
+/var/lib/wnn/dic(/.*)?	gen_context(system_u:object_r:canna_var_lib_t,s0)
 
-/var/log/canna(/.*)?		gen_context(system_u:object_r:canna_log_t,s0)
-/var/log/wnn(/.*)?		gen_context(system_u:object_r:canna_log_t,s0)
+/var/log/canna(/.*)?	gen_context(system_u:object_r:canna_log_t,s0)
+/var/log/wnn(/.*)?	gen_context(system_u:object_r:canna_log_t,s0)
 
 /var/run/\.iroha_unix	-d	gen_context(system_u:object_r:canna_var_run_t,s0)
-/var/run/\.iroha_unix/.* -s	gen_context(system_u:object_r:canna_var_run_t,s0)
-/var/run/wnn-unix(/.*)		gen_context(system_u:object_r:canna_var_run_t,s0)
+/var/run/\.iroha_unix/.*	-s	gen_context(system_u:object_r:canna_var_run_t,s0)
+/var/run/wnn-unix(/.*)	gen_context(system_u:object_r:canna_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/canna.if refpolicy/policy/modules/contrib/canna.if
--- refpolicy/policy/modules/contrib/canna.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/canna.if	2012-09-27 20:03:30.736126498 +0200
@@ -1,8 +1,9 @@
-## <summary>Canna - kana-kanji conversion server</summary>
+## <summary>Kana-kanji conversion server.</summary>
 
 ########################################
 ## <summary>
-##	Connect to Canna using a unix domain stream socket.
+##	Connect to Canna using a unix
+##	domain stream socket.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -21,8 +22,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate 
-##	an canna environment
+##	All of the rules required to
+##	administrate an canna environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -31,7 +32,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the canna domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/canna.te refpolicy/policy/modules/contrib/canna.te
--- refpolicy/policy/modules/contrib/canna.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/canna.te	2012-09-27 20:03:30.736126498 +0200
@@ -1,4 +1,4 @@
-policy_module(canna, 1.11.0)
+policy_module(canna, 1.11.1)
 
 ########################################
 #
@@ -29,13 +29,15 @@
 allow canna_t self:capability { setgid setuid net_bind_service };
 dontaudit canna_t self:capability sys_tty_config;
 allow canna_t self:process signal_perms;
-allow canna_t self:unix_stream_socket { connectto create_stream_socket_perms};
-allow canna_t self:unix_dgram_socket create_stream_socket_perms;
+allow canna_t self:unix_stream_socket { accept connectto listen };
+allow canna_t self:unix_dgram_socket { accept listen };
 allow canna_t self:tcp_socket create_stream_socket_perms;
 
-manage_files_pattern(canna_t, canna_log_t, canna_log_t)
-allow canna_t canna_log_t:dir setattr;
-logging_log_filetrans(canna_t, canna_log_t, { file dir })
+allow canna_t canna_log_t:dir setattr_dir_perms;
+append_files_pattern(canna_t, canna_log_t, canna_log_t)
+create_files_pattern(canna_t, canna_log_t, canna_log_t)
+setattr_files_pattern(canna_t, canna_log_t, canna_log_t)
+logging_log_filetrans(canna_t, canna_log_t, file)
 
 manage_dirs_pattern(canna_t, canna_var_lib_t, canna_var_lib_t)
 manage_files_pattern(canna_t, canna_var_lib_t, canna_var_lib_t)
@@ -45,7 +47,7 @@
 manage_dirs_pattern(canna_t, canna_var_run_t, canna_var_run_t)
 manage_files_pattern(canna_t, canna_var_run_t, canna_var_run_t)
 manage_sock_files_pattern(canna_t, canna_var_run_t, canna_var_run_t)
-files_pid_filetrans(canna_t, canna_var_run_t, { dir file sock_file })
+files_pid_filetrans(canna_t, canna_var_run_t, { dir sock_file })
 
 kernel_read_kernel_sysctls(canna_t)
 kernel_read_system_state(canna_t)
@@ -54,9 +56,10 @@
 corenet_all_recvfrom_netlabel(canna_t)
 corenet_tcp_sendrecv_generic_if(canna_t)
 corenet_tcp_sendrecv_generic_node(canna_t)
-corenet_tcp_sendrecv_all_ports(canna_t)
-corenet_tcp_connect_all_ports(canna_t)
+
 corenet_sendrecv_all_client_packets(canna_t)
+corenet_tcp_connect_all_ports(canna_t)
+corenet_tcp_sendrecv_all_ports(canna_t)
 
 dev_read_sysfs(canna_t)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ccs.fc refpolicy/policy/modules/contrib/ccs.fc
--- refpolicy/policy/modules/contrib/ccs.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/ccs.fc	2012-09-27 20:03:30.736126498 +0200
@@ -1,6 +1,14 @@
-/etc/cluster(/.*)?		gen_context(system_u:object_r:cluster_conf_t,s0)
+/etc/cluster(/.*)?	gen_context(system_u:object_r:cluster_conf_t,s0)
 
-/sbin/ccsd		--	gen_context(system_u:object_r:ccs_exec_t,s0)
+/etc/rc\.d/init\.d/((ccs)|(ccsd))	--	gen_context(system_u:object_r:ccs_initrc_exec_t,s0)
 
-/var/run/cluster/ccsd\.pid --	gen_context(system_u:object_r:ccs_var_run_t,s0)
-/var/run/cluster/ccsd\.sock -s	gen_context(system_u:object_r:ccs_var_run_t,s0)
+/sbin/ccsd	--	gen_context(system_u:object_r:ccs_exec_t,s0)
+
+/usr/sbin/ccsd	--	gen_context(system_u:object_r:ccs_exec_t,s0)
+
+/var/lib/cluster/((ccs)|(ccsd)).*	gen_context(system_u:object_r:ccs_var_lib_t,s0)
+
+/var/log/cluster/((ccs)|(ccsd)).*	gen_context(system_u:object_r:ccs_var_log_t,s0)
+
+/var/run/cluster/((ccs)|(ccsd))\.pid	--	gen_context(system_u:object_r:ccs_var_run_t,s0)
+/var/run/cluster/((ccs)|(ccsd))\.sock	-s	gen_context(system_u:object_r:ccs_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ccs.if refpolicy/policy/modules/contrib/ccs.if
--- refpolicy/policy/modules/contrib/ccs.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/ccs.if	2012-09-27 20:03:30.736126498 +0200
@@ -1,4 +1,4 @@
-## <summary>Cluster Configuration System</summary>
+## <summary>Cluster Configuration System.</summary>
 
 ########################################
 ## <summary>
@@ -15,6 +15,7 @@
 		type ccs_t, ccs_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, ccs_exec_t, ccs_t)
 ')
 
@@ -52,12 +53,14 @@
 		type cluster_conf_t;
 	')
 
+	files_search_etc($1)
 	read_files_pattern($1, cluster_conf_t, cluster_conf_t)
 ')
 
 ########################################
 ## <summary>
-##	Manage cluster configuration files.
+##	Create, read, write, and delete
+##	cluster configuration files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -70,6 +73,55 @@
 		type cluster_conf_t;
 	')
 
+	files_search_etc($1)
 	manage_dirs_pattern($1, cluster_conf_t, cluster_conf_t)
 	manage_files_pattern($1, cluster_conf_t, cluster_conf_t)
 ')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an ccs environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`ccs_admin',`
+	gen_require(`
+		type ccs_t, ccs_initrc_exec_t, cluster_conf_t;
+		type ccs_var_lib_t_t, ccs_var_log_t;
+		type ccs_var_run_t, ccs_tmp_t;
+	')
+
+	allow $1 ccs_t:process { ptrace signal_perms };
+	ps_process_pattern($1, ccs_t)
+
+	init_labeled_script_domtrans($1, ccs_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 ccs_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_etc($1)
+	admin_pattern($1, ccs_conf_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, ccs_var_lib_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, ccs_var_log_t)
+
+	files_search_pids($1)
+	admin_pattern($1, ccs_var_run_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, ccs_tmp_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ccs.te refpolicy/policy/modules/contrib/ccs.te
--- refpolicy/policy/modules/contrib/ccs.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/ccs.te	2012-09-27 20:03:30.737126498 +0200
@@ -1,4 +1,4 @@
-policy_module(ccs, 1.5.0)
+policy_module(ccs, 1.5.2)
 
 ########################################
 #
@@ -9,8 +9,11 @@
 type ccs_exec_t;
 init_daemon_domain(ccs_t, ccs_exec_t)
 
+type ccs_initrc_exec_t;
+init_script_file(ccs_initrc_exec_t)
+
 type cluster_conf_t;
-files_type(cluster_conf_t)
+files_config_file(cluster_conf_t)
 
 type ccs_tmp_t;
 files_tmp_file(ccs_tmp_t)
@@ -29,48 +32,44 @@
 
 ########################################
 #
-# ccs local policy
+# Local policy
 #
 
 allow ccs_t self:capability { ipc_owner ipc_lock sys_nice sys_resource sys_admin };
 allow ccs_t self:process { signal setrlimit setsched };
 dontaudit ccs_t self:process ptrace;
 allow ccs_t self:fifo_file rw_fifo_file_perms;
-allow ccs_t self:unix_stream_socket { connectto create_stream_socket_perms };
-allow ccs_t self:unix_dgram_socket create_socket_perms;
+allow ccs_t self:unix_stream_socket { accept connectto listen };
 allow ccs_t self:netlink_route_socket r_netlink_socket_perms;
 allow ccs_t self:tcp_socket create_stream_socket_perms;
 allow ccs_t self:udp_socket { create_socket_perms listen recv_msg send_msg };
-# cjp: this needs to be fixed to be specific
 allow ccs_t self:socket create_socket_perms;
 
 manage_files_pattern(ccs_t, cluster_conf_t, cluster_conf_t)
 
-# tmp file
 allow ccs_t ccs_tmp_t:dir manage_dir_perms;
 manage_dirs_pattern(ccs_t, ccs_tmp_t, ccs_tmp_t)
 manage_files_pattern(ccs_t, ccs_tmp_t, ccs_tmp_t)
-files_tmp_filetrans(ccs_t, ccs_tmp_t, { file dir })
+files_tmp_filetrans(ccs_t, ccs_tmp_t, { dir file })
 
 manage_dirs_pattern(ccs_t, ccs_tmpfs_t, ccs_tmpfs_t)
 manage_files_pattern(ccs_t, ccs_tmpfs_t, ccs_tmpfs_t)
 fs_tmpfs_filetrans(ccs_t, ccs_tmpfs_t, { dir file })
 
-# var lib files
 manage_dirs_pattern(ccs_t, ccs_var_lib_t, ccs_var_lib_t)
 manage_files_pattern(ccs_t, ccs_var_lib_t, ccs_var_lib_t)
-files_var_lib_filetrans(ccs_t, ccs_var_lib_t, { file dir })
+files_var_lib_filetrans(ccs_t, ccs_var_lib_t, { dir file })
 
-allow ccs_t ccs_var_log_t:dir setattr;
-manage_files_pattern(ccs_t, ccs_var_log_t, ccs_var_log_t)
+allow ccs_t ccs_var_log_t:dir setattr_dir_perms;
+append_files_pattern(ccs_t, ccs_var_log_t, ccs_var_log_t)
+create_files_pattern(ccs_t, ccs_var_log_t, ccs_var_log_t)
+setattr_files_pattern(ccs_t, ccs_var_log_t, ccs_var_log_t)
 manage_sock_files_pattern(ccs_t, ccs_var_log_t, ccs_var_log_t)
-logging_log_filetrans(ccs_t, ccs_var_log_t, { sock_file file dir })
+logging_log_filetrans(ccs_t, ccs_var_log_t, { file sock_file })
 
-# pid file
-manage_dirs_pattern(ccs_t, ccs_var_run_t, ccs_var_run_t)
 manage_files_pattern(ccs_t, ccs_var_run_t, ccs_var_run_t)
 manage_sock_files_pattern(ccs_t, ccs_var_run_t, ccs_var_run_t)
-files_pid_filetrans(ccs_t, ccs_var_run_t, { dir file sock_file })
+files_pid_filetrans(ccs_t, ccs_var_run_t, { file sock_file })
 
 kernel_read_kernel_sysctls(ccs_t)
 
@@ -83,12 +82,16 @@
 corenet_udp_sendrecv_generic_if(ccs_t)
 corenet_tcp_sendrecv_generic_node(ccs_t)
 corenet_udp_sendrecv_generic_node(ccs_t)
-corenet_tcp_sendrecv_all_ports(ccs_t)
-corenet_udp_sendrecv_all_ports(ccs_t)
 corenet_tcp_bind_generic_node(ccs_t)
 corenet_udp_bind_generic_node(ccs_t)
+
+corenet_sendrecv_cluster_server_packets(ccs_t)
 corenet_tcp_bind_cluster_port(ccs_t)
+corenet_tcp_sendrecv_cluster_port(ccs_t)
 corenet_udp_bind_cluster_port(ccs_t)
+corenet_udp_sendrecv_cluster_port(ccs_t)
+
+corenet_sendrecv_netsupport_server_packets(ccs_t)
 corenet_udp_bind_netsupport_port(ccs_t)
 
 dev_read_urand(ccs_t)
@@ -107,7 +110,7 @@
 userdom_manage_unpriv_user_shared_mem(ccs_t)
 userdom_manage_unpriv_user_semaphores(ccs_t)
 
-ifdef(`hide_broken_symptoms', `
+ifdef(`hide_broken_symptoms',`
 	corecmd_dontaudit_write_bin_dirs(ccs_t)
 	files_manage_isid_type_files(ccs_t)
 ')
@@ -118,5 +121,10 @@
 ')
 
 optional_policy(`
+	qpidd_rw_semaphores(ccs_t)
+	qpidd_rw_shm(ccs_t)
+')
+
+optional_policy(`
 	unconfined_use_fds(ccs_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cdrecord.fc refpolicy/policy/modules/contrib/cdrecord.fc
--- refpolicy/policy/modules/contrib/cdrecord.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cdrecord.fc	2012-09-27 20:03:30.737126498 +0200
@@ -1,6 +1,3 @@
-#
-# /usr
-#
 /usr/bin/cdrecord	--	gen_context(system_u:object_r:cdrecord_exec_t,s0)
 /usr/bin/growisofs	--	gen_context(system_u:object_r:cdrecord_exec_t,s0)
-/usr/bin/wodim		--	gen_context(system_u:object_r:cdrecord_exec_t,s0)
+/usr/bin/wodim	--	gen_context(system_u:object_r:cdrecord_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cdrecord.if refpolicy/policy/modules/contrib/cdrecord.if
--- refpolicy/policy/modules/contrib/cdrecord.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/cdrecord.if	2012-09-27 20:03:30.737126498 +0200
@@ -1,8 +1,8 @@
-## <summary>Policy for cdrecord</summary>
+## <summary>Record audio or data Compact Discs from a master.</summary>
 
 ########################################
 ## <summary>
-##	Role access for cdrecord
+##	Role access for cdrecord.
 ## </summary>
 ## <param name="role">
 ##	<summary>
@@ -17,17 +17,16 @@
 #
 interface(`cdrecord_role',`
 	gen_require(`
+		attribute_role cdrecord_roles;
 		type cdrecord_t, cdrecord_exec_t;
 	')
 
-	role $1 types cdrecord_t;
+	roleattribute $1 cdrecord_roles;
 
-	# Transition from the user domain to the derived domain.
 	domtrans_pattern($2, cdrecord_exec_t, cdrecord_t)
 
-	allow cdrecord_t $2:unix_stream_socket { getattr read write ioctl };
+	allow cdrecord_t $2:unix_stream_socket rw_socket_perms;
 
-	# allow ps to show cdrecord and allow the user to kill it 
+	allow $2 cdrecord_t:process { ptrace signal_perms };
 	ps_process_pattern($2, cdrecord_t)
-	allow $2 cdrecord_t:process signal;
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cdrecord.te refpolicy/policy/modules/contrib/cdrecord.te
--- refpolicy/policy/modules/contrib/cdrecord.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cdrecord.te	2012-09-27 20:03:30.737126498 +0200
@@ -1,4 +1,4 @@
-policy_module(cdrecord, 2.5.0)
+policy_module(cdrecord, 2.5.2)
 
 ########################################
 #
@@ -6,19 +6,23 @@
 #
 
 ## <desc>
-## <p>
-## Allow cdrecord to read various content.
-## nfs, samba, removable devices, user temp
-## and untrusted content files
-## </p>
+##	<p>
+##	Determine whether cdrecord can read
+##	various content. nfs, samba, removable
+##	devices, user temp and untrusted
+##	content files
+##	</p>
 ## </desc>
 gen_tunable(cdrecord_read_content, false)
 
+attribute_role cdrecord_roles;
+
 type cdrecord_t;
 type cdrecord_exec_t;
 typealias cdrecord_t alias { user_cdrecord_t staff_cdrecord_t sysadm_cdrecord_t };
 typealias cdrecord_t alias { auditadm_cdrecord_t secadm_cdrecord_t };
 userdom_user_application_domain(cdrecord_t, cdrecord_exec_t)
+role cdrecord_roles types cdrecord_t;
 
 ########################################
 #
@@ -27,13 +31,10 @@
 
 allow cdrecord_t self:capability { ipc_lock sys_nice setuid dac_override sys_rawio };
 allow cdrecord_t self:process { getcap getsched setrlimit setsched sigkill };
-allow cdrecord_t self:unix_dgram_socket create_socket_perms;
-allow cdrecord_t self:unix_stream_socket create_stream_socket_perms;
+allow cdrecord_t self:unix_stream_socket { accept listen };
 
-# growisofs uses mkisofs
 corecmd_exec_bin(cdrecord_t)
 
-# allow searching for cdrom-drive
 dev_list_all_dev_nodes(cdrecord_t)
 dev_read_sysfs(cdrecord_t)
 
@@ -45,7 +46,6 @@
 term_use_controlling_term(cdrecord_t)
 term_list_ptys(cdrecord_t)
 
-# allow cdrecord to write the CD
 storage_raw_read_removable_device(cdrecord_t)
 storage_raw_write_removable_device(cdrecord_t)
 storage_write_scsi_generic(cdrecord_t)
@@ -54,24 +54,21 @@
 
 miscfiles_read_localization(cdrecord_t)
 
-# write to the user domain tty.
 userdom_use_user_terminals(cdrecord_t)
 userdom_read_user_home_content_files(cdrecord_t)
 
-# Handle nfs home dirs
 tunable_policy(`cdrecord_read_content && use_nfs_home_dirs',`
 	fs_list_auto_mountpoints(cdrecord_t)
 	files_list_home(cdrecord_t)
 	fs_read_nfs_files(cdrecord_t)
 	fs_read_nfs_symlinks(cdrecord_t)
-
 ',`
 	files_dontaudit_list_home(cdrecord_t)
 	fs_dontaudit_list_auto_mountpoints(cdrecord_t)
 	fs_dontaudit_read_nfs_files(cdrecord_t)
 	fs_dontaudit_list_nfs(cdrecord_t)
 ')
-# Handle samba home dirs
+
 tunable_policy(`cdrecord_read_content && use_samba_home_dirs',`
 	fs_list_auto_mountpoints(cdrecord_t)
 	files_list_home(cdrecord_t)
@@ -84,7 +81,6 @@
 	fs_dontaudit_list_cifs(cdrecord_t)
 ')
 
-# Handle removable media, /tmp, and /home
 tunable_policy(`cdrecord_read_content',`
 	userdom_list_user_tmp(cdrecord_t)
 	userdom_read_user_tmp_files(cdrecord_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/certmaster.fc refpolicy/policy/modules/contrib/certmaster.fc
--- refpolicy/policy/modules/contrib/certmaster.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/certmaster.fc	2012-09-27 20:03:30.737126498 +0200
@@ -1,8 +1,11 @@
-/etc/certmaster(/.*)?			gen_context(system_u:object_r:certmaster_etc_rw_t,s0)
+/etc/certmaster(/.*)?	gen_context(system_u:object_r:certmaster_etc_rw_t,s0)
+
 /etc/rc\.d/init\.d/certmaster	--	gen_context(system_u:object_r:certmaster_initrc_exec_t,s0)
 
-/usr/bin/certmaster		--	gen_context(system_u:object_r:certmaster_exec_t,s0)
+/usr/bin/certmaster	--	gen_context(system_u:object_r:certmaster_exec_t,s0)
+
+/var/lib/certmaster(/.*)?	gen_context(system_u:object_r:certmaster_var_lib_t,s0)
+
+/var/log/certmaster(/.*)?	gen_context(system_u:object_r:certmaster_var_log_t,s0)
 
-/var/lib/certmaster(/.*)?		gen_context(system_u:object_r:certmaster_var_lib_t,s0)
-/var/log/certmaster(/.*)?		gen_context(system_u:object_r:certmaster_var_log_t,s0)
-/var/run/certmaster.*			gen_context(system_u:object_r:certmaster_var_run_t,s0)
+/var/run/certmaster.*	gen_context(system_u:object_r:certmaster_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/certmaster.if refpolicy/policy/modules/contrib/certmaster.if
--- refpolicy/policy/modules/contrib/certmaster.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/certmaster.if	2012-09-27 20:03:30.737126498 +0200
@@ -1,4 +1,4 @@
-## <summary>Certmaster SSL certificate distribution service</summary>
+## <summary>Remote certificate distribution framework.</summary>
 
 ########################################
 ## <summary>
@@ -15,6 +15,7 @@
 		type certmaster_t, certmaster_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, certmaster_exec_t, certmaster_t)
 ')
 
@@ -58,7 +59,7 @@
 
 #######################################
 ## <summary>
-##	Append to certmaster logs.
+##	Append certmaster log files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -78,7 +79,7 @@
 #######################################
 ## <summary>
 ##	Create, read, write, and delete
-##	certmaster logs.
+##	certmaster log content.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -98,8 +99,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an snort environment
+##	All of the rules required to
+##	administrate an certmaster environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -108,7 +109,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the syslog domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -129,7 +130,7 @@
 	allow $2 system_r;
 
 	files_list_etc($1)
-	miscfiles_manage_generic_cert_dirs($1)	
+	miscfiles_manage_generic_cert_dirs($1)
 	miscfiles_manage_generic_cert_files($1)	
 
 	admin_pattern($1, certmaster_etc_rw_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/certmaster.te refpolicy/policy/modules/contrib/certmaster.te
--- refpolicy/policy/modules/contrib/certmaster.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/certmaster.te	2012-09-27 20:03:30.738126498 +0200
@@ -1,4 +1,4 @@
-policy_module(certmaster, 1.2.0)
+policy_module(certmaster, 1.2.1)
 
 ########################################
 #
@@ -26,46 +26,50 @@
 
 ###########################################
 #
-# certmaster local policy
+# Local policy
 #
 
 allow certmaster_t self:capability { dac_read_search dac_override sys_tty_config };
-allow certmaster_t self:tcp_socket create_stream_socket_perms;
+allow certmaster_t self:tcp_socket { accept listen };
 
-# config files
 list_dirs_pattern(certmaster_t, certmaster_etc_rw_t, certmaster_etc_rw_t)
 manage_files_pattern(certmaster_t, certmaster_etc_rw_t, certmaster_etc_rw_t)
 
-# var/lib files for certmaster
 manage_files_pattern(certmaster_t, certmaster_var_lib_t, certmaster_var_lib_t)
 manage_dirs_pattern(certmaster_t, certmaster_var_lib_t, certmaster_var_lib_t)
-files_var_lib_filetrans(certmaster_t, certmaster_var_lib_t, { file dir })
+files_var_lib_filetrans(certmaster_t, certmaster_var_lib_t, { dir file })
 
-# log files
-manage_files_pattern(certmaster_t, certmaster_var_log_t, certmaster_var_log_t)
+append_files_pattern(certmaster_t, certmaster_var_log_t, certmaster_var_log_t)
+create_files_pattern(certmaster_t, certmaster_var_log_t, certmaster_var_log_t)
+setattr_files_pattern(certmaster_t, certmaster_var_log_t, certmaster_var_log_t)
 logging_log_filetrans(certmaster_t, certmaster_var_log_t, file )
 
-# pid file
 manage_files_pattern(certmaster_t, certmaster_var_run_t, certmaster_var_run_t)
 manage_sock_files_pattern(certmaster_t, certmaster_var_run_t, certmaster_var_run_t)
 files_pid_filetrans(certmaster_t ,certmaster_var_run_t, { file sock_file })
 
-# read meminfo
 kernel_read_system_state(certmaster_t)
 
-corecmd_search_bin(certmaster_t)
-corecmd_getattr_bin_files(certmaster_t)
+corecmd_exec_bin(certmaster_t)
 
+corenet_all_recvfrom_unlabeled(certmaster_t)
+corenet_all_recvfrom_netlabel(certmaster_t)
+corenet_tcp_sendrecv_generic_if(certmaster_t)
+corenet_tcp_sendrecv_generic_node(certmaster_t)
 corenet_tcp_bind_generic_node(certmaster_t)
+
+corenet_sendrecv_certmaster_server_packets(certmaster_t)
 corenet_tcp_bind_certmaster_port(certmaster_t)
+corenet_tcp_sendrecv_certmaster_port(certmaster_t)
+
+dev_read_urand(certmaster_t)
 
-files_search_etc(certmaster_t)
 files_list_var(certmaster_t)
-files_search_var_lib(certmaster_t)
+files_search_etc(certmaster_t)
+files_read_usr_files(certmaster_t)
 
 auth_use_nsswitch(certmaster_t)
 
 miscfiles_read_localization(certmaster_t)
-
 miscfiles_manage_generic_cert_dirs(certmaster_t)
 miscfiles_manage_generic_cert_files(certmaster_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/certmonger.fc refpolicy/policy/modules/contrib/certmonger.fc
--- refpolicy/policy/modules/contrib/certmonger.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/certmonger.fc	2012-09-27 20:03:30.738126498 +0200
@@ -1,6 +1,7 @@
 /etc/rc\.d/init\.d/certmonger	--	gen_context(system_u:object_r:certmonger_initrc_exec_t,s0)
 
-/usr/sbin/certmonger		--	gen_context(system_u:object_r:certmonger_exec_t,s0)
+/usr/sbin/certmonger	--	gen_context(system_u:object_r:certmonger_exec_t,s0)
 
-/var/lib/certmonger(/.*)?		gen_context(system_u:object_r:certmonger_var_lib_t,s0)
-/var/run/certmonger.pid		--	gen_context(system_u:object_r:certmonger_var_run_t,s0)
+/var/lib/certmonger(/.*)?	gen_context(system_u:object_r:certmonger_var_lib_t,s0)
+
+/var/run/certmonger.*	gen_context(system_u:object_r:certmonger_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/certmonger.if refpolicy/policy/modules/contrib/certmonger.if
--- refpolicy/policy/modules/contrib/certmonger.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/certmonger.if	2012-09-27 20:03:30.738126498 +0200
@@ -1,4 +1,4 @@
-## <summary>Certificate status monitor and PKI enrollment client</summary>
+## <summary>Certificate status monitor and PKI enrollment client.</summary>
 
 ########################################
 ## <summary>
@@ -15,6 +15,7 @@
 		type certmonger_t, certmonger_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, certmonger_exec_t, certmonger_t)
 ')
 
@@ -41,7 +42,8 @@
 
 ########################################
 ## <summary>
-##	Execute certmonger server in the certmonger domain.
+##	Execute certmonger server in
+##	the certmonger domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -136,8 +138,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an certmonger environment
+##	All of the rules required to
+##	administrate an certmonger environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -160,7 +162,6 @@
 	ps_process_pattern($1, certmonger_t)
 	allow $1 certmonger_t:process { ptrace signal_perms };
 
-	# Allow certmonger_t to restart the apache service
 	certmonger_initrc_domtrans($1)
 	domain_system_change_exemption($1)
 	role_transition $2 certmonger_initrc_exec_t system_r;
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/certmonger.te refpolicy/policy/modules/contrib/certmonger.te
--- refpolicy/policy/modules/contrib/certmonger.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/certmonger.te	2012-09-27 20:03:30.738126498 +0200
@@ -1,4 +1,4 @@
-policy_module(certmonger, 1.1.0)
+policy_module(certmonger, 1.1.2)
 
 ########################################
 #
@@ -12,61 +12,87 @@
 type certmonger_initrc_exec_t;
 init_script_file(certmonger_initrc_exec_t)
 
-type certmonger_var_run_t;
-files_pid_file(certmonger_var_run_t)
-
 type certmonger_var_lib_t;
 files_type(certmonger_var_lib_t)
 
+type certmonger_var_run_t;
+files_pid_file(certmonger_var_run_t)
+
 ########################################
 #
-# certmonger local policy
+# Local policy
 #
 
-allow certmonger_t self:capability { kill sys_nice };
+allow certmonger_t self:capability { dac_override dac_read_search setgid setuid kill sys_nice };
+dontaudit certmonger_t self:capability sys_tty_config;
 allow certmonger_t self:process { getsched setsched sigkill };
-allow certmonger_t self:fifo_file rw_file_perms;
-allow certmonger_t self:unix_stream_socket create_stream_socket_perms;
-allow certmonger_t self:tcp_socket create_stream_socket_perms;
-allow certmonger_t self:netlink_route_socket r_netlink_socket_perms;
+allow certmonger_t self:fifo_file rw_fifo_file_perms;
+allow certmonger_t self:unix_stream_socket { accept listen };
+allow certmonger_t self:tcp_socket { accept listen };
 
 manage_dirs_pattern(certmonger_t, certmonger_var_lib_t, certmonger_var_lib_t)
 manage_files_pattern(certmonger_t, certmonger_var_lib_t, certmonger_var_lib_t)
-files_var_lib_filetrans(certmonger_t, certmonger_var_lib_t, { file dir } )
+files_var_lib_filetrans(certmonger_t, certmonger_var_lib_t, dir)
 
 manage_dirs_pattern(certmonger_t, certmonger_var_run_t, certmonger_var_run_t)
 manage_files_pattern(certmonger_t, certmonger_var_run_t, certmonger_var_run_t)
-files_pid_filetrans(certmonger_t, certmonger_var_run_t, { file dir })
+files_pid_filetrans(certmonger_t, certmonger_var_run_t, { dir file })
+
+kernel_read_kernel_sysctls(certmonger_t)
+kernel_read_system_state(certmonger_t)
 
+corenet_all_recvfrom_unlabeled(certmonger_t)
+corenet_all_recvfrom_netlabel(certmonger_t)
 corenet_tcp_sendrecv_generic_if(certmonger_t)
 corenet_tcp_sendrecv_generic_node(certmonger_t)
-corenet_tcp_sendrecv_all_ports(certmonger_t)
+
+corenet_sendrecv_certmaster_client_packets(certmonger_t)
 corenet_tcp_connect_certmaster_port(certmonger_t)
+corenet_tcp_sendrecv_certmaster_port(certmonger_t)
+
+corecmd_exec_bin(certmonger_t)
+corecmd_exec_shell(certmonger_t)
 
 dev_read_urand(certmonger_t)
 
 domain_use_interactive_fds(certmonger_t)
 
-files_read_etc_files(certmonger_t)
 files_read_usr_files(certmonger_t)
 files_list_tmp(certmonger_t)
 
+auth_use_nsswitch(certmonger_t)
+auth_rw_cache(certmonger_t)
+
+init_getattr_all_script_files(certmonger_t)
+
 logging_send_syslog_msg(certmonger_t)
 
 miscfiles_read_localization(certmonger_t)
 miscfiles_manage_generic_cert_files(certmonger_t)
 
-sysnet_dns_name_resolve(certmonger_t)
+userdom_search_user_home_content(certmonger_t)
+
+optional_policy(`
+	apache_search_config(certmonger_t)
+	apache_signal(certmonger_t)
+	apache_signull(certmonger_t)
+')
+
+optional_policy(`
+	bind_search_cache(certmonger_t)
+')
 
 optional_policy(`
-	dbus_system_bus_client(certmonger_t)
 	dbus_connect_system_bus(certmonger_t)
+	dbus_system_bus_client(certmonger_t)
 ')
 
 optional_policy(`
+	kerberos_read_keytab(certmonger_t)
 	kerberos_use(certmonger_t)
 ')
 
 optional_policy(`
+	pcscd_read_pub_files(certmonger_t)
 	pcscd_stream_connect(certmonger_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/certwatch.fc refpolicy/policy/modules/contrib/certwatch.fc
--- refpolicy/policy/modules/contrib/certwatch.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/certwatch.fc	2012-09-27 20:03:30.738126498 +0200
@@ -1 +1 @@
-/usr/bin/certwatch	-- gen_context(system_u:object_r:certwatch_exec_t,s0)
+/etc/cron\.daily/certwatch	--	gen_context(system_u:object_r:certwatch_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/certwatch.if refpolicy/policy/modules/contrib/certwatch.if
--- refpolicy/policy/modules/contrib/certwatch.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/certwatch.if	2012-09-27 20:03:30.738126498 +0200
@@ -1,4 +1,4 @@
-## <summary>Digital Certificate Tracking</summary>
+## <summary>Digital Certificate Tracking.</summary>
 
 ########################################
 ## <summary>
@@ -15,16 +15,15 @@
 		type certwatch_exec_t, certwatch_t;
 	')
 
-	files_search_usr($1)
 	corecmd_search_bin($1)
 	domtrans_pattern($1, certwatch_exec_t, certwatch_t)
 ')
 
 ########################################
 ## <summary>
-##	Execute certwatch in the certwatch domain, and
-##	allow the specified role the certwatch domain,
-##	and use the caller's terminal. Has a sigchld
+##	Execute certwatch in the certwatch
+##	domain, and allow the specified role
+##	the certwatch domain.
 ##	backchannel.
 ## </summary>
 ## <param name="domain">
@@ -41,11 +40,11 @@
 #
 interface(`certwatch_run',`
 	gen_require(`
-		type certwatch_t;
+		attribute_role certwatch_roles;
 	')
 
 	certwatch_domtrans($1)
-	role $2 types certwatch_t;
+	roleattribute $2 certwatch_roles;
 ')
 
 ########################################
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/certwatch.te refpolicy/policy/modules/contrib/certwatch.te
--- refpolicy/policy/modules/contrib/certwatch.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/certwatch.te	2012-09-27 20:03:30.738126498 +0200
@@ -1,19 +1,23 @@
-policy_module(certwatch, 1.7.0)
+policy_module(certwatch, 1.7.1)
 
 ########################################
 #
 # Declarations
 #
 
+attribute_role certwatch_roles;
+roleattribute system_r certwatch_roles;
+
 type certwatch_t;
 type certwatch_exec_t;
 application_domain(certwatch_t, certwatch_exec_t)
-role system_r types certwatch_t;
+role certwatch_roles types certwatch_t;
 
 ########################################
 #
 # Local policy
 #
+
 allow certwatch_t self:capability sys_nice;
 allow certwatch_t self:process { setsched getsched };
 
@@ -48,6 +52,6 @@
 
 optional_policy(`
 	pcscd_domtrans(certwatch_t)
-	pcscd_stream_connect(certwatch_t)
 	pcscd_read_pub_files(certwatch_t)
+	pcscd_stream_connect(certwatch_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cgroup.fc refpolicy/policy/modules/contrib/cgroup.fc
--- refpolicy/policy/modules/contrib/cgroup.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cgroup.fc	2012-09-24 21:18:06.942582806 +0200
@@ -1,15 +1,19 @@
-/etc/cgconfig.conf		--	gen_context(system_u:object_r:cgconfig_etc_t,s0)
-/etc/cgrules.conf		--	gen_context(system_u:object_r:cgrules_etc_t,s0)
+/etc/cgconfig\.conf	--	gen_context(system_u:object_r:cgconfig_etc_t,s0)
+/etc/cgrules\.conf	--	gen_context(system_u:object_r:cgrules_etc_t,s0)
 
-/etc/sysconfig/cgconfig		--	gen_context(system_u:object_r:cgconfig_etc_t,s0)
-/etc/sysconfig/cgred.conf	--	gen_context(system_u:object_r:cgrules_etc_t,s0)
+/etc/sysconfig/cgconfig	--	gen_context(system_u:object_r:cgconfig_etc_t,s0)
+/etc/sysconfig/cgred\.conf	--	gen_context(system_u:object_r:cgrules_etc_t,s0)
 
 /etc/rc\.d/init\.d/cgconfig	--	gen_context(system_u:object_r:cgconfig_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/cgred	--	gen_context(system_u:object_r:cgred_initrc_exec_t,s0)
 
-/sbin/cgconfigparser		--	gen_context(system_u:object_r:cgconfig_exec_t,s0)
-/sbin/cgrulesengd		--	gen_context(system_u:object_r:cgred_exec_t,s0)
-/sbin/cgclear			--	gen_context(system_u:object_r:cgclear_exec_t,s0)
+/sbin/cgconfigparser	--	gen_context(system_u:object_r:cgconfig_exec_t,s0)
+/sbin/cgrulesengd	--	gen_context(system_u:object_r:cgred_exec_t,s0)
+/sbin/cgclear	--	gen_context(system_u:object_r:cgclear_exec_t,s0)
 
-/var/log/cgrulesengd\.log	--	gen_context(system_u:object_r:cgred_log_t,s0)
-/var/run/cgred.*			gen_context(system_u:object_r:cgred_var_run_t,s0)
+/usr/sbin/cgconfigparser	--	gen_context(system_u:object_r:cgconfig_exec_t,s0)
+/usr/sbin/cgrulesengd	--	gen_context(system_u:object_r:cgred_exec_t,s0)
+/usr/sbin/cgclear	--	gen_context(system_u:object_r:cgclear_exec_t,s0)
+
+/var/log/cgrulesengd\.log.*	--	gen_context(system_u:object_r:cgred_log_t,s0)
+/var/run/cgred.*	gen_context(system_u:object_r:cgred_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cgroup.if refpolicy/policy/modules/contrib/cgroup.if
--- refpolicy/policy/modules/contrib/cgroup.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cgroup.if	2012-09-24 21:18:06.942582806 +0200
@@ -171,29 +171,20 @@
 		type cgrules_etc_t, cgclear_t;
 	')
 
-	allow $1 cgclear_t:process { ptrace signal_perms };
-	ps_process_pattern($1, cgclear_t)
+	allow $1 { cgclear_t cgconfig_t cgred_t }:process { ptrace signal_perms };
+	ps_process_pattern($1, { cgclear_t cgconfig_t cgred_t })
 
-	allow $1 cgconfig_t:process { ptrace signal_perms };
-	ps_process_pattern($1, cgconfig_t)
-
-	allow $1 cgred_t:process { ptrace signal_perms };
-	ps_process_pattern($1, cgred_t)
-
-	admin_pattern($1, cgconfig_etc_t)
-	admin_pattern($1, cgrules_etc_t)
+	admin_pattern($1, { cgconfig_etc_t cgrules_etc_t })
 	files_list_etc($1)
 
 	admin_pattern($1, cgred_var_run_t)
 	files_list_pids($1)
 
 	cgroup_initrc_domtrans_cgconfig($1)
+	cgroup_initrc_domtrans_cgred($1)
 	domain_system_change_exemption($1)
-	role_transition $2 cgconfig_initrc_exec_t system_r;
+	role_transition $2 { cgconfig_initrc_exec_t cgred_initrc_exec_t } system_r;
 	allow $2 system_r;
 
-	cgroup_initrc_domtrans_cgred($1)
-	role_transition $2 cgred_initrc_exec_t system_r;
-
 	cgroup_run_cgclear($1, $2)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cgroup.te refpolicy/policy/modules/contrib/cgroup.te
--- refpolicy/policy/modules/contrib/cgroup.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cgroup.te	2012-09-24 21:18:06.942582806 +0200
@@ -1,4 +1,4 @@
-policy_module(cgroup, 1.1.0)
+policy_module(cgroup, 1.1.2)
 
 ########################################
 #
@@ -42,6 +42,8 @@
 
 allow cgclear_t self:capability { dac_read_search dac_override sys_admin };
 
+allow cgclear_t cgconfig_etc_t:file read_file_perms;
+
 kernel_read_system_state(cgclear_t)
 
 domain_setpriority_all_domains(cgclear_t)
@@ -81,11 +83,11 @@
 allow cgred_t self:netlink_socket { write bind create read };
 allow cgred_t self:unix_dgram_socket { write create connect };
 
-manage_files_pattern(cgred_t, cgred_log_t, cgred_log_t)
-logging_log_filetrans(cgred_t, cgred_log_t, file)
-
 allow cgred_t cgrules_etc_t:file read_file_perms;
 
+allow cgred_t cgred_log_t:file manage_file_perms;
+logging_log_filetrans(cgred_t, cgred_log_t, file)
+
 # rc script creates pid file
 manage_files_pattern(cgred_t, cgred_var_run_t, cgred_var_run_t)
 manage_sock_files_pattern(cgred_t, cgred_var_run_t, cgred_var_run_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/chronyd.fc refpolicy/policy/modules/contrib/chronyd.fc
--- refpolicy/policy/modules/contrib/chronyd.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/chronyd.fc	2012-09-27 20:03:30.739126498 +0200
@@ -1,9 +1,13 @@
-/etc/chrony\.keys		--	gen_context(system_u:object_r:chronyd_keys_t,s0)
+/etc/chrony\.keys	--	gen_context(system_u:object_r:chronyd_keys_t,s0)
 
 /etc/rc\.d/init\.d/chronyd	--	gen_context(system_u:object_r:chronyd_initrc_exec_t,s0)
 
-/usr/sbin/chronyd		--	gen_context(system_u:object_r:chronyd_exec_t,s0)
+/usr/sbin/chronyd	--	gen_context(system_u:object_r:chronyd_exec_t,s0)
 
-/var/lib/chrony(/.*)?			gen_context(system_u:object_r:chronyd_var_lib_t,s0)
-/var/log/chrony(/.*)?			gen_context(system_u:object_r:chronyd_var_log_t,s0)
-/var/run/chronyd\.pid		--	gen_context(system_u:object_r:chronyd_var_run_t,s0)
+/var/lib/chrony(/.*)?	gen_context(system_u:object_r:chronyd_var_lib_t,s0)
+
+/var/log/chrony(/.*)?	gen_context(system_u:object_r:chronyd_var_log_t,s0)
+
+/var/run/chronyd(/.*)	gen_context(system_u:object_r:chronyd_var_run_t,s0)
+/var/run/chronyd\.pid	--	gen_context(system_u:object_r:chronyd_var_run_t,s0)
+/var/run/chronyd\.sock	-s	gen_context(system_u:object_r:chronyd_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/chronyd.if refpolicy/policy/modules/contrib/chronyd.if
--- refpolicy/policy/modules/contrib/chronyd.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/chronyd.if	2012-09-27 20:03:30.739126498 +0200
@@ -1,4 +1,4 @@
-## <summary>Chrony NTP background daemon</summary>
+## <summary>Chrony NTP background daemon.</summary>
 
 #####################################
 ## <summary>
@@ -21,7 +21,7 @@
 
 ####################################
 ## <summary>
-##	Execute chronyd
+##	Execute chronyd in the caller domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -34,12 +34,13 @@
 		type chronyd_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	can_exec($1, chronyd_exec_t)
 ')
 
 #####################################
 ## <summary>
-##	Read chronyd logs.
+##	Read chronyd log files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -58,8 +59,8 @@
 
 ####################################
 ## <summary>
-##	All of the rules required to administrate
-##	an chronyd environment
+##	All of the rules required to
+##	administrate an chronyd environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -68,7 +69,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the chronyd domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -99,7 +100,4 @@
 
 	files_search_pids($1)
 	admin_pattern($1, chronyd_var_run_t)
-
-	files_search_tmp($1)
-	admin_pattern($1, chronyd_tmp_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/chronyd.te refpolicy/policy/modules/contrib/chronyd.te
--- refpolicy/policy/modules/contrib/chronyd.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/chronyd.te	2012-09-27 20:03:30.739126498 +0200
@@ -1,4 +1,4 @@
-policy_module(chronyd, 1.1.0)
+policy_module(chronyd, 1.1.1)
 
 ########################################
 #
@@ -15,6 +15,9 @@
 type chronyd_keys_t;
 files_type(chronyd_keys_t)
 
+type chronyd_tmpfs_t;
+files_tmpfs_file(chronyd_tmpfs_t)
+
 type chronyd_var_lib_t;
 files_type(chronyd_var_lib_t)
 
@@ -30,31 +33,49 @@
 #
 
 allow chronyd_t self:capability { dac_override ipc_lock setuid setgid sys_resource sys_time };
-allow chronyd_t self:process { getcap setcap setrlimit };
+allow chronyd_t self:process { getcap setcap setrlimit signal };
 allow chronyd_t self:shm create_shm_perms;
-allow chronyd_t self:udp_socket create_socket_perms;
-allow chronyd_t self:unix_dgram_socket create_socket_perms;
+allow chronyd_t self:fifo_file rw_fifo_file_perms;
 
 allow chronyd_t chronyd_keys_t:file read_file_perms;
 
+manage_dirs_pattern(chronyd_t, chronyd_tmpfs_t, chronyd_tmpfs_t)
+manage_files_pattern(chronyd_t, chronyd_tmpfs_t, chronyd_tmpfs_t)
+fs_tmpfs_filetrans(chronyd_t, chronyd_tmpfs_t, { dir file })
+
 manage_files_pattern(chronyd_t, chronyd_var_lib_t, chronyd_var_lib_t)
 manage_dirs_pattern(chronyd_t, chronyd_var_lib_t, chronyd_var_lib_t)
 manage_sock_files_pattern(chronyd_t, chronyd_var_lib_t, chronyd_var_lib_t)
-files_var_lib_filetrans(chronyd_t, chronyd_var_lib_t, { file dir })
+files_var_lib_filetrans(chronyd_t, chronyd_var_lib_t, dir)
 
-manage_files_pattern(chronyd_t, chronyd_var_log_t, chronyd_var_log_t)
 manage_dirs_pattern(chronyd_t, chronyd_var_log_t, chronyd_var_log_t)
-logging_log_filetrans(chronyd_t, chronyd_var_log_t, { file dir })
+append_files_pattern(chronyd_t, chronyd_var_log_t, chronyd_var_log_t)
+create_files_pattern(chronyd_t, chronyd_var_log_t, chronyd_var_log_t)
+setattr_files_pattern(chronyd_t, chronyd_var_log_t, chronyd_var_log_t)
+logging_log_filetrans(chronyd_t, chronyd_var_log_t, dir)
 
-manage_files_pattern(chronyd_t, chronyd_var_run_t, chronyd_var_run_t)
 manage_dirs_pattern(chronyd_t, chronyd_var_run_t, chronyd_var_run_t)
-files_pid_filetrans(chronyd_t, chronyd_var_run_t, file)
+manage_files_pattern(chronyd_t, chronyd_var_run_t, chronyd_var_run_t)
+manage_sock_files_pattern(chronyd_t, chronyd_var_run_t, chronyd_var_run_t)
+files_pid_filetrans(chronyd_t, chronyd_var_run_t, { dir file sock_file })
+
+kernel_read_system_state(chronyd_t)
+kernel_read_network_state(chronyd_t)
 
+corenet_all_recvfrom_unlabeled(chronyd_t)
+corenet_all_recvfrom_netlabel(chronyd_t)
+corenet_udp_sendrecv_generic_if(chronyd_t)
+corenet_udp_sendrecv_generic_node(chronyd_t)
+corenet_udp_bind_generic_node(chronyd_t)
+
+corenet_sendrecv_ntp_server_packets(chronyd_t)
 corenet_udp_bind_ntp_port(chronyd_t)
-# bind to udp/323
+corenet_udp_sendrecv_ntp_port(chronyd_t)
+
+corenet_sendrecv_chronyd_server_packets(chronyd_t)
 corenet_udp_bind_chronyd_port(chronyd_t)
+corenet_udp_sendrecv_chronyd_port(chronyd_t)
 
-# real time clock option
 dev_rw_realtime_clock(chronyd_t)
 
 auth_use_nsswitch(chronyd_t)
@@ -66,3 +87,7 @@
 optional_policy(`
 	gpsd_rw_shm(chronyd_t)
 ')
+
+optional_policy(`
+	mta_send_mail(chronyd_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cipe.fc refpolicy/policy/modules/contrib/cipe.fc
--- refpolicy/policy/modules/contrib/cipe.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cipe.fc	2012-09-27 20:03:30.739126498 +0200
@@ -1,4 +1,3 @@
-#
-# /usr
-#
+/etc/rc\.d/init\.d/ciped.*	--	gen_context(system_u:object_r:ciped_initrc_exec_t,s0)
+
 /usr/sbin/ciped.*	--	gen_context(system_u:object_r:ciped_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cipe.if refpolicy/policy/modules/contrib/cipe.if
--- refpolicy/policy/modules/contrib/cipe.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cipe.if	2012-09-27 20:03:30.739126498 +0200
@@ -1 +1,32 @@
-## <summary>Encrypted tunnel daemon</summary>
+## <summary>Encrypted tunnel daemon.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an cipe environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`cipe_admin',`
+	gen_require(`
+		type ciped_t, ciped_initrc_exec_t;
+	')
+
+	allow $1 ciped_t:process { ptrace signal_perms };
+	ps_process_pattern($1, ciped_t)
+
+	init_labeled_script_domtrans($1, ciped_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 ciped_initrc_exec_t system_r;
+	allow $2 system_r;
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cipe.te refpolicy/policy/modules/contrib/cipe.te
--- refpolicy/policy/modules/contrib/cipe.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cipe.te	2012-09-27 20:03:30.739126498 +0200
@@ -1,4 +1,4 @@
-policy_module(cipe, 1.5.0)
+policy_module(cipe, 1.5.1)
 
 ########################################
 #
@@ -9,6 +9,9 @@
 type ciped_exec_t;
 init_daemon_domain(ciped_t, ciped_exec_t)
 
+type ciped_initrc_exec_t;
+init_script_file(ciped_initrc_exec_t)
+
 ########################################
 #
 # Local policy
@@ -18,8 +21,6 @@
 dontaudit ciped_t self:capability sys_tty_config;
 allow ciped_t self:process signal_perms;
 allow ciped_t self:fifo_file rw_fifo_file_perms;
-allow ciped_t self:unix_dgram_socket create_socket_perms;
-allow ciped_t self:unix_stream_socket create_socket_perms;
 allow ciped_t self:udp_socket create_socket_perms;
 
 kernel_read_kernel_sysctls(ciped_t)
@@ -32,15 +33,14 @@
 corenet_all_recvfrom_netlabel(ciped_t)
 corenet_udp_sendrecv_generic_if(ciped_t)
 corenet_udp_sendrecv_generic_node(ciped_t)
-corenet_udp_sendrecv_all_ports(ciped_t)
 corenet_udp_bind_generic_node(ciped_t)
-# cipe uses the afs3-bos port (udp 7007)
-corenet_udp_bind_afs_bos_port(ciped_t)
+
 corenet_sendrecv_afs_bos_server_packets(ciped_t)
+corenet_udp_bind_afs_bos_port(ciped_t)
+corenet_udp_sendrecv_afs_bos_port(ciped_t)
 
-dev_read_sysfs(ciped_t)
 dev_read_rand(ciped_t)
-# for SSP
+dev_read_sysfs(ciped_t)
 dev_read_urand(ciped_t)
 
 domain_use_interactive_fds(ciped_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/clamav.fc refpolicy/policy/modules/contrib/clamav.fc
--- refpolicy/policy/modules/contrib/clamav.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/clamav.fc	2012-09-27 20:03:30.739126498 +0200
@@ -1,20 +1,27 @@
-/etc/clamav(/.*)?			gen_context(system_u:object_r:clamd_etc_t,s0)
-/etc/rc\.d/init\.d/clamd-wrapper --	gen_context(system_u:object_r:clamd_initrc_exec_t,s0)
+/etc/clamav(/.*)?	gen_context(system_u:object_r:clamd_etc_t,s0)
 
-/usr/bin/clamscan		--	gen_context(system_u:object_r:clamscan_exec_t,s0)
-/usr/bin/clamdscan		--	gen_context(system_u:object_r:clamscan_exec_t,s0)
-/usr/bin/freshclam		--	gen_context(system_u:object_r:freshclam_exec_t,s0)
-
-/usr/sbin/clamd			--	gen_context(system_u:object_r:clamd_exec_t,s0)
-/usr/sbin/clamav-milter		--	gen_context(system_u:object_r:clamd_exec_t,s0)
-
-/var/clamav(/.*)?			gen_context(system_u:object_r:clamd_var_lib_t,s0)
-/var/lib/clamav(/.*)?			gen_context(system_u:object_r:clamd_var_lib_t,s0)
-/var/log/clamav.*			gen_context(system_u:object_r:clamd_var_log_t,s0)
+/etc/rc\.d/init\.d/clamd-wrapper	--	gen_context(system_u:object_r:clamd_initrc_exec_t,s0)
+
+/usr/bin/clamscan	--	gen_context(system_u:object_r:clamscan_exec_t,s0)
+/usr/bin/clamdscan	--	gen_context(system_u:object_r:clamscan_exec_t,s0)
+/usr/bin/freshclam	--	gen_context(system_u:object_r:freshclam_exec_t,s0)
+
+/usr/sbin/clamd	--	gen_context(system_u:object_r:clamd_exec_t,s0)
+/usr/sbin/clamav-milter	--	gen_context(system_u:object_r:clamd_exec_t,s0)
+
+/var/clamav(/.*)?	gen_context(system_u:object_r:clamd_var_lib_t,s0)
+
+/var/lib/clamav(/.*)?	gen_context(system_u:object_r:clamd_var_lib_t,s0)
+/var/lib/clamd.*	gen_context(system_u:object_r:clamd_var_lib_t,s0)
+
+/var/log/clamav.*	gen_context(system_u:object_r:clamd_var_log_t,s0)
+/var/log/freshclam.*	--	gen_context(system_u:object_r:freshclam_var_log_t,s0)
 /var/log/clamav/freshclam.*	--	gen_context(system_u:object_r:freshclam_var_log_t,s0)
-/var/log/clamd.*			gen_context(system_u:object_r:clamd_var_log_t,s0)
+/var/log/clamd.*	gen_context(system_u:object_r:clamd_var_log_t,s0)
+
 /var/run/amavis(d)?/clamd\.pid	--	gen_context(system_u:object_r:clamd_var_run_t,s0)
-/var/run/clamav.*			gen_context(system_u:object_r:clamd_var_run_t,s0)
-/var/run/clamd.*			gen_context(system_u:object_r:clamd_var_run_t,s0)
+/var/run/clamav.*	gen_context(system_u:object_r:clamd_var_run_t,s0)
+/var/run/clamd.*	gen_context(system_u:object_r:clamd_var_run_t,s0)
+
 /var/spool/amavisd/clamd\.sock	-s	gen_context(system_u:object_r:clamd_var_run_t,s0)
-/var/spool/MailScanner(/.*)?		gen_context(system_u:object_r:clamd_var_run_t,s0)
+/var/spool/MailScanner(/.*)?	gen_context(system_u:object_r:clamd_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/clamav.if refpolicy/policy/modules/contrib/clamav.if
--- refpolicy/policy/modules/contrib/clamav.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/clamav.if	2012-09-27 20:03:30.739126498 +0200
@@ -1,4 +1,4 @@
-## <summary>ClamAV Virus Scanner</summary>
+## <summary>ClamAV Virus Scanner.</summary>
 
 ########################################
 ## <summary>
@@ -15,12 +15,14 @@
 		type clamd_t, clamd_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, clamd_exec_t, clamd_t)
 ')
 
 ########################################
 ## <summary>
-##	Connect to run clamd.
+##	Connect to clamd using a unix
+##	domain stream socket.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -33,13 +35,13 @@
 		type clamd_t, clamd_var_run_t;
 	')
 
+	files_search_pids($1)
 	stream_connect_pattern($1, clamd_var_run_t, clamd_var_run_t, clamd_t)
 ')
 
 ########################################
 ## <summary>
-##	Allow the specified domain to append
-##	to clamav log files.
+##	Append clamav log files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -59,6 +61,26 @@
 
 ########################################
 ## <summary>
+##	Create, read, write and delete clamav pid content
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+#
+interface(`clamav_manage_pid_content',`
+	gen_require(`
+		type clamd_var_run_t;
+	')
+
+	files_search_pids($1)
+	manage_dirs_pattern($1, clamd_var_run_t, clamd_var_run_t)
+	manage_files_pattern($1, clamd_var_run_t, clamd_var_run_t)
+')
+
+########################################
+## <summary>
 ##	Read clamav configuration files.
 ## </summary>
 ## <param name="domain">
@@ -78,7 +100,7 @@
 
 ########################################
 ## <summary>
-##	Search clamav libraries directories.
+##	Search clamav library directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -110,12 +132,13 @@
 		type clamscan_t, clamscan_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, clamscan_exec_t, clamscan_t)
 ')
 
 ########################################
 ## <summary>
-##	Execute clamscan without a transition.
+##	Execute clamscan in the caller domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -128,13 +151,35 @@
 		type clamscan_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	can_exec($1, clamscan_exec_t)
 ')
 
+#######################################
+## <summary>
+##	Read clamd process state files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`clamav_read_state_clamd',`
+	gen_require(`
+		type clamd_t;
+	')
+
+	kernel_search_proc($1)
+	allow $1 clamd_t:dir list_dir_perms;
+	read_files_pattern($1, clamd_t, clamd_t)
+	read_lnk_files_pattern($1, clamd_t, clamd_t)
+')
+
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an clamav environment
+##	All of the rules required to
+##	administrate an clamav environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -143,7 +188,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the clamav domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -151,20 +196,13 @@
 interface(`clamav_admin',`
 	gen_require(`
 		type clamd_t, clamd_etc_t, clamd_tmp_t;
-		type clamd_var_log_t, clamd_var_lib_t;
+		type clamd_var_log_t, clamd_var_lib_t, clamd_initrc_exec_t;
 		type clamd_var_run_t, clamscan_t, clamscan_tmp_t;
-		type clamd_initrc_exec_t;
 		type freshclam_t, freshclam_var_log_t;
 	')
 
-	allow $1 clamd_t:process { ptrace signal_perms };
-	ps_process_pattern($1, clamd_t)
-
-	allow $1 clamscan_t:process { ptrace signal_perms };
-	ps_process_pattern($1, clamscan_t)
-
-	allow $1 freshclam_t:process { ptrace signal_perms };
-	ps_process_pattern($1, freshclam_t)
+	allow $1 { clamd_t clamscan_t freshclam_t }:process { ptrace signal_perms };
+	ps_process_pattern($1, { clamd_t clamscan_t freshclam_t })
 
 	init_labeled_script_domtrans($1, clamd_initrc_exec_t)
 	domain_system_change_exemption($1)
@@ -178,15 +216,11 @@
 	admin_pattern($1, clamd_var_lib_t)
 
 	logging_list_logs($1)
-	admin_pattern($1, clamd_var_log_t)
+	admin_pattern($1, { clamd_var_log_t freshclam_var_log_t })
 
 	files_list_pids($1)
 	admin_pattern($1, clamd_var_run_t)
 
 	files_list_tmp($1)
-	admin_pattern($1, clamd_tmp_t)
-
-	admin_pattern($1, clamscan_tmp_t)
-
-	admin_pattern($1, freshclam_var_log_t)
+	admin_pattern($1, { clamd_tmp_t clamscan_tmp_t })
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/clamav.te refpolicy/policy/modules/contrib/clamav.te
--- refpolicy/policy/modules/contrib/clamav.te	2012-07-25 20:33:04.000000000 +0200
+++ refpolicy/policy/modules/contrib/clamav.te	2012-09-27 20:03:30.740126498 +0200
@@ -1,9 +1,25 @@
-policy_module(clamav, 1.10.0)
+policy_module(clamav, 1.10.3)
 
 ## <desc>
-## <p>
-## Allow clamd to use JIT compiler
-## </p>
+##	<p>
+##	Determine whether clamscan can
+##	read user content files.
+##	</p>
+## </desc>
+gen_tunable(clamav_read_user_content_files_clamscan, false)
+
+## <desc>
+##	<p>
+##	Determine whether clamscan can read
+##	all non-security files.
+##	</p>
+## </desc>
+gen_tunable(clamav_read_all_non_security_files_clamscan, false)
+
+## <desc>
+##	<p>
+##	Determine whether can clamd use JIT compiler.
+##	</p>
 ## </desc>
 gen_tunable(clamd_use_jit, false)
 
@@ -12,31 +28,25 @@
 # Declarations
 #
 
-# Main clamd domain
 type clamd_t;
 type clamd_exec_t;
 init_daemon_domain(clamd_t, clamd_exec_t)
 
-# configuration files
 type clamd_etc_t;
 files_config_file(clamd_etc_t)
 
 type clamd_initrc_exec_t;
 init_script_file(clamd_initrc_exec_t)
 
-# tmp files
 type clamd_tmp_t;
 files_tmp_file(clamd_tmp_t)
 
-# log files
 type clamd_var_log_t;
 logging_log_file(clamd_var_log_t)
 
-# var/lib files
 type clamd_var_lib_t;
 files_type(clamd_var_lib_t)
 
-# pid files
 type clamd_var_run_t;
 files_pid_file(clamd_var_run_t)
 typealias clamd_var_run_t alias clamd_sock_t;
@@ -45,7 +55,6 @@
 type clamscan_exec_t;
 init_daemon_domain(clamscan_t, clamscan_exec_t)
 
-# tmp files
 type clamscan_tmp_t;
 files_tmp_file(clamscan_tmp_t)
 
@@ -53,45 +62,43 @@
 type freshclam_exec_t;
 init_daemon_domain(freshclam_t, freshclam_exec_t)
 
-# log files
 type freshclam_var_log_t;
 logging_log_file(freshclam_var_log_t)
 
 ########################################
 #
-# clamd local policy
+# Clamd local policy
 #
 
 allow clamd_t self:capability { kill setgid setuid dac_override };
 dontaudit clamd_t self:capability sys_tty_config;
+allow clamd_t self:process signal;
 allow clamd_t self:fifo_file rw_fifo_file_perms;
-allow clamd_t self:unix_stream_socket { create_stream_socket_perms connectto };
-allow clamd_t self:unix_dgram_socket create_socket_perms;
+allow clamd_t self:unix_stream_socket { accept connectto listen };
 allow clamd_t self:tcp_socket { listen accept };
 
-# configuration files
 allow clamd_t clamd_etc_t:dir list_dir_perms;
 read_files_pattern(clamd_t, clamd_etc_t, clamd_etc_t)
 read_lnk_files_pattern(clamd_t, clamd_etc_t, clamd_etc_t)
 
-# tmp files
 manage_dirs_pattern(clamd_t, clamd_tmp_t, clamd_tmp_t)
 manage_files_pattern(clamd_t, clamd_tmp_t, clamd_tmp_t)
 files_tmp_filetrans(clamd_t, clamd_tmp_t, { file dir })
 
-# var/lib files for clamd
 manage_dirs_pattern(clamd_t, clamd_var_lib_t, clamd_var_lib_t)
 manage_files_pattern(clamd_t, clamd_var_lib_t, clamd_var_lib_t)
+manage_sock_files_pattern(clamd_t, clamd_var_lib_t, clamd_var_lib_t)
 
-# log files
 manage_dirs_pattern(clamd_t, clamd_var_log_t, clamd_var_log_t)
-manage_files_pattern(clamd_t, clamd_var_log_t, clamd_var_log_t)
+append_files_pattern(clamd_t, clamd_var_log_t, clamd_var_log_t)
+create_files_pattern(clamd_t, clamd_var_log_t, clamd_var_log_t)
+setattr_files_pattern(clamd_t, clamd_var_log_t, clamd_var_log_t)
 logging_log_filetrans(clamd_t, clamd_var_log_t, { dir file })
 
-# pid file
+manage_dirs_pattern(clamd_t, clamd_var_run_t, clamd_var_run_t)
 manage_files_pattern(clamd_t, clamd_var_run_t, clamd_var_run_t)
 manage_sock_files_pattern(clamd_t, clamd_var_run_t, clamd_var_run_t)
-files_pid_filetrans(clamd_t, clamd_var_run_t, { file dir })
+files_pid_filetrans(clamd_t, clamd_var_run_t, { dir file sock_file })
 
 kernel_dontaudit_list_proc(clamd_t)
 kernel_read_sysctl(clamd_t)
@@ -105,19 +112,22 @@
 corenet_tcp_sendrecv_generic_if(clamd_t)
 corenet_tcp_sendrecv_generic_node(clamd_t)
 corenet_tcp_sendrecv_all_ports(clamd_t)
-corenet_tcp_sendrecv_clamd_port(clamd_t)
 corenet_tcp_bind_generic_node(clamd_t)
-corenet_tcp_bind_clamd_port(clamd_t)
+
+corenet_sendrecv_generic_server_packets(clamd_t)
 corenet_tcp_bind_generic_port(clamd_t)
+
+corenet_sendrecv_generic_client_packets(clamd_t)
 corenet_tcp_connect_generic_port(clamd_t)
+
 corenet_sendrecv_clamd_server_packets(clamd_t)
+corenet_tcp_bind_clamd_port(clamd_t)
 
 dev_read_rand(clamd_t)
 dev_read_urand(clamd_t)
 
 domain_use_interactive_fds(clamd_t)
 
-files_read_etc_files(clamd_t)
 files_read_etc_runtime_files(clamd_t)
 files_search_spool(clamd_t)
 
@@ -127,12 +137,11 @@
 
 miscfiles_read_localization(clamd_t)
 
-cron_use_fds(clamd_t)
-cron_use_system_job_fds(clamd_t)
-cron_rw_pipes(clamd_t)
-
-mta_read_config(clamd_t)
-mta_send_mail(clamd_t)
+tunable_policy(`clamd_use_jit',`
+	allow clamd_t self:process execmem;
+',`
+	dontaudit clamd_t self:process execmem;
+')
 
 optional_policy(`
 	amavis_read_lib_files(clamd_t)
@@ -142,13 +151,18 @@
 ')
 
 optional_policy(`
+	cron_use_fds(clamd_t)
+	cron_use_system_job_fds(clamd_t)
+	cron_rw_pipes(clamd_t)
+')
+
+optional_policy(`
 	exim_read_spool_files(clamd_t)
 ')
 
-tunable_policy(`clamd_use_jit',`
-	allow clamd_t self:process execmem;
-', `
-	dontaudit clamd_t self:process execmem;
+optional_policy(`
+	mta_read_config(clamd_t)
+	mta_send_mail(clamd_t)
 ')
 
 ########################################
@@ -158,45 +172,54 @@
 
 allow freshclam_t self:capability { setgid setuid dac_override };
 allow freshclam_t self:fifo_file rw_fifo_file_perms;
-allow freshclam_t self:unix_stream_socket create_stream_socket_perms;
-allow freshclam_t self:unix_dgram_socket create_socket_perms;
-allow freshclam_t self:tcp_socket { listen accept };
+allow freshclam_t self:unix_stream_socket { accept listen };
+allow freshclam_t self:tcp_socket { accept listen };
 
-# configuration files
 allow freshclam_t clamd_etc_t:dir list_dir_perms;
 read_files_pattern(freshclam_t, clamd_etc_t, clamd_etc_t)
 read_lnk_files_pattern(freshclam_t, clamd_etc_t, clamd_etc_t)
 
-# var/lib files together with clamd
 manage_dirs_pattern(freshclam_t, clamd_var_lib_t, clamd_var_lib_t)
 manage_files_pattern(freshclam_t, clamd_var_lib_t, clamd_var_lib_t)
 
-# pidfiles- var/run together with clamd
 manage_files_pattern(freshclam_t, clamd_var_run_t, clamd_var_run_t)
-manage_sock_files_pattern(freshclam_t, clamd_var_run_t, clamd_var_run_t)
 files_pid_filetrans(freshclam_t, clamd_var_run_t, file)
 
-# log files (own logfiles only)
-manage_files_pattern(freshclam_t, freshclam_var_log_t, freshclam_var_log_t)
-allow freshclam_t freshclam_var_log_t:dir setattr;
-allow freshclam_t clamd_var_log_t:dir search_dir_perms;
+append_files_pattern(freshclam_t, freshclam_var_log_t, freshclam_var_log_t)
+create_files_pattern(freshclam_t, freshclam_var_log_t, freshclam_var_log_t)
+setattr_files_pattern(freshclam_t, freshclam_var_log_t, freshclam_var_log_t)
 logging_log_filetrans(freshclam_t, freshclam_var_log_t, file)
 
+stream_connect_pattern(freshclam_t, clamd_var_run_t, clamd_var_run_t, clamd_t)
+
+read_files_pattern(freshclam_t, clamd_var_log_t, clamd_var_log_t)
+
+kernel_read_kernel_sysctls(freshclam_t)
+kernel_read_network_state(freshclam_t)
+kernel_read_system_state(freshclam_t)
+
 corenet_all_recvfrom_unlabeled(freshclam_t)
 corenet_all_recvfrom_netlabel(freshclam_t)
 corenet_tcp_sendrecv_generic_if(freshclam_t)
 corenet_tcp_sendrecv_generic_node(freshclam_t)
-corenet_tcp_sendrecv_all_ports(freshclam_t)
+
+corenet_sendrecv_clamd_client_packets(freshclam_t)
+corenet_tcp_connect_clamd_port(freshclam_t)
 corenet_tcp_sendrecv_clamd_port(freshclam_t)
-corenet_tcp_connect_http_port(freshclam_t)
+
 corenet_sendrecv_http_client_packets(freshclam_t)
+corenet_tcp_connect_http_port(freshclam_t)
+corenet_tcp_sendrecv_http_port(freshclam_t)
+
+corenet_sendrecv_squid_client_packets(freshclam_t)
+corenet_tcp_connect_squid_port(freshclam_t)
+corenet_tcp_sendrecv_squid_port(freshclam_t)
 
 dev_read_rand(freshclam_t)
 dev_read_urand(freshclam_t)
 
 domain_use_interactive_fds(freshclam_t)
 
-files_read_etc_files(freshclam_t)
 files_read_etc_runtime_files(freshclam_t)
 
 auth_use_nsswitch(freshclam_t)
@@ -205,52 +228,56 @@
 
 miscfiles_read_localization(freshclam_t)
 
-clamav_stream_connect(freshclam_t)
-
-optional_policy(`
-	cron_system_entry(freshclam_t, freshclam_exec_t)
-')
-
 tunable_policy(`clamd_use_jit',`
 	allow freshclam_t self:process execmem;
-', `
+',`
 	dontaudit freshclam_t self:process execmem;
 ')
 
+optional_policy(`
+	cron_system_entry(freshclam_t, freshclam_exec_t)
+')
+
 ########################################
 #
-# clamscam local policy
+# Clamscam local policy
 #
 
 allow clamscan_t self:capability { setgid setuid dac_override };
-allow clamscan_t self:fifo_file rw_file_perms;
+allow clamscan_t self:fifo_file rw_fifo_file_perms;
 allow clamscan_t self:unix_stream_socket create_stream_socket_perms;
 allow clamscan_t self:unix_dgram_socket create_socket_perms;
 allow clamscan_t self:tcp_socket create_stream_socket_perms;
 
-# configuration files
 allow clamscan_t clamd_etc_t:dir list_dir_perms;
 read_files_pattern(clamscan_t, clamd_etc_t, clamd_etc_t)
 read_lnk_files_pattern(clamscan_t, clamd_etc_t, clamd_etc_t)
 
-# tmp files
 manage_dirs_pattern(clamscan_t, clamscan_tmp_t, clamscan_tmp_t)
 manage_files_pattern(clamscan_t, clamscan_tmp_t, clamscan_tmp_t)
-files_tmp_filetrans(clamscan_t, clamscan_tmp_t, { file dir })
+files_tmp_filetrans(clamscan_t, clamscan_tmp_t, { dir file })
 
-# var/lib files together with clamd
-manage_files_pattern(clamscan_t, clamd_var_lib_t, clamd_var_lib_t)
 allow clamscan_t clamd_var_lib_t:dir list_dir_perms;
+manage_files_pattern(clamscan_t, clamd_var_lib_t, clamd_var_lib_t)
+
+allow clamscan_t clamd_var_run_t:dir list_dir_perms;
+read_files_pattern(clamscan_t, clamd_var_run_t, clamd_var_run_t)
+
+stream_connect_pattern(clamscan_t, clamd_var_run_t, clamd_var_run_t, clamd_t)
+
+kernel_read_kernel_sysctls(clamscan_t)
+kernel_read_system_state(clamscan_t)
 
 corenet_all_recvfrom_unlabeled(clamscan_t)
 corenet_all_recvfrom_netlabel(clamscan_t)
 corenet_tcp_sendrecv_generic_if(clamscan_t)
 corenet_tcp_sendrecv_generic_node(clamscan_t)
-corenet_tcp_sendrecv_all_ports(clamscan_t)
-corenet_tcp_sendrecv_clamd_port(clamscan_t)
+
+corenet_sendrecv_clamd_client_packets(clamscan_t)
 corenet_tcp_connect_clamd_port(clamscan_t)
+corenet_tcp_sendrecv_clamd_port(clamscan_t)
 
-kernel_read_kernel_sysctls(clamscan_t)
+corecmd_read_all_executables(clamscan_t)
 
 files_read_etc_files(clamscan_t)
 files_read_etc_runtime_files(clamscan_t)
@@ -262,9 +289,18 @@
 miscfiles_read_localization(clamscan_t)
 miscfiles_read_public_files(clamscan_t)
 
-clamav_stream_connect(clamscan_t)
+sysnet_read_config(clamscan_t)
+
+tunable_policy(`clamav_read_user_content_files_clamscan',`
+	userdom_read_user_home_content_files(clamscan_t)
+	userdom_dontaudit_read_user_home_content_files(clamscan_t)
+')
 
-mta_send_mail(clamscan_t)
+tunable_policy(`clamav_read_all_non_security_files_clamscan',`
+	files_read_non_security_files(clamscan_t)
+	files_getattr_all_pipes(clamscan_t)
+	files_getattr_all_sockets(clamscan_t)
+')
 
 optional_policy(`
 	amavis_read_spool_files(clamscan_t)
@@ -273,3 +309,8 @@
 optional_policy(`
 	apache_read_sys_content(clamscan_t)
 ')
+
+optional_policy(`
+	mta_send_mail(clamscan_t)
+	mta_read_queue(clamscan_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/clockspeed.fc refpolicy/policy/modules/contrib/clockspeed.fc
--- refpolicy/policy/modules/contrib/clockspeed.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/clockspeed.fc	2012-09-27 20:03:30.740126498 +0200
@@ -1,14 +1,7 @@
-
-#
-# /usr
-#
 /usr/bin/clockadd	--	gen_context(system_u:object_r:clockspeed_cli_exec_t,s0)
 /usr/bin/clockspeed	--	gen_context(system_u:object_r:clockspeed_srv_exec_t,s0)
 /usr/bin/sntpclock	--	gen_context(system_u:object_r:clockspeed_cli_exec_t,s0)
 /usr/bin/taiclock	--	gen_context(system_u:object_r:clockspeed_cli_exec_t,s0)
 /usr/bin/taiclockd	--	gen_context(system_u:object_r:clockspeed_srv_exec_t,s0)
 
-#
-# /var
-#
 /var/lib/clockspeed(/.*)?	gen_context(system_u:object_r:clockspeed_var_lib_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/clockspeed.if refpolicy/policy/modules/contrib/clockspeed.if
--- refpolicy/policy/modules/contrib/clockspeed.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/clockspeed.if	2012-09-27 20:03:30.740126498 +0200
@@ -1,8 +1,9 @@
-## <summary>Clockspeed simple network time protocol client</summary>
+## <summary>Clock speed measurement and manipulation.</summary>
 
 ########################################
 ## <summary>
-##	Execute clockspeed utilities in the clockspeed_cli domain.
+##	Execute clockspeed utilities in
+$$	the clockspeed_cli domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -15,12 +16,15 @@
 		type clockspeed_cli_t, clockspeed_cli_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, clockspeed_cli_exec_t, clockspeed_cli_t)
 ')
 
 ########################################
 ## <summary>
-##	Allow the specified role the clockspeed_cli domain.
+##	Execute clockspeed utilities in the
+##	clockspeed cli domain, and allow the
+##	specified role the clockspeed cli domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -36,9 +40,9 @@
 #
 interface(`clockspeed_run_cli',`
 	gen_require(`
-		type clockspeed_cli_t;
+		attribute_role clockspeed_cli_roles;
 	')
 
-	role $2 types clockspeed_cli_t;
 	clockspeed_domtrans_cli($1)
+	roleattribute $2 clockspeed_cli_roles;
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/clockspeed.te refpolicy/policy/modules/contrib/clockspeed.te
--- refpolicy/policy/modules/contrib/clockspeed.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/clockspeed.te	2012-09-27 20:03:30.740126498 +0200
@@ -1,13 +1,16 @@
-policy_module(clockspeed, 1.5.0)
+policy_module(clockspeed, 1.5.1)
 
 ########################################
 #
 # Declarations
 #
 
+attribute_role clockspeed_cli_roles;
+
 type clockspeed_cli_t;
 type clockspeed_cli_exec_t;
 application_domain(clockspeed_cli_t, clockspeed_cli_exec_t)
+role clockspeed_cli_roles types clockspeed_cli_t;
 
 type clockspeed_srv_t;
 type clockspeed_srv_exec_t;
@@ -30,8 +33,9 @@
 corenet_all_recvfrom_netlabel(clockspeed_cli_t)
 corenet_udp_sendrecv_generic_if(clockspeed_cli_t)
 corenet_udp_sendrecv_generic_node(clockspeed_cli_t)
-corenet_udp_sendrecv_ntp_port(clockspeed_cli_t)
+
 corenet_sendrecv_ntp_client_packets(clockspeed_cli_t)
+corenet_udp_sendrecv_ntp_port(clockspeed_cli_t)
 
 files_list_var_lib(clockspeed_cli_t)
 files_read_etc_files(clockspeed_cli_t)
@@ -57,13 +61,14 @@
 corenet_all_recvfrom_netlabel(clockspeed_srv_t)
 corenet_udp_sendrecv_generic_if(clockspeed_srv_t)
 corenet_udp_sendrecv_generic_node(clockspeed_srv_t)
-corenet_udp_sendrecv_ntp_port(clockspeed_srv_t)
 corenet_udp_bind_generic_node(clockspeed_srv_t)
-corenet_udp_bind_clockspeed_port(clockspeed_srv_t)
+
 corenet_sendrecv_clockspeed_server_packets(clockspeed_srv_t)
+corenet_udp_bind_clockspeed_port(clockspeed_srv_t)
+corenet_udp_sendrecv_clockspeed_port(clockspeed_srv_t)
 
-files_read_etc_files(clockspeed_srv_t)
 files_list_var_lib(clockspeed_srv_t)
+files_read_etc_files(clockspeed_srv_t)
 
 miscfiles_read_localization(clockspeed_srv_t)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/clogd.fc refpolicy/policy/modules/contrib/clogd.fc
--- refpolicy/policy/modules/contrib/clogd.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/clogd.fc	2012-09-27 20:03:30.740126498 +0200
@@ -1,3 +1,3 @@
-/usr/sbin/clogd			--	gen_context(system_u:object_r:clogd_exec_t,s0)
+/usr/sbin/clogd	--	gen_context(system_u:object_r:clogd_exec_t,s0)
 
-/var/run/clogd\.pid		--	gen_context(system_u:object_r:clogd_var_run_t,s0)
+/var/run/clogd\.pid	--	gen_context(system_u:object_r:clogd_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/clogd.if refpolicy/policy/modules/contrib/clogd.if
--- refpolicy/policy/modules/contrib/clogd.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/clogd.if	2012-09-27 20:03:30.740126498 +0200
@@ -1,4 +1,4 @@
-## <summary>clogd - Clustered Mirror Log Server</summary>
+## <summary>Clustered Mirror Log Server.</summary>
 
 ######################################
 ## <summary>
@@ -22,7 +22,7 @@
 #####################################
 ## <summary>
 ##	Connect to clogd over a unix domain
-##	stream socket.
+##	stream socket.  (Deprecated)
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -31,17 +31,12 @@
 ## </param>
 #
 interface(`clogd_stream_connect',`
-	gen_require(`
-		type clogd_t, clogd_var_run_t;
-	')
-
-	files_search_pids($1)
-	stream_connect_pattern($1, clogd_var_run_t, clogd_var_run_t, clogd_t)
+	refpolicywarn(`$0($*) has been deprecated.')
 ')
 
 #####################################
 ## <summary>
-##	Allow read and write access to clogd semaphores.
+##	Read and write clogd semaphores.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -59,7 +54,7 @@
 
 ########################################
 ## <summary>
-##	Read and write to group shared memory.
+##	Read and write clogd shared memory.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/clogd.te refpolicy/policy/modules/contrib/clogd.te
--- refpolicy/policy/modules/contrib/clogd.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/clogd.te	2012-09-27 20:03:30.740126498 +0200
@@ -1,4 +1,4 @@
-policy_module(clogd, 1.0.0)
+policy_module(clogd, 1.0.1)
 
 ########################################
 #
@@ -12,34 +12,29 @@
 type clogd_tmpfs_t;
 files_tmpfs_file(clogd_tmpfs_t)
 
-# pid files
 type clogd_var_run_t;
 files_pid_file(clogd_var_run_t)
 
 ########################################
 #
-# clogd local policy
+# Local policy
 #
 
 allow clogd_t self:capability { net_admin mknod };
 allow clogd_t self:process signal;
-
 allow clogd_t self:sem create_sem_perms;
 allow clogd_t self:shm create_shm_perms;
 allow clogd_t self:netlink_socket create_socket_perms;
-allow clogd_t self:unix_dgram_socket create_socket_perms;
 
 manage_dirs_pattern(clogd_t, clogd_tmpfs_t, clogd_tmpfs_t)
 manage_files_pattern(clogd_t, clogd_tmpfs_t, clogd_tmpfs_t)
 fs_tmpfs_filetrans(clogd_t, clogd_tmpfs_t, { dir file })
 
-# pid files
 manage_files_pattern(clogd_t, clogd_var_run_t, clogd_var_run_t)
-manage_sock_files_pattern(clogd_t, clogd_var_run_t, clogd_var_run_t)
-files_pid_filetrans(clogd_t, clogd_var_run_t, { file })
+files_pid_filetrans(clogd_t, clogd_var_run_t, file)
 
-dev_read_lvm_control(clogd_t)
 dev_manage_generic_blk_files(clogd_t)
+dev_read_lvm_control(clogd_t)
 
 storage_raw_read_fixed_disk(clogd_t)
 storage_raw_write_fixed_disk(clogd_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cmirrord.fc refpolicy/policy/modules/contrib/cmirrord.fc
--- refpolicy/policy/modules/contrib/cmirrord.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cmirrord.fc	2012-09-27 20:03:30.741126498 +0200
@@ -1,5 +1,5 @@
 /etc/rc\.d/init\.d/cmirrord	--	gen_context(system_u:object_r:cmirrord_initrc_exec_t,s0)
 
-/usr/sbin/cmirrord		--	gen_context(system_u:object_r:cmirrord_exec_t,s0)
+/usr/sbin/cmirrord	--	gen_context(system_u:object_r:cmirrord_exec_t,s0)
 
-/var/run/cmirrord\.pid		--	gen_context(system_u:object_r:cmirrord_var_run_t,s0)
+/var/run/cmirrord\.pid	--	gen_context(system_u:object_r:cmirrord_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cmirrord.if refpolicy/policy/modules/contrib/cmirrord.if
--- refpolicy/policy/modules/contrib/cmirrord.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cmirrord.if	2012-09-27 20:03:30.741126498 +0200
@@ -1,8 +1,9 @@
-## <summary>Cluster mirror log daemon</summary>
+## <summary>Cluster mirror log daemon.</summary>
 
 ########################################
 ## <summary>
-##	Execute a domain transition to run cmirrord.
+##	Execute a domain transition to
+##	run cmirrord.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -15,12 +16,14 @@
 		type cmirrord_t, cmirrord_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, cmirrord_exec_t, cmirrord_t)
 ')
 
 ########################################
 ## <summary>
-##	Execute cmirrord server in the cmirrord domain.
+##	Execute cmirrord server in the
+##	cmirrord domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -57,7 +60,7 @@
 
 #######################################
 ## <summary>
-##	Read and write to cmirrord shared memory.
+##	Read and write cmirrord shared memory.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -80,8 +83,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an cmirrord environment
+##	All of the rules required to
+##	administrate an cmirrord environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cmirrord.te refpolicy/policy/modules/contrib/cmirrord.te
--- refpolicy/policy/modules/contrib/cmirrord.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cmirrord.te	2012-09-27 20:03:30.741126498 +0200
@@ -1,4 +1,4 @@
-policy_module(cmirrord, 1.0.0)
+policy_module(cmirrord, 1.0.1)
 
 ########################################
 #
@@ -20,23 +20,22 @@
 
 ########################################
 #
-# cmirrord local policy
+# Local policy
 #
 
 allow cmirrord_t self:capability { net_admin kill };
 dontaudit cmirrord_t self:capability sys_tty_config;
-allow cmirrord_t self:process { setfscreate signal};
+allow cmirrord_t self:process { setfscreate signal };
 allow cmirrord_t self:fifo_file rw_fifo_file_perms;
 allow cmirrord_t self:sem create_sem_perms;
 allow cmirrord_t self:shm create_shm_perms;
 allow cmirrord_t self:netlink_socket create_socket_perms;
-allow cmirrord_t self:unix_stream_socket create_stream_socket_perms;
+allow cmirrord_t self:unix_stream_socket { accept listen };
 
 manage_dirs_pattern(cmirrord_t, cmirrord_tmpfs_t, cmirrord_tmpfs_t)
 manage_files_pattern(cmirrord_t, cmirrord_tmpfs_t, cmirrord_tmpfs_t)
 fs_tmpfs_filetrans(cmirrord_t, cmirrord_tmpfs_t, { dir file })
 
-manage_dirs_pattern(cmirrord_t, cmirrord_var_run_t, cmirrord_var_run_t)
 manage_files_pattern(cmirrord_t, cmirrord_var_run_t, cmirrord_var_run_t)
 files_pid_filetrans(cmirrord_t, cmirrord_var_run_t, file)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cobbler.fc refpolicy/policy/modules/contrib/cobbler.fc
--- refpolicy/policy/modules/contrib/cobbler.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cobbler.fc	2012-09-27 20:03:30.741126498 +0200
@@ -1,7 +1,31 @@
-/etc/cobbler(/.*)?		gen_context(system_u:object_r:cobbler_etc_t, s0)
-/etc/rc\.d/init\.d/cobblerd --	gen_context(system_u:object_r:cobblerd_initrc_exec_t, s0)
+/etc/cobbler(/.*)?	gen_context(system_u:object_r:cobbler_etc_t,s0)
 
-/usr/bin/cobblerd	--	gen_context(system_u:object_r:cobblerd_exec_t, s0)
+/etc/rc\.d/init\.d/cobblerd	--	gen_context(system_u:object_r:cobblerd_initrc_exec_t,s0)
 
-/var/lib/cobbler(/.*)?		gen_context(system_u:object_r:cobbler_var_lib_t, s0)
-/var/log/cobbler(/.*)?		gen_context(system_u:object_r:cobbler_var_log_t, s0)
+/usr/bin/cobblerd	--	gen_context(system_u:object_r:cobblerd_exec_t,s0)
+
+/var/lib/cobbler(/.*)?	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+
+/var/lib/tftpboot/etc(/.*)?	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/grub(/.*)?	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/images(/.*)?	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/memdisk	--	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/menu\.c32	--	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/ppc(/.*)?	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/pxelinux\.0	--	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/pxelinux\.cfg(/.*)?	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/s390x(/.*)?	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/lib/tftpboot/yaboot	--	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+
+/var/log/cobbler(/.*)?	gen_context(system_u:object_r:cobbler_var_log_t,s0)
+
+# This should removable when cobbler package installs /var/www/cobbler/rendered
+/var/www/cobbler(/.*)?	gen_context(system_u:object_r:httpd_cobbler_content_t,s0)
+
+/var/www/cobbler/images(/.*)?	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/www/cobbler/ks_mirror(/.*)?	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/www/cobbler/links(/.*)?	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/www/cobbler/localmirror(/.*)?	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/www/cobbler/pub(/.*)?	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/www/cobbler/rendered(/.*)?	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
+/var/www/cobbler/repo_mirror(/.*)?	gen_context(system_u:object_r:cobbler_var_lib_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cobbler.if refpolicy/policy/modules/contrib/cobbler.if
--- refpolicy/policy/modules/contrib/cobbler.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cobbler.if	2012-09-27 20:03:30.741126498 +0200
@@ -143,8 +143,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an cobblerd environment
+##	All of the rules required to
+##	administrate an cobblerd environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -161,25 +161,30 @@
 interface(`cobblerd_admin',`
 	gen_require(`
 		type cobblerd_t, cobbler_var_lib_t, cobbler_var_log_t;
-		type cobbler_etc_t, cobblerd_initrc_exec_t;
+		type cobbler_etc_t, cobblerd_initrc_exec_t, httpd_cobbler_content_t;
+		type httpd_cobbler_content_ra_t, httpd_cobbler_content_rw_t, cobbler_tmp_t;
 	')
 
-	allow $1 cobblerd_t:process { ptrace signal_perms getattr };
-	read_files_pattern($1, cobblerd_t, cobblerd_t)
+	allow $1 cobblerd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, cobblerd_t)
+
+	cobblerd_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 cobblerd_initrc_exec_t system_r;
+	allow $2 system_r;
 
 	files_search_etc($1)
 	admin_pattern($1, cobbler_etc_t)
 
-	files_list_var_lib($1)
+	files_search_tmp($1)
+	admin_pattern($1, cobbler_tmp_t)
+
+	files_search_var_lib($1)
 	admin_pattern($1, cobbler_var_lib_t)
 
 	logging_search_logs($1)
 	admin_pattern($1, cobbler_var_log_t)
 
-	admin_pattern($1, httpd_cobbler_content_rw_t)
-
-	cobblerd_initrc_domtrans($1)
-	domain_system_change_exemption($1)
-	role_transition $2 cobblerd_initrc_exec_t system_r;
-	allow $2 system_r;
+	apache_search_sys_content($1)
+	admin_pattern($1, { httpd_cobbler_content_t httpd_cobbler_content_ra_t httpd_cobbler_content_rw_t })
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cobbler.te refpolicy/policy/modules/contrib/cobbler.te
--- refpolicy/policy/modules/contrib/cobbler.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cobbler.te	2012-09-27 20:03:30.741126498 +0200
@@ -2,17 +2,43 @@
 
 ########################################
 #
-# Cobbler personal declarations.
+# Declarations
 #
 
+
 ## <desc>
-## <p>
-## Allow Cobbler to modify public files
-## used for public file transfer services.
-## </p>
+##	<p>
+##	Determine whether Cobbler can modify
+##	public files used for public file
+##	transfer services.
+##	</p>
 ## </desc>
 gen_tunable(cobbler_anon_write, false)
 
+## <desc>
+##	<p>
+##	Determine whether Cobbler can connect
+##	to the network using TCP.
+##	</p>
+## </desc>
+gen_tunable(cobbler_can_network_connect, false)
+
+## <desc>
+##	<p>
+##	Determine whether Cobbler can access
+##	cifs file systems.
+##	</p>
+## </desc>
+gen_tunable(cobbler_use_cifs, false)
+
+## <desc>
+##	<p>
+##	Determine whether Cobbler can access
+##	nfs file systems.
+##	</p>
+## </desc>
+gen_tunable(cobbler_use_nfs, false)
+
 type cobblerd_t;
 type cobblerd_exec_t;
 init_daemon_domain(cobblerd_t, cobblerd_exec_t)
@@ -26,25 +52,38 @@
 type cobbler_var_log_t;
 logging_log_file(cobbler_var_log_t)
 
-type cobbler_var_lib_t;
+type cobbler_var_lib_t alias cobbler_content_t;
 files_type(cobbler_var_lib_t)
 
+type cobbler_tmp_t;
+files_tmp_file(cobbler_tmp_t)
+
+apache_content_template(cobbler)
+
 ########################################
 #
-# Cobbler personal policy.
+# Local policy
 #
 
-allow cobblerd_t self:capability { chown dac_override fowner sys_nice };
+allow cobblerd_t self:capability { chown dac_override fowner fsetid sys_nice };
+dontaudit cobblerd_t self:capability sys_tty_config;
 allow cobblerd_t self:process { getsched setsched signal };
 allow cobblerd_t self:fifo_file rw_fifo_file_perms;
+allow cobblerd_t self:netlink_route_socket create_netlink_socket_perms;
 allow cobblerd_t self:tcp_socket create_stream_socket_perms;
+allow cobblerd_t self:udp_socket create_socket_perms;
 
 list_dirs_pattern(cobblerd_t, cobbler_etc_t, cobbler_etc_t)
 read_files_pattern(cobblerd_t, cobbler_etc_t, cobbler_etc_t)
 
+manage_dirs_pattern(cobblerd_t, cobbler_tmp_t, cobbler_tmp_t)
+manage_files_pattern(cobblerd_t, cobbler_tmp_t, cobbler_tmp_t)
+files_tmp_filetrans(cobblerd_t, cobbler_tmp_t, { dir file })
+
 manage_dirs_pattern(cobblerd_t, cobbler_var_lib_t, cobbler_var_lib_t)
 manage_files_pattern(cobblerd_t, cobbler_var_lib_t, cobbler_var_lib_t)
-files_var_lib_filetrans(cobblerd_t, cobbler_var_lib_t, { dir file })
+manage_lnk_files_pattern(cobblerd_t, cobbler_var_lib_t, cobbler_var_lib_t)
+files_var_lib_filetrans(cobblerd_t, cobbler_var_lib_t, dir)
 
 append_files_pattern(cobblerd_t, cobbler_var_log_t, cobbler_var_log_t)
 create_files_pattern(cobblerd_t, cobbler_var_log_t, cobbler_var_log_t)
@@ -53,26 +92,45 @@
 logging_log_filetrans(cobblerd_t, cobbler_var_log_t, file)
 
 kernel_read_system_state(cobblerd_t)
+kernel_dontaudit_search_network_state(cobblerd_t)
 
 corecmd_exec_bin(cobblerd_t)
 corecmd_exec_shell(cobblerd_t)
 
 corenet_all_recvfrom_netlabel(cobblerd_t)
 corenet_all_recvfrom_unlabeled(cobblerd_t)
-corenet_sendrecv_cobbler_server_packets(cobblerd_t)
-corenet_tcp_bind_cobbler_port(cobblerd_t)
-corenet_tcp_bind_generic_node(cobblerd_t)
 corenet_tcp_sendrecv_generic_if(cobblerd_t)
 corenet_tcp_sendrecv_generic_node(cobblerd_t)
-corenet_tcp_sendrecv_generic_port(cobblerd_t)
+corenet_tcp_bind_generic_node(cobblerd_t)
+
+corenet_sendrecv_cobbler_server_packets(cobblerd_t)
+corenet_tcp_bind_cobbler_port(cobblerd_t)
+corenet_tcp_sendrecv_cobbler_port(cobblerd_t)
+
+corenet_sendrecv_ftp_client_packets(cobblerd_t)
+corenet_tcp_connect_ftp_port(cobblerd_t)
+corenet_tcp_sendrecv_ftp_port(cobblerd_t)
+
+corenet_tcp_sendrecv_http_port(cobblerd_t)
+corenet_tcp_connect_http_port(cobblerd_t)
+corenet_sendrecv_http_client_packets(cobblerd_t)
 
 dev_read_urand(cobblerd_t)
 
-files_read_usr_files(cobblerd_t)
 files_list_boot(cobblerd_t)
 files_list_tmp(cobblerd_t)
-# read /etc/nsswitch.conf
+files_read_boot_files(cobblerd_t)
 files_read_etc_files(cobblerd_t)
+files_read_etc_runtime_files(cobblerd_t)
+files_read_usr_files(cobblerd_t)
+
+fs_read_iso9660_files(cobblerd_t)
+
+selinux_get_enforce_mode(cobblerd_t)
+
+term_use_console(cobblerd_t)
+
+logging_send_syslog_msg(cobblerd_t)
 
 miscfiles_read_localization(cobblerd_t)
 miscfiles_read_public_files(cobblerd_t)
@@ -85,6 +143,28 @@
 	miscfiles_manage_public_files(cobblerd_t)
 ')
 
+tunable_policy(`cobbler_can_network_connect',`
+	corenet_sendrecv_all_client_packets(cobblerd_t)
+	corenet_tcp_connect_all_ports(cobblerd_t)
+	corenet_tcp_sendrecv_all_ports(cobblerd_t)
+')
+
+tunable_policy(`cobbler_use_cifs',`
+	fs_manage_cifs_dirs(cobblerd_t)
+	fs_manage_cifs_files(cobblerd_t)
+	fs_manage_cifs_symlinks(cobblerd_t)
+')
+
+tunable_policy(`cobbler_use_nfs',`
+	fs_manage_nfs_dirs(cobblerd_t)
+	fs_manage_nfs_files(cobblerd_t)
+	fs_manage_nfs_symlinks(cobblerd_t)
+')
+
+optional_policy(`
+	apache_search_sys_content(cobblerd_t)
+')
+
 optional_policy(`
 	bind_read_config(cobblerd_t)
 	bind_write_config(cobblerd_t)
@@ -95,6 +175,10 @@
 ')
 
 optional_policy(`
+	certmaster_exec(cobblerd_t)
+')
+
+optional_policy(`
 	dhcpd_domtrans(cobblerd_t)
 	dhcpd_initrc_domtrans(cobblerd_t)
 ')
@@ -111,18 +195,21 @@
 
 optional_policy(`
 	rsync_read_config(cobblerd_t)
-	rsync_write_config(cobblerd_t)
+	rsync_manage_config_files(cobblerd_t)
+	rsync_etc_filetrans_config(cobblerd_t, file, "rsync.conf")
 ')
 
 optional_policy(`
-	tftp_manage_rw_content(cobblerd_t)
+	tftp_manage_config_files(cobblerd_t)
+	tftp_etc_filetrans_config(cobblerd_t, file, "tftp")
+	tftp_filetrans_tftpdir(cobblerd_t, cobbler_var_lib_t, { dir file })
 ')
 
 ########################################
 #
-# Cobbler web local policy.
+# Web local policy
 #
 
-apache_content_template(cobbler)
+list_dirs_pattern(cobblerd_t, httpd_cobbler_content_t, httpd_cobbler_content_t)
 manage_dirs_pattern(cobblerd_t, httpd_cobbler_content_rw_t, httpd_cobbler_content_rw_t)
 manage_files_pattern(cobblerd_t, httpd_cobbler_content_rw_t, httpd_cobbler_content_rw_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/colord.fc refpolicy/policy/modules/contrib/colord.fc
--- refpolicy/policy/modules/contrib/colord.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/colord.fc	2012-09-27 20:03:30.741126498 +0200
@@ -1,4 +1,5 @@
 /usr/libexec/colord	--	gen_context(system_u:object_r:colord_exec_t,s0)
+/usr/libexec/colord-sane	--	gen_context(system_u:object_r:colord_exec_t,s0)
 
-/var/lib/color(/.*)?		gen_context(system_u:object_r:colord_var_lib_t,s0)
-/var/lib/colord(/.*)?		gen_context(system_u:object_r:colord_var_lib_t,s0)
+/var/lib/color(/.*)?	gen_context(system_u:object_r:colord_var_lib_t,s0)
+/var/lib/colord(/.*)?	gen_context(system_u:object_r:colord_var_lib_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/colord.if refpolicy/policy/modules/contrib/colord.if
--- refpolicy/policy/modules/contrib/colord.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/colord.if	2012-09-27 20:03:30.742126498 +0200
@@ -1,4 +1,4 @@
-## <summary>GNOME color manager</summary>
+## <summary>GNOME color manager.</summary>
 
 ########################################
 ## <summary>
@@ -15,6 +15,7 @@
 		type colord_t, colord_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, colord_exec_t, colord_t)
 ')
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/colord.te refpolicy/policy/modules/contrib/colord.te
--- refpolicy/policy/modules/contrib/colord.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/colord.te	2012-09-27 20:03:30.742126498 +0200
@@ -1,4 +1,4 @@
-policy_module(colord, 1.0.0)
+policy_module(colord, 1.0.1)
 
 ########################################
 #
@@ -20,14 +20,16 @@
 
 ########################################
 #
-# colord local policy
+# Local policy
 #
+
 allow colord_t self:capability { dac_read_search dac_override };
+dontaudit colord_t self:capability sys_admin;
 allow colord_t self:process signal;
 allow colord_t self:fifo_file rw_fifo_file_perms;
 allow colord_t self:netlink_kobject_uevent_socket create_socket_perms;
-allow colord_t self:udp_socket create_socket_perms;
-allow colord_t self:unix_dgram_socket create_socket_perms;
+allow colord_t self:tcp_socket { accept listen };
+allow colord_t self:shm create_shm_perms;
 
 manage_dirs_pattern(colord_t, colord_tmp_t, colord_tmp_t)
 manage_files_pattern(colord_t, colord_tmp_t, colord_tmp_t)
@@ -39,17 +41,34 @@
 
 manage_dirs_pattern(colord_t, colord_var_lib_t, colord_var_lib_t)
 manage_files_pattern(colord_t, colord_var_lib_t, colord_var_lib_t)
-files_var_lib_filetrans(colord_t, colord_var_lib_t, { file dir })
+files_var_lib_filetrans(colord_t, colord_var_lib_t, dir)
 
-kernel_getattr_proc_files(colord_t)
 kernel_read_device_sysctls(colord_t)
+kernel_read_network_state(colord_t)
+kernel_read_system_state(colord_t)
+kernel_request_load_module(colord_t)
 
-corenet_all_recvfrom_unlabeled(colord_t)
 corenet_all_recvfrom_netlabel(colord_t)
+corenet_all_recvfrom_unlabeled(colord_t)
+corenet_tcp_sendrecv_generic_if(colord_t)
+corenet_udp_sendrecv_generic_if(colord_t)
+corenet_tcp_sendrecv_generic_node(colord_t)
+corenet_udp_sendrecv_generic_node(colord_t)
 corenet_udp_bind_generic_node(colord_t)
+
+corenet_sendrecv_ipp_server_packets(colord_t)
 corenet_udp_bind_ipp_port(colord_t)
+corenet_udp_sendrecv_ipp_port(colord_t)
+
+corenet_sendrecv_ipp_client_packets(colord_t)
 corenet_tcp_connect_ipp_port(colord_t)
+corenet_tcp_sendrecv_ipp_port(colord_t)
+
+corecmd_exec_bin(colord_t)
+corecmd_exec_shell(colord_t)
 
+dev_read_raw_memory(colord_t)
+dev_write_raw_memory(colord_t)
 dev_read_video_dev(colord_t)
 dev_write_video_dev(colord_t)
 dev_rw_printer(colord_t)
@@ -62,22 +81,33 @@
 domain_use_interactive_fds(colord_t)
 
 files_list_mnt(colord_t)
-files_read_etc_files(colord_t)
 files_read_usr_files(colord_t)
 
+fs_getattr_noxattr_fs(colord_t)
+fs_getattr_tmpfs(colord_t)
+fs_list_noxattr_fs(colord_t)
 fs_read_noxattr_fs_files(colord_t)
+fs_search_all(colord_t)
+fs_dontaudit_getattr_all_fs(colord_t)
+
+storage_getattr_fixed_disk_dev(colord_t)
+storage_getattr_removable_dev(colord_t)
+storage_read_scsi_generic(colord_t)
+storage_write_scsi_generic(colord_t)
+
+auth_use_nsswitch(colord_t)
 
 logging_send_syslog_msg(colord_t)
 
 miscfiles_read_localization(colord_t)
 
-sysnet_dns_name_resolve(colord_t)
-
 tunable_policy(`use_nfs_home_dirs',`
+	fs_getattr_nfs(colord_t)
 	fs_read_nfs_files(colord_t)
 ')
 
 tunable_policy(`use_samba_home_dirs',`
+	fs_getattr_cifs(colord_t)
 	fs_read_cifs_files(colord_t)
 ')
 
@@ -96,5 +126,9 @@
 ')
 
 optional_policy(`
+	sysnet_exec_ifconfig(colord_t)
+')
+
+optional_policy(`
 	udev_read_db(colord_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/comsat.fc refpolicy/policy/modules/contrib/comsat.fc
--- refpolicy/policy/modules/contrib/comsat.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/comsat.fc	2012-09-27 20:03:30.742126498 +0200
@@ -1,2 +1 @@
-
 /usr/sbin/in\.comsat	--	gen_context(system_u:object_r:comsat_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/comsat.te refpolicy/policy/modules/contrib/comsat.te
--- refpolicy/policy/modules/contrib/comsat.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/comsat.te	2012-09-27 20:03:30.742126498 +0200
@@ -1,4 +1,4 @@
-policy_module(comsat, 1.7.0)
+policy_module(comsat, 1.7.1)
 
 ########################################
 #
@@ -8,7 +8,6 @@
 type comsat_t;
 type comsat_exec_t;
 inetd_udp_service_domain(comsat_t, comsat_exec_t)
-role system_r types comsat_t;
 
 type comsat_tmp_t;
 files_tmp_file(comsat_tmp_t)
@@ -25,8 +24,7 @@
 allow comsat_t self:process signal_perms;
 allow comsat_t self:fifo_file rw_fifo_file_perms;
 allow comsat_t self:netlink_tcpdiag_socket r_netlink_socket_perms;
-allow comsat_t self:tcp_socket connected_stream_socket_perms;
-allow comsat_t self:udp_socket create_socket_perms;
+allow comsat_t self:tcp_socket { accept listen };
 
 manage_dirs_pattern(comsat_t, comsat_tmp_t, comsat_tmp_t)
 manage_files_pattern(comsat_t, comsat_tmp_t, comsat_tmp_t)
@@ -39,19 +37,10 @@
 kernel_read_network_state(comsat_t)
 kernel_read_system_state(comsat_t)
 
-corenet_all_recvfrom_unlabeled(comsat_t)
-corenet_all_recvfrom_netlabel(comsat_t)
-corenet_tcp_sendrecv_generic_if(comsat_t)
-corenet_udp_sendrecv_generic_if(comsat_t)
-corenet_tcp_sendrecv_generic_node(comsat_t)
-corenet_udp_sendrecv_generic_node(comsat_t)
-corenet_udp_sendrecv_all_ports(comsat_t)
-
 dev_read_urand(comsat_t)
 
 fs_getattr_xattr_fs(comsat_t)
 
-files_read_etc_files(comsat_t)
 files_list_usr(comsat_t)
 files_search_spool(comsat_t)
 files_search_home(comsat_t)
@@ -68,7 +57,3 @@
 userdom_dontaudit_getattr_user_ttys(comsat_t)
 
 mta_getattr_spool(comsat_t)
-
-optional_policy(`
-	kerberos_use(comsat_t)
-')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/condor.fc refpolicy/policy/modules/contrib/condor.fc
--- refpolicy/policy/modules/contrib/condor.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/condor.fc	2012-09-27 20:03:30.742126498 +0200
@@ -0,0 +1,21 @@
+/etc/rc\.d/init\.d/condor	--	gen_context(system_u:object_r:condor_initrc_exec_t,s0)
+
+/usr/sbin/condor_collector	--	gen_context(system_u:object_r:condor_collector_exec_t,s0)
+/usr/sbin/condor_master	--	gen_context(system_u:object_r:condor_master_exec_t,s0)
+/usr/sbin/condor_negotiator	--	gen_context(system_u:object_r:condor_negotiator_exec_t,s0)
+/usr/sbin/condor_procd	--	gen_context(system_u:object_r:condor_procd_exec_t,s0)
+/usr/sbin/condor_schedd	--	gen_context(system_u:object_r:condor_schedd_exec_t,s0)
+/usr/sbin/condor_startd	--	gen_context(system_u:object_r:condor_startd_exec_t,s0)
+/usr/sbin/condor_starter	--	gen_context(system_u:object_r:condor_startd_exec_t,s0)
+
+/var/lib/condor(/.*)?	gen_context(system_u:object_r:condor_var_lib_t,s0)
+
+/var/lib/condor/execute(/.*)?	gen_context(system_u:object_r:condor_var_lib_t,s0)
+
+/var/lib/condor/spool(/.*)?	gen_context(system_u:object_r:condor_var_lib_t,s0)
+
+/var/lock/condor(/.*)?	gen_context(system_u:object_r:condor_var_lock_t,s0)
+
+/var/log/condor(/.*)?	gen_context(system_u:object_r:condor_log_t,s0)
+
+/var/run/condor(/.*)?	gen_context(system_u:object_r:condor_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/condor.if refpolicy/policy/modules/contrib/condor.if
--- refpolicy/policy/modules/contrib/condor.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/condor.if	2012-09-27 20:03:30.742126498 +0200
@@ -0,0 +1,88 @@
+## <summary>High-Throughput Computing System.</summary>
+
+#######################################
+## <summary>
+##	The template to define a condor domain.
+## </summary>
+## <param name="domain_prefix">
+##	<summary>
+##	Domain prefix to be used.
+##	</summary>
+## </param>
+#
+template(`condor_domain_template',`
+	gen_require(`
+		attribute condor_domain;
+		type condor_master_t;
+	')
+
+	#############################
+	#
+	# Declarations
+	#
+
+	type condor_$1_t, condor_domain;
+	type condor_$1_exec_t;
+	domain_type(condor_$1_t)
+	domain_entry_file(condor_$1_t, condor_$1_exec_t)
+	role system_r types condor_$1_t;
+
+	#############################
+	#
+	# Policy
+	#
+
+	domtrans_pattern(condor_master_t, condor_$1_exec_t, condor_$1_t)
+	allow condor_master_t condor_$1_exec_t:file ioctl;
+
+	auth_use_nsswitch(condor_$1_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an condor environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`condor_admin',`
+	gen_require(`
+		attribute condor_domain;
+		type condor_initrc_exec_config_t, condor_log_t;
+		type condor_var_lib_t, condor_var_lock_t, condor_schedd_tmp_t;
+		type condor_var_run_t, condor_startd_tmp_t;
+	')
+
+	allow $1 condor_domain:process { ptrace signal_perms };
+	ps_process_pattern($1, condor_domain)
+
+	init_labeled_script_domtrans($1, condor_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 condor_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, condor_log_t)
+
+	files_search_locks($1)
+	admin_pattern($1, condor_var_lock_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, condor_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, condor_var_run_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, { condor_schedd_tmp_t condor_startd_tmp_t })
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/condor.te refpolicy/policy/modules/contrib/condor.te
--- refpolicy/policy/modules/contrib/condor.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/condor.te	2012-09-27 20:03:30.742126498 +0200
@@ -0,0 +1,236 @@
+policy_module(condor, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+## <desc>
+##	<p>
+##	Determine whether Condor can connect
+##	to the network using TCP.
+##	</p>
+## </desc>
+gen_tunable(condor_tcp_network_connect, false)
+
+attribute condor_domain;
+
+type condor_master_t, condor_domain;
+type condor_master_exec_t;
+init_daemon_domain(condor_master_t, condor_master_exec_t)
+
+type condor_initrc_exec_t;
+init_script_file(condor_initrc_exec_t)
+
+type condor_schedd_tmp_t;
+files_tmp_file(condor_schedd_tmp_t)
+
+type condor_startd_tmp_t;
+files_tmp_file(condor_startd_tmp_t)
+
+type condor_startd_tmpfs_t;
+files_tmpfs_file(condor_startd_tmpfs_t)
+
+type condor_log_t;
+logging_log_file(condor_log_t)
+
+type condor_var_lib_t;
+files_type(condor_var_lib_t)
+
+type condor_var_lock_t;
+files_lock_file(condor_var_lock_t)
+
+type condor_var_run_t;
+files_pid_file(condor_var_run_t)
+
+condor_domain_template(collector)
+condor_domain_template(negotiator)
+condor_domain_template(procd)
+condor_domain_template(schedd)
+condor_domain_template(startd)
+
+#####################################
+#
+# Global local policy
+#
+
+allow condor_domain self:process signal_perms;
+allow condor_domain self:fifo_file rw_fifo_file_perms;
+allow condor_domain self:tcp_socket { accept listen };
+allow condor_domain self:unix_stream_socket { accept listen };
+
+manage_dirs_pattern(condor_domain, condor_log_t, condor_log_t)
+append_files_pattern(condor_domain, condor_log_t, condor_log_t)
+create_files_pattern(condor_domain, condor_log_t, condor_log_t)
+getattr_files_pattern(condor_domain, condor_log_t, condor_log_t)
+logging_log_filetrans(condor_domain, condor_log_t, { dir file })
+
+manage_dirs_pattern(condor_domain, condor_var_lib_t, condor_var_lib_t)
+manage_files_pattern(condor_domain, condor_var_lib_t, condor_var_lib_t)
+files_var_lib_filetrans(condor_domain, condor_var_lib_t, { dir file })
+
+manage_dirs_pattern(condor_domain, condor_var_lock_t, condor_var_lock_t)
+manage_files_pattern(condor_domain, condor_var_lock_t, condor_var_lock_t)
+files_lock_filetrans(condor_domain, condor_var_lock_t, { dir file })
+
+manage_dirs_pattern(condor_domain, condor_var_run_t, condor_var_run_t)
+manage_files_pattern(condor_domain, condor_var_run_t, condor_var_run_t)
+manage_fifo_files_pattern(condor_domain, condor_var_run_t, condor_var_run_t)
+files_pid_filetrans(condor_domain, condor_var_run_t, { dir file fifo_file })
+
+allow condor_domain condor_master_t:process signull;
+allow condor_domain condor_master_t:tcp_socket getattr;
+
+kernel_read_kernel_sysctls(condor_domain)
+kernel_read_network_state(condor_domain)
+kernel_read_system_state(condor_domain)
+
+corecmd_exec_bin(condor_domain)
+corecmd_exec_shell(condor_domain)
+
+corenet_all_recvfrom_netlabel(condor_domain)
+corenet_all_recvfrom_unlabeled(condor_domain)
+corenet_tcp_sendrecv_generic_if(condor_domain)
+corenet_tcp_sendrecv_generic_node(condor_domain)
+
+corenet_sendrecv_condor_client_packets(condor_domain)
+corenet_tcp_connect_condor_port(condor_domain)
+corenet_tcp_sendrecv_condor_port(condor_domain)
+
+domain_use_interactive_fds(condor_domain)
+
+dev_read_rand(condor_domain)
+dev_read_sysfs(condor_domain)
+dev_read_urand(condor_domain)
+
+logging_send_syslog_msg(condor_domain)
+
+miscfiles_read_localization(condor_domain)
+
+tunable_policy(`condor_tcp_network_connect',`
+	corenet_sendrecv_all_client_packets(condor_domain)
+	corenet_tcp_connect_all_ports(condor_domain)
+	corenet_tcp_sendrecv_all_ports(condor_domain)
+')
+
+optional_policy(`
+	rhcs_stream_connect_cluster(condor_domain)
+')
+
+#####################################
+#
+# Master local policy
+#
+
+allow condor_master_t self:capability { setuid setgid dac_override sys_ptrace };
+
+allow condor_master_t condor_domain:process signal;
+
+corenet_udp_sendrecv_generic_if(condor_master_t)
+corenet_udp_sendrecv_generic_node(condor_master_t)
+corenet_tcp_bind_generic_node(condor_master_t)
+corenet_udp_bind_generic_node(condor_master_t)
+
+corenet_sendrecv_condor_server_packets(condor_master_t)
+corenet_tcp_bind_condor_port(condor_master_t)
+corenet_tcp_sendrecv_condor_port(condor_master_t)
+corenet_udp_bind_condor_port(condor_master_t)
+corenet_udp_sendrecv_condor_port(condor_master_t)
+
+corenet_sendrecv_amqp_client_packets(condor_master_t)
+corenet_tcp_connect_amqp_port(condor_master_t)
+corenet_tcp_sendrecv_amqp_port(condor_master_t)
+
+domain_read_all_domains_state(condor_master_t)
+
+auth_use_nsswitch(condor_master_t)
+
+######################################
+#
+# Collector local policy
+#
+
+allow condor_collector_t self:capability { setuid setgid };
+
+allow condor_collector_t condor_master_t:tcp_socket rw_stream_socket_perms;
+allow condor_collector_t condor_master_t:udp_socket rw_socket_perms;
+
+kernel_read_network_state(condor_collector_t)
+
+#####################################
+#
+# Negotiator local policy
+#
+allow condor_negotiator_t self:capability { setuid setgid };
+allow condor_negotiator_t condor_master_t:tcp_socket rw_stream_socket_perms;
+allow condor_negotiator_t condor_master_t:udp_socket getattr;
+
+######################################
+#
+# Procd local policy
+#
+
+allow condor_procd_t self:capability { fowner chown dac_override sys_ptrace };
+
+domain_read_all_domains_state(condor_procd_t)
+
+#######################################
+#
+# Schedd local policy
+#
+
+allow condor_schedd_t self:capability { setuid chown setgid dac_override };
+
+allow condor_schedd_t condor_master_t:tcp_socket rw_stream_socket_perms;
+allow condor_schedd_t condor_master_t:udp_socket getattr;
+
+allow condor_schedd_t condor_var_lock_t:dir manage_file_perms;
+
+domtrans_pattern(condor_schedd_t, condor_procd_exec_t, condor_procd_t)
+domtrans_pattern(condor_schedd_t, condor_startd_exec_t, condor_startd_t)
+
+manage_dirs_pattern(condor_schedd_t, condor_schedd_tmp_t, condor_schedd_tmp_t)
+manage_files_pattern(condor_schedd_t, condor_schedd_tmp_t, condor_schedd_tmp_t)
+relabel_files_pattern(condor_schedd_t, condor_schedd_tmp_t, condor_schedd_tmp_t)
+files_tmp_filetrans(condor_schedd_t, condor_schedd_tmp_t, { file dir })
+
+#####################################
+#
+# Startd local policy
+#
+
+allow condor_startd_t self:capability { setuid net_admin setgid dac_override };
+allow condor_startd_t self:process execmem;
+
+manage_dirs_pattern(condor_startd_t, condor_startd_tmp_t, condor_startd_tmp_t)
+manage_files_pattern(condor_startd_t, condor_startd_tmp_t, condor_startd_tmp_t)
+relabel_files_pattern(condor_startd_t, condor_startd_tmp_t, condor_startd_tmp_t)
+files_tmp_filetrans(condor_startd_t, condor_startd_tmp_t, { file dir })
+
+manage_dirs_pattern(condor_startd_t, condor_startd_tmpfs_t, condor_startd_tmpfs_t)
+manage_files_pattern(condor_startd_t, condor_startd_tmpfs_t, condor_startd_tmpfs_t)
+fs_tmpfs_filetrans(condor_startd_t, condor_startd_tmpfs_t, { dir file })
+
+can_exec(condor_startd_t, condor_startd_exec_t)
+
+domain_read_all_domains_state(condor_startd_t)
+
+mcs_process_set_categories(condor_startd_t)
+
+init_domtrans_script(condor_startd_t)
+
+libs_exec_lib_files(condor_startd_t)
+
+files_read_usr_files(condor_startd_t)
+
+optional_policy(`
+	ssh_basic_client_template(condor_startd, condor_startd_t, system_r)
+	ssh_domtrans(condor_startd_t)
+
+	manage_files_pattern(condor_startd_ssh_t, condor_var_lib_t, condor_var_lib_t)
+	manage_dirs_pattern(condor_startd_ssh_t, condor_var_lib_t, condor_var_lib_t)
+
+	optional_policy(`
+		kerberos_use(condor_startd_ssh_t)
+	')
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/consolekit.fc refpolicy/policy/modules/contrib/consolekit.fc
--- refpolicy/policy/modules/contrib/consolekit.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/consolekit.fc	2012-09-27 20:03:30.742126498 +0200
@@ -1,7 +1,7 @@
 /usr/sbin/console-kit-daemon	--	gen_context(system_u:object_r:consolekit_exec_t,s0)
 
-/var/log/ConsoleKit(/.*)?		gen_context(system_u:object_r:consolekit_log_t,s0)
+/var/log/ConsoleKit(/.*)?	gen_context(system_u:object_r:consolekit_log_t,s0)
 
+/var/run/ConsoleKit(/.*)?	gen_context(system_u:object_r:consolekit_var_run_t,s0)
 /var/run/consolekit\.pid	--	gen_context(system_u:object_r:consolekit_var_run_t,s0)
-/var/run/console-kit-daemon\.pid --	gen_context(system_u:object_r:consolekit_var_run_t,s0)
-/var/run/ConsoleKit(/.*)?		gen_context(system_u:object_r:consolekit_var_run_t,s0)
+/var/run/console-kit-daemon\.pid	--	gen_context(system_u:object_r:consolekit_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/consolekit.if refpolicy/policy/modules/contrib/consolekit.if
--- refpolicy/policy/modules/contrib/consolekit.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/consolekit.if	2012-09-27 20:03:30.743126498 +0200
@@ -15,6 +15,7 @@
 		type consolekit_t, consolekit_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, consolekit_exec_t, consolekit_t)
 ')
 
@@ -60,7 +61,8 @@
 
 ########################################
 ## <summary>
-##	Manage consolekit log files.
+##	Create, read, write, and delete
+##	consolekit log files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/consolekit.te refpolicy/policy/modules/contrib/consolekit.te
--- refpolicy/policy/modules/contrib/consolekit.te	2012-09-28 19:56:54.181040257 +0200
+++ refpolicy/policy/modules/contrib/consolekit.te	2012-09-27 20:03:30.743126498 +0200
@@ -1,4 +1,4 @@
-policy_module(consolekit, 1.8.0)
+policy_module(consolekit, 1.8.2)
 
 ########################################
 #
@@ -12,29 +12,39 @@
 type consolekit_log_t;
 logging_log_file(consolekit_log_t)
 
+type consolekit_tmpfs_t;
+files_tmpfs_file(consolekit_tmpfs_t)
+
 type consolekit_var_run_t;
 files_pid_file(consolekit_var_run_t)
+init_daemon_run_dir(consolekit_var_run_t, "ConsoleKit")
 
 ########################################
 #
-# consolekit local policy
+# Local policy
 #
 
 allow consolekit_t self:capability { chown setuid setgid sys_tty_config dac_override sys_nice sys_ptrace };
 allow consolekit_t self:process { getsched signal };
 allow consolekit_t self:fifo_file rw_fifo_file_perms;
-allow consolekit_t self:unix_stream_socket create_stream_socket_perms;
-allow consolekit_t self:unix_dgram_socket create_socket_perms;
+allow consolekit_t self:unix_stream_socket { accept listen };
 
-manage_files_pattern(consolekit_t, consolekit_log_t, consolekit_log_t)
+create_files_pattern(consolekit_t, consolekit_log_t, consolekit_log_t)
+append_files_pattern(consolekit_t, consolekit_log_t, consolekit_log_t)
+setattr_files_pattern(consolekit_t, consolekit_log_t, consolekit_log_t)
 logging_log_filetrans(consolekit_t, consolekit_log_t, file)
 
 manage_dirs_pattern(consolekit_t, consolekit_var_run_t, consolekit_var_run_t)
 manage_files_pattern(consolekit_t, consolekit_var_run_t, consolekit_var_run_t)
-files_pid_filetrans(consolekit_t, consolekit_var_run_t, { file dir })
+files_pid_filetrans(consolekit_t, consolekit_var_run_t, { dir file })
 
 kernel_read_system_state(consolekit_t)
 
+corenet_all_recvfrom_unlabeled(consolekit_t)
+corenet_all_recvfrom_netlabel(consolekit_t)
+corenet_tcp_sendrecv_generic_if(consolekit_t)
+corenet_tcp_sendrecv_generic_node(consolekit_t)
+
 corecmd_exec_bin(consolekit_t)
 corecmd_exec_shell(consolekit_t)
 
@@ -45,7 +55,6 @@
 domain_use_interactive_fds(consolekit_t)
 domain_dontaudit_ptrace_all_domains(consolekit_t)
 
-files_read_etc_files(consolekit_t)
 files_read_usr_files(consolekit_t)
 # needs to read /var/lib/dbus/machine-id
 files_read_var_lib_files(consolekit_t)
@@ -92,6 +101,10 @@
 	')
 
 	optional_policy(`
+		policykit_dbus_chat(consolekit_t)
+	')
+
+	optional_policy(`
 		rpm_dbus_chat(consolekit_t)
 	')
 
@@ -105,20 +118,26 @@
 ')
 
 optional_policy(`
-	policykit_dbus_chat(consolekit_t)
+	networkmanager_append_log_files(consolekit_t)
+')
+
+optional_policy(`
 	policykit_domtrans_auth(consolekit_t)
 	policykit_read_lib(consolekit_t)
 	policykit_read_reload(consolekit_t)
 ')
 
 optional_policy(`
-	type consolekit_tmpfs_t;
-	files_tmpfs_file(consolekit_tmpfs_t)
+	shutdown_domtrans(consolekit_t)
+')
 
+optional_policy(`
+	corenet_sendrecv_xserver_client_packets(consolekit_t)
+	corenet_tcp_connect_xserver_port(consolekit_t)
+	corenet_tcp_sendrecv_xserver_port(consolekit_t)
+	xserver_non_drawing_client(consolekit_t)
 	xserver_read_xdm_pid(consolekit_t)
 	xserver_read_user_xauth(consolekit_t)
-	xserver_non_drawing_client(consolekit_t)
-	corenet_tcp_connect_xserver_port(consolekit_t)
 	xserver_stream_connect(consolekit_t)
 	xserver_user_x_domain_template(consolekit, consolekit_t, consolekit_tmpfs_t)
 ')
@@ -130,6 +149,5 @@
 ')
 
 optional_policy(`
-	#reading .Xauthity
 	unconfined_stream_connect(consolekit_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/corosync.fc refpolicy/policy/modules/contrib/corosync.fc
--- refpolicy/policy/modules/contrib/corosync.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/corosync.fc	2012-09-27 20:03:30.743126498 +0200
@@ -1,12 +1,15 @@
 /etc/rc\.d/init\.d/corosync	--	gen_context(system_u:object_r:corosync_initrc_exec_t,s0)
 
-/usr/sbin/corosync		--	gen_context(system_u:object_r:corosync_exec_t,s0)
+/usr/sbin/corosync	--	gen_context(system_u:object_r:corosync_exec_t,s0)
+/usr/sbin/corosync-notifyd	--	gen_context(system_u:object_r:corosync_exec_t,s0)
 
-/usr/sbin/ccs_tool		--	gen_context(system_u:object_r:corosync_exec_t,s0)
+/usr/sbin/ccs_tool	--	gen_context(system_u:object_r:corosync_exec_t,s0)
+/usr/sbin/cman_tool	--	gen_context(system_u:object_r:corosync_exec_t,s0)
 
-/var/lib/corosync(/.*)?			gen_context(system_u:object_r:corosync_var_lib_t,s0)
+/var/lib/corosync(/.*)?	gen_context(system_u:object_r:corosync_var_lib_t,s0)
 
-/var/log/cluster/corosync\.log	--	gen_context(system_u:object_r:corosync_var_log_t,s0)
+/var/log/cluster/corosync\.log.*	--	gen_context(system_u:object_r:corosync_var_log_t,s0)
 
-/var/run/cman_.*		-s	gen_context(system_u:object_r:corosync_var_run_t,s0)
-/var/run/corosync\.pid		--	gen_context(system_u:object_r:corosync_var_run_t,s0)
+/var/run/cman_.*	-s	gen_context(system_u:object_r:corosync_var_run_t,s0)
+/var/run/corosync\.pid	--	gen_context(system_u:object_r:corosync_var_run_t,s0)
+/var/run/rsctmp(/.*)?	gen_context(system_u:object_r:corosync_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/corosync.if refpolicy/policy/modules/contrib/corosync.if
--- refpolicy/policy/modules/contrib/corosync.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/corosync.if	2012-09-27 20:03:30.743126498 +0200
@@ -1,4 +1,4 @@
-## <summary>Corosync Cluster Engine</summary>
+## <summary>Corosync Cluster Engine.</summary>
 
 ########################################
 ## <summary>
@@ -15,12 +15,13 @@
 		type corosync_t, corosync_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, corosync_exec_t, corosync_t)
 ')
 
 #######################################
 ## <summary>
-##	Allow the specified domain to read corosync's log files.
+##	Read corosync log files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -40,8 +41,8 @@
 
 #####################################
 ## <summary>
-##	Connect to corosync over a unix domain
-##	stream socket.
+##	Connect to corosync over a unix
+##	domain stream socket.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -60,8 +61,8 @@
 
 ######################################
 ## <summary>
-##	All of the rules required to administrate
-##	an corosync environment
+##	All of the rules required to
+##	administrate an corosync environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -70,7 +71,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the corosyncd domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/corosync.te refpolicy/policy/modules/contrib/corosync.te
--- refpolicy/policy/modules/contrib/corosync.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/corosync.te	2012-09-27 20:03:30.743126498 +0200
@@ -1,4 +1,4 @@
-policy_module(corosync, 1.0.0)
+policy_module(corosync, 1.0.1)
 
 ########################################
 #
@@ -8,6 +8,7 @@
 type corosync_t;
 type corosync_exec_t;
 init_daemon_domain(corosync_t, corosync_exec_t)
+domain_obj_id_change_exemption(corosync_t)
 
 type corosync_initrc_exec_t;
 init_script_file(corosync_initrc_exec_t)
@@ -29,21 +30,22 @@
 
 ########################################
 #
-# corosync local policy
+# Local policy
 #
 
-allow corosync_t self:capability { sys_nice sys_resource ipc_lock };
-allow corosync_t self:process { setrlimit setsched signal };
-
+allow corosync_t self:capability { dac_override setuid setgid sys_nice sys_admin sys_resource ipc_lock };
+# for hearbeat
+allow corosync_t self:capability { net_raw chown };
+allow corosync_t self:process { setpgid setrlimit setsched signal signull };
 allow corosync_t self:fifo_file rw_fifo_file_perms;
 allow corosync_t self:sem create_sem_perms;
-allow corosync_t self:unix_stream_socket { create_stream_socket_perms connectto };
-allow corosync_t self:unix_dgram_socket create_socket_perms;
-allow corosync_t self:udp_socket create_socket_perms;
+allow corosync_t self:shm create_shm_perms;
+allow corosync_t self:unix_stream_socket { accept connectto listen };
 
 manage_dirs_pattern(corosync_t, corosync_tmp_t, corosync_tmp_t)
 manage_files_pattern(corosync_t, corosync_tmp_t, corosync_tmp_t)
-files_tmp_filetrans(corosync_t, corosync_tmp_t, { file dir })
+relabel_files_pattern(corosync_t, corosync_tmp_t, corosync_tmp_t)
+files_tmp_filetrans(corosync_t, corosync_tmp_t, { dir file })
 
 manage_dirs_pattern(corosync_t, corosync_tmpfs_t, corosync_tmpfs_t)
 manage_files_pattern(corosync_t, corosync_tmpfs_t, corosync_tmpfs_t)
@@ -52,30 +54,49 @@
 manage_files_pattern(corosync_t, corosync_var_lib_t, corosync_var_lib_t)
 manage_dirs_pattern(corosync_t, corosync_var_lib_t, corosync_var_lib_t)
 manage_sock_files_pattern(corosync_t, corosync_var_lib_t, corosync_var_lib_t)
-files_var_lib_filetrans(corosync_t, corosync_var_lib_t, { file dir sock_file })
+manage_fifo_files_pattern(corosync_t, corosync_var_lib_t,corosync_var_lib_t)
+files_var_lib_filetrans(corosync_t,corosync_var_lib_t, { dir fifo_file file sock_file })
 
-manage_files_pattern(corosync_t, corosync_var_log_t, corosync_var_log_t)
-manage_sock_files_pattern(corosync_t, corosync_var_log_t, corosync_var_log_t)
-logging_log_filetrans(corosync_t, corosync_var_log_t, { sock_file file })
+create_files_pattern(corosync_t, corosync_var_log_t, corosync_var_log_t)
+append_files_pattern(corosync_t, corosync_var_log_t, corosync_var_log_t)
+setattr_files_pattern(corosync_t, corosync_var_log_t, corosync_var_log_t)
+logging_log_filetrans(corosync_t, corosync_var_log_t, file)
 
 manage_files_pattern(corosync_t, corosync_var_run_t, corosync_var_run_t)
 manage_sock_files_pattern(corosync_t, corosync_var_run_t, corosync_var_run_t)
-files_pid_filetrans(corosync_t, corosync_var_run_t, { file sock_file })
+manage_dirs_pattern(corosync_t, corosync_var_run_t,corosync_var_run_t)
+files_pid_filetrans(corosync_t, corosync_var_run_t, { file sock_file dir })
+
+can_exec(corosync_t, corosync_exec_t)
 
+kernel_read_net_sysctls(corosync_t)
+kernel_read_network_state(corosync_t)
+kernel_read_kernel_sysctls(corosync_t)
 kernel_read_system_state(corosync_t)
 
 corecmd_exec_bin(corosync_t)
+corecmd_exec_shell(corosync_t)
 
+corenet_all_recvfrom_unlabeled(corosync_t)
+corenet_all_recvfrom_netlabel(corosync_t)
+corenet_udp_sendrecv_generic_if(corosync_t)
+corenet_udp_sendrecv_generic_node(corosync_t)
+corenet_udp_bind_generic_node(corosync_t)
+
+corenet_sendrecv_netsupport_server_packets(corosync_t)
 corenet_udp_bind_netsupport_port(corosync_t)
+corenet_udp_sendrecv_netsupport_port(corosync_t)
 
 dev_read_urand(corosync_t)
 
 domain_read_all_domains_state(corosync_t)
 
 files_manage_mounttab(corosync_t)
+files_read_usr_files(corosync_t)
 
 auth_use_nsswitch(corosync_t)
 
+init_domtrans_script(corosync_t)
 init_read_script_state(corosync_t)
 init_rw_script_tmp_files(corosync_t)
 
@@ -83,19 +104,34 @@
 
 miscfiles_read_localization(corosync_t)
 
-userdom_rw_user_tmpfs_files(corosync_t)
+userdom_read_user_tmp_files(corosync_t)
+userdom_manage_user_tmpfs_files(corosync_t)
 
 optional_policy(`
 	ccs_read_config(corosync_t)
 ')
 
 optional_policy(`
-	# to communication with RHCS
-	rhcs_rw_dlm_controld_semaphores(corosync_t)
+	cmirrord_rw_shm(corosync_t)
+')
 
-	rhcs_rw_fenced_semaphores(corosync_t)
+optional_policy(`
+	dbus_system_bus_client(corosync_t)
+')
 
-	rhcs_rw_gfs_controld_semaphores(corosync_t)
+optional_policy(`
+	drbd_domtrans(corosync_t)
+')
+
+optional_policy(`
+	qpidd_rw_shm(corosync_t)
+')
+
+optional_policy(`
+	rhcs_getattr_fenced_exec_files(corosync_t)
+	rhcs_rw_cluster_shm(corosync_t)
+	rhcs_rw_cluster_semaphores(corosync_t)
+	rhcs_stream_connect_cluster(corosync_t)
 ')
 
 optional_policy(`
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/courier.fc refpolicy/policy/modules/contrib/courier.fc
--- refpolicy/policy/modules/contrib/courier.fc	2012-09-28 19:56:54.043040254 +0200
+++ refpolicy/policy/modules/contrib/courier.fc	2012-09-27 20:03:30.743126498 +0200
@@ -1,33 +1,31 @@
-/etc/courier(/.*)?				gen_context(system_u:object_r:courier_etc_t,s0)
-/etc/courier-imap(/.*)?				gen_context(system_u:object_r:courier_etc_t,s0)
+/etc/courier(/.*)?	gen_context(system_u:object_r:courier_etc_t,s0)
+/etc/courier-imaP(/.*)?	gen_context(system_u:object_r:courier_etc_t,s0)
 
-/usr/bin/imapd				--	gen_context(system_u:object_r:courier_pop_exec_t,s0)
+/usr/bin/imapd	--	gen_context(system_u:object_r:courier_pop_exec_t,s0)
 
-/usr/sbin/authdaemond			--	gen_context(system_u:object_r:courier_authdaemon_exec_t,s0)
-/usr/sbin/courier-imapd			--	gen_context(system_u:object_r:courier_pop_exec_t,s0)
-/usr/sbin/courierlogger			--	gen_context(system_u:object_r:courier_exec_t,s0)
-/usr/sbin/courierldapaliasd		--	gen_context(system_u:object_r:courier_exec_t,s0)
-/usr/sbin/couriertcpd			--	gen_context(system_u:object_r:courier_tcpd_exec_t,s0)
-/usr/sbin/imaplogin			--	gen_context(system_u:object_r:courier_authdaemon_exec_t,s0)
-
-/usr/lib/courier/(courier-)?authlib/.* --	gen_context(system_u:object_r:courier_authdaemon_exec_t,s0)
-/usr/lib/courier/courier/.*		--	gen_context(system_u:object_r:courier_exec_t,s0)
+/usr/sbin/authdaemond	--	gen_context(system_u:object_r:courier_authdaemon_exec_t,s0)
+/usr/sbin/courier-imapd	--	gen_context(system_u:object_r:courier_pop_exec_t,s0)
+/usr/sbin/courierlogger	--	gen_context(system_u:object_r:courier_exec_t,s0)
+/usr/sbin/courierldapaliasd	--	gen_context(system_u:object_r:courier_exec_t,s0)
+/usr/sbin/couriertcpd	--	gen_context(system_u:object_r:courier_tcpd_exec_t,s0)
+/usr/sbin/imaplogin	--	gen_context(system_u:object_r:courier_authdaemon_exec_t,s0)
+
+/usr/lib/courier/authlib/.* --	gen_context(system_u:object_r:courier_authdaemon_exec_t,s0)
+/usr/lib/courier/courier-authlib/.* --	gen_context(system_u:object_r:courier_authdaemon_exec_t,s0)
+/usr/lib/courier/courier/.*	--	gen_context(system_u:object_r:courier_exec_t,s0)
 /usr/lib/courier/courier/courierpop.*	--	gen_context(system_u:object_r:courier_pop_exec_t,s0)
 /usr/lib/courier/courier/imaplogin	--	gen_context(system_u:object_r:courier_pop_exec_t,s0)
-/usr/lib/courier/courier/pcpd		--	gen_context(system_u:object_r:courier_pcp_exec_t,s0)
-/usr/lib/courier/imapd			--	gen_context(system_u:object_r:courier_pop_exec_t,s0)
-/usr/lib/courier/pop3d			--	gen_context(system_u:object_r:courier_pop_exec_t,s0)
-/usr/lib/courier/rootcerts(/.*)?		gen_context(system_u:object_r:courier_etc_t,s0)
+/usr/lib/courier/courier/pcpd	--	gen_context(system_u:object_r:courier_pcp_exec_t,s0)
+/usr/lib/courier/imapd	--	gen_context(system_u:object_r:courier_pop_exec_t,s0)
+/usr/lib/courier/pop3d	--	gen_context(system_u:object_r:courier_pop_exec_t,s0)
+/usr/lib/courier/rootcerts(/.*)?	gen_context(system_u:object_r:courier_etc_t,s0)
 /usr/lib/courier/sqwebmail/cleancache\.pl --	gen_context(system_u:object_r:sqwebmail_cron_exec_t,s0)
-
-ifdef(`distro_gentoo',`
 /usr/lib/courier-imap/couriertcpd	--	gen_context(system_u:object_r:courier_tcpd_exec_t,s0)
-')
 
-/var/lib/courier(/.*)?				gen_context(system_u:object_r:courier_var_lib_t,s0)
-/var/lib/courier-imap(/.*)?			gen_context(system_u:object_r:courier_var_lib_t,s0)
+/var/lib/courier(/.*)?	gen_context(system_u:object_r:courier_var_lib_t,s0)
+/var/lib/courier-imap(/.*)?	gen_context(system_u:object_r:courier_var_lib_t,s0)
 
-/var/run/courier(/.*)?				gen_context(system_u:object_r:courier_var_run_t,s0)
+/var/run/courier(/.*)?	gen_context(system_u:object_r:courier_var_run_t,s0)
 
-/var/spool/authdaemon(/.*)?			gen_context(system_u:object_r:courier_spool_t,s0)
-/var/spool/courier(/.*)?			gen_context(system_u:object_r:courier_spool_t,s0)
+/var/spool/authdaemon(/.*)?	gen_context(system_u:object_r:courier_spool_t,s0)
+/var/spool/courier(/.*)?	gen_context(system_u:object_r:courier_spool_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/courier.if refpolicy/policy/modules/contrib/courier.if
--- refpolicy/policy/modules/contrib/courier.if	2012-09-28 19:56:54.044040254 +0200
+++ refpolicy/policy/modules/contrib/courier.if	2012-09-27 20:03:30.743126498 +0200
@@ -1,97 +1,43 @@
-## <summary>Courier IMAP and POP3 email servers</summary>
+## <summary>Courier IMAP and POP3 email servers.</summary>
 
-########################################
+#######################################
 ## <summary>
-##	Template for creating courier server processes.
+##	The template to define a courier domain. 
 ## </summary>
-## <param name="prefix">
+## <param name="domain_prefix">
 ##	<summary>
-##	Prefix name of the server process.
+##	Domain prefix to be used.
 ##	</summary>
 ## </param>
 #
 template(`courier_domain_template',`
+	gen_require(`
+		attribute courier_domain;
+	')
 
-	##############################
+	#######################################
 	#
 	# Declarations
 	#
 
-	type courier_$1_t;
+	type courier_$1_t, courier_domain;
 	type courier_$1_exec_t;
 	init_daemon_domain(courier_$1_t, courier_$1_exec_t)
 
-	##############################
+	#######################################
 	#
-	# Declarations
+	# Policy
 	#
 
-	allow courier_$1_t self:capability dac_override;
-	dontaudit courier_$1_t self:capability sys_tty_config;
-	allow courier_$1_t self:process { setpgid signal_perms };
-	allow courier_$1_t self:fifo_file { read write getattr };
-	allow courier_$1_t self:tcp_socket create_stream_socket_perms;
-	allow courier_$1_t self:udp_socket create_socket_perms;
-
 	can_exec(courier_$1_t, courier_$1_exec_t)
-
-	read_files_pattern(courier_$1_t, courier_etc_t, courier_etc_t)
-	allow courier_$1_t courier_etc_t:dir list_dir_perms;
-
-	manage_dirs_pattern(courier_$1_t, courier_var_run_t, courier_var_run_t)
-	manage_files_pattern(courier_$1_t, courier_var_run_t, courier_var_run_t)
-	manage_lnk_files_pattern(courier_$1_t, courier_var_run_t, courier_var_run_t)
-	manage_sock_files_pattern(courier_$1_t, courier_var_run_t, courier_var_run_t)
-	files_search_pids(courier_$1_t)
-	files_pid_filetrans(courier_$1_t, courier_var_run_t, dir)
-
-	kernel_read_system_state(courier_$1_t)
-	kernel_read_kernel_sysctls(courier_$1_t)
-
-	corecmd_exec_bin(courier_$1_t)
-	corecmd_exec_shell(courier_$1_t)
-
-	corenet_all_recvfrom_unlabeled(courier_$1_t)
-	corenet_all_recvfrom_netlabel(courier_$1_t)
-	corenet_tcp_sendrecv_generic_if(courier_$1_t)
-	corenet_udp_sendrecv_generic_if(courier_$1_t)
-	corenet_tcp_sendrecv_generic_node(courier_$1_t)
-	corenet_udp_sendrecv_generic_node(courier_$1_t)
-	corenet_tcp_sendrecv_all_ports(courier_$1_t)
-	corenet_udp_sendrecv_all_ports(courier_$1_t)
-
-	dev_read_sysfs(courier_$1_t)
-
-	domain_use_interactive_fds(courier_$1_t)
-
-	files_read_etc_files(courier_$1_t)
-	files_read_etc_runtime_files(courier_$1_t)
-	files_read_usr_files(courier_$1_t)
-
-	fs_getattr_xattr_fs(courier_$1_t)
-	fs_search_auto_mountpoints(courier_$1_t)
-
-	logging_send_syslog_msg(courier_$1_t)
-
-	sysnet_read_config(courier_$1_t)
-
-	userdom_dontaudit_use_unpriv_user_fds(courier_$1_t)
-
-	optional_policy(`
-		seutil_sigchld_newrole(courier_$1_t)
-	')
-
-	optional_policy(`
-		udev_read_db(courier_$1_t)
-	')
 ')
 
 ########################################
 ## <summary>
-##	Execute the courier authentication daemon with
-##	a domain transition.
+##	Execute the courier authentication
+##	daemon with a domain transition.
 ## </summary>
-## <param name="prefix">
+## <param name="domain">
 ##	<summary>
 ##	Domain allowed to transition.
 ##	</summary>
@@ -102,6 +48,7 @@
 		type courier_authdaemon_t, courier_authdaemon_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, courier_authdaemon_exec_t, courier_authdaemon_t)
 ')
 
@@ -145,10 +92,10 @@
 
 ########################################
 ## <summary>
-##	Execute the courier POP3 and IMAP server with
-##	a domain transition.
+##	Execute the courier POP3 and IMAP
+##	server with a domain transition.
 ## </summary>
-## <param name="prefix">
+## <param name="domain">
 ##	<summary>
 ##	Domain allowed to transition.
 ##	</summary>
@@ -159,14 +106,15 @@
 		type courier_pop_t, courier_pop_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, courier_pop_exec_t, courier_pop_t)
 ')
 
 ########################################
 ## <summary>
-##	Read courier config files
+##	Read courier config files.
 ## </summary>
-## <param name="prefix">
+## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
@@ -177,6 +125,7 @@
 		type courier_etc_t;
 	')
 
+	files_search_etc($1)
 	read_files_pattern($1, courier_etc_t, courier_etc_t)
 ')
 
@@ -185,7 +134,7 @@
 ##	Create, read, write, and delete courier
 ##	spool directories.
 ## </summary>
-## <param name="prefix">
+## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
@@ -196,6 +145,7 @@
 		type courier_spool_t;
 	')
 
+	files_search_var($1)
 	manage_dirs_pattern($1, courier_spool_t, courier_spool_t)
 ')
 
@@ -204,7 +154,7 @@
 ##	Create, read, write, and delete courier
 ##	spool files.
 ## </summary>
-## <param name="prefix">
+## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
@@ -215,6 +165,7 @@
 		type courier_spool_t;
 	')
 
+	files_search_var($1)
 	manage_files_pattern($1, courier_spool_t, courier_spool_t)
 ')
 
@@ -222,7 +173,7 @@
 ## <summary>
 ##	Read courier spool files.
 ## </summary>
-## <param name="prefix">
+## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
@@ -233,12 +184,13 @@
 		type courier_spool_t;
 	')
 
+	files_search_var($1)
 	read_files_pattern($1, courier_spool_t, courier_spool_t)
 ')
 
 ########################################
 ## <summary>
-##	Read and write to courier spool pipes.
+##	Read and write courier spool pipes.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -251,5 +203,6 @@
 		type courier_spool_t;
 	')
 
+	files_search_var($1)
 	allow $1 courier_spool_t:fifo_file rw_fifo_file_perms;
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/courier.te refpolicy/policy/modules/contrib/courier.te
--- refpolicy/policy/modules/contrib/courier.te	2012-09-28 19:56:54.044040254 +0200
+++ refpolicy/policy/modules/contrib/courier.te	2012-09-27 20:03:30.744126498 +0200
@@ -1,24 +1,25 @@
-policy_module(courier, 1.13.0)
+policy_module(courier, 1.13.1)
 
 ########################################
 #
 # Declarations
 #
 
+attribute courier_domain;
+
 courier_domain_template(authdaemon)
+courier_domain_template(pcp)
+courier_domain_template(pop)
+courier_domain_template(tcpd)
+courier_domain_template(sqwebmail)
+typealias courier_sqwebmail_exec_t alias sqwebmail_cron_exec_t;
 
 type courier_etc_t;
 files_config_file(courier_etc_t)
 
-courier_domain_template(pcp)
-
-courier_domain_template(pop)
-
 type courier_spool_t;
 files_type(courier_spool_t)
 
-courier_domain_template(tcpd)
-
 type courier_var_lib_t;
 files_type(courier_var_lib_t)
 
@@ -28,8 +29,56 @@
 type courier_exec_t;
 mta_agent_executable(courier_exec_t)
 
-courier_domain_template(sqwebmail)
-typealias courier_sqwebmail_exec_t alias sqwebmail_cron_exec_t;
+########################################
+#
+# Common local policy
+#
+
+allow courier_domain self:capability dac_override;
+dontaudit courier_domain self:capability sys_tty_config;
+allow courier_domain self:process { setpgid signal_perms };
+allow courier_domain self:fifo_file rw_fifo_file_perms;
+allow courier_domain self:tcp_socket create_stream_socket_perms;
+allow courier_domain self:udp_socket create_socket_perms;
+
+read_files_pattern(courier_domain, courier_etc_t, courier_etc_t)
+allow courier_domain courier_etc_t:dir list_dir_perms;
+
+manage_dirs_pattern(courier_domain, courier_var_run_t, courier_var_run_t)
+manage_files_pattern(courier_domain, courier_var_run_t, courier_var_run_t)
+manage_lnk_files_pattern(courier_domain, courier_var_run_t, courier_var_run_t)
+manage_sock_files_pattern(courier_domain, courier_var_run_t, courier_var_run_t)
+files_pid_filetrans(courier_domain, courier_var_run_t, dir)
+
+kernel_read_kernel_sysctls(courier_domain)
+kernel_read_system_state(courier_domain)
+
+corecmd_exec_bin(courier_domain)
+
+dev_read_sysfs(courier_domain)
+
+domain_use_interactive_fds(courier_domain)
+
+files_read_etc_files(courier_domain)
+files_read_etc_runtime_files(courier_domain)
+files_read_usr_files(courier_domain)
+
+fs_getattr_xattr_fs(courier_domain)
+fs_search_auto_mountpoints(courier_domain)
+
+logging_send_syslog_msg(courier_domain)
+
+sysnet_read_config(courier_domain)
+
+userdom_dontaudit_use_unpriv_user_fds(courier_domain)
+
+optional_policy(`
+	seutil_sigchld_newrole(courier_domain)
+')
+
+optional_policy(`
+	udev_read_db(courier_domain)
+')
 
 ########################################
 #
@@ -37,34 +86,29 @@
 #
 
 allow courier_authdaemon_t self:capability { setuid setgid sys_tty_config };
-allow courier_authdaemon_t self:unix_stream_socket { create_stream_socket_perms connectto };
+allow courier_authdaemon_t self:unix_stream_socket { accept connectto listen };
 
-can_exec(courier_authdaemon_t, courier_exec_t)
+create_dirs_pattern(courier_authdaemon_t, courier_var_lib_t, courier_var_lib_t)
+manage_sock_files_pattern(courier_authdaemon_t, courier_var_lib_t, courier_var_lib_t)
 
-allow courier_authdaemon_t courier_tcpd_t:fd use;
-allow courier_authdaemon_t courier_tcpd_t:tcp_socket rw_stream_socket_perms;
-allow courier_authdaemon_t courier_tcpd_t:fifo_file rw_fifo_file_perms;
+manage_sock_files_pattern(courier_authdaemon_t, courier_spool_t, courier_spool_t)
 
-allow courier_authdaemon_t courier_tcpd_t:tcp_socket rw_stream_socket_perms;
-allow courier_authdaemon_t courier_tcpd_t:unix_stream_socket rw_stream_socket_perms;
 allow courier_authdaemon_t courier_tcpd_t:process sigchld;
 allow courier_authdaemon_t courier_tcpd_t:fd use;
+allow courier_authdaemon_t courier_tcpd_t:fifo_file rw_fifo_file_perms;
 allow courier_authdaemon_t courier_tcpd_t:tcp_socket rw_stream_socket_perms;
-allow courier_authdaemon_t courier_tcpd_t:fifo_file rw_file_perms;
+allow courier_authdaemon_t courier_tcpd_t:unix_stream_socket rw_stream_socket_perms;
 
 read_lnk_files_pattern(courier_authdaemon_t, courier_var_lib_t, courier_var_lib_t)
 
-create_dirs_pattern(courier_authdaemon_t, courier_var_lib_t, courier_var_lib_t)
-manage_sock_files_pattern(courier_authdaemon_t, courier_spool_t, courier_spool_t)
-manage_sock_files_pattern(courier_authdaemon_t, courier_var_lib_t, courier_var_lib_t)
-files_search_spool(courier_authdaemon_t)
+can_exec(courier_authdaemon_t, courier_exec_t)
 
-corecmd_search_bin(courier_authdaemon_t)
+domtrans_pattern(courier_authdaemon_t, courier_pop_exec_t, courier_pop_t)
 
-# for SSP
 dev_read_urand(courier_authdaemon_t)
 
 files_getattr_tmp_dirs(courier_authdaemon_t)
+files_search_spool(courier_authdaemon_t)
 
 auth_domtrans_chk_passwd(courier_authdaemon_t)
 
@@ -72,10 +116,7 @@
 
 miscfiles_read_localization(courier_authdaemon_t)
 
-# should not be needed!
-userdom_search_user_home_dirs(courier_authdaemon_t)
-
-courier_domtrans_pop(courier_authdaemon_t)
+userdom_dontaudit_search_user_home_dirs(courier_authdaemon_t)
 
 ########################################
 #
@@ -96,24 +137,19 @@
 
 allow courier_pop_t courier_tcpd_t:{ unix_stream_socket tcp_socket } rw_stream_socket_perms;
 
-# inherits file handle - should it?
 allow courier_pop_t courier_var_lib_t:file { read write };
 
 # TODO Correct this, mentioning "var_lib_t" here is not done.
 search_dirs_pattern(courier_pop_t, var_lib_t, courier_var_lib_t)
 read_lnk_files_pattern(courier_pop_t, var_lib_t, courier_var_lib_t)
 
+domtrans_pattern(courier_pop_t, courier_authdaemon_exec_t, courier_authdaemon_t)
+
 miscfiles_read_localization(courier_pop_t)
 
 courier_authdaemon_rw_inherited_stream_sockets(courier_pop_t)
-courier_domtrans_authdaemon(courier_pop_t)
 
-# do the actual work (read the Maildir)
 userdom_manage_user_home_content_files(courier_pop_t)
-# cjp: the fact that this is different for pop vs imap means that
-# there should probably be a courier_pop_t and courier_imap_t
-# this should also probably be a separate type too instead of
-# the regular home dir
 userdom_manage_user_home_content_dirs(courier_pop_t)
 
 ########################################
@@ -123,25 +159,29 @@
 
 allow courier_tcpd_t self:capability kill;
 
-can_exec(courier_tcpd_t, courier_exec_t)
-
 manage_files_pattern(courier_tcpd_t, courier_var_lib_t, courier_var_lib_t)
 manage_lnk_files_pattern(courier_tcpd_t, courier_var_lib_t, courier_var_lib_t)
 files_search_var_lib(courier_tcpd_t)
 
-corecmd_search_bin(courier_tcpd_t)
+can_exec(courier_tcpd_t, courier_exec_t)
+
+domtrans_pattern(courier_tcpd_t, courier_pop_exec_t, courier_pop_t)
 
+corenet_all_recvfrom_unlabeled(courier_tcpd_t)
+corenet_all_recvfrom_netlabel(courier_tcpd_t)
+corenet_tcp_sendrecv_generic_if(courier_tcpd_t)
+corenet_tcp_sendrecv_generic_node(courier_tcpd_t)
 corenet_tcp_bind_generic_node(courier_tcpd_t)
-corenet_tcp_bind_pop_port(courier_tcpd_t)
+
 corenet_sendrecv_pop_server_packets(courier_tcpd_t)
+corenet_tcp_bind_pop_port(courier_tcpd_t)
+corenet_tcp_sendrecv_pop_port(courier_tcpd_t)
 
-# for TLS
 dev_read_rand(courier_tcpd_t)
 dev_read_urand(courier_tcpd_t)
 
 miscfiles_read_localization(courier_tcpd_t)
 
-courier_domtrans_pop(courier_tcpd_t)
 courier_authdaemon_stream_connect(courier_tcpd_t)
 courier_domtrans_authdaemon(courier_tcpd_t)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cpucontrol.fc refpolicy/policy/modules/contrib/cpucontrol.fc
--- refpolicy/policy/modules/contrib/cpucontrol.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cpucontrol.fc	2012-09-27 20:03:30.744126498 +0200
@@ -1,10 +1,10 @@
-
 /etc/firmware/.*	--	gen_context(system_u:object_r:cpucontrol_conf_t,s0)
 
 /sbin/microcode_ctl	--	gen_context(system_u:object_r:cpucontrol_exec_t,s0)
 
 /usr/sbin/cpufreqd	--	gen_context(system_u:object_r:cpuspeed_exec_t,s0)
 /usr/sbin/cpuspeed	--	gen_context(system_u:object_r:cpuspeed_exec_t,s0)
+/usr/sbin/microcode_ctl	--	gen_context(system_u:object_r:cpucontrol_exec_t,s0)
 /usr/sbin/powernowd	--	gen_context(system_u:object_r:cpuspeed_exec_t,s0)
 
 /var/run/cpufreqd\.pid	--	gen_context(system_u:object_r:cpuspeed_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cpucontrol.te refpolicy/policy/modules/contrib/cpucontrol.te
--- refpolicy/policy/modules/contrib/cpucontrol.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cpucontrol.te	2012-09-27 20:03:30.744126498 +0200
@@ -1,18 +1,20 @@
-policy_module(cpucontrol, 1.3.0)
+policy_module(cpucontrol, 1.3.1)
 
 ########################################
 #
 # Declarations
 #
 
-type cpucontrol_t;
+attribute cpucontrol_domain;
+
+type cpucontrol_t, cpucontrol_domain;
 type cpucontrol_exec_t;
 init_system_domain(cpucontrol_t, cpucontrol_exec_t)
 
 type cpucontrol_conf_t;
-files_type(cpucontrol_conf_t)
+files_config_file(cpucontrol_conf_t)
 
-type cpuspeed_t;
+type cpuspeed_t, cpucontrol_domain;
 type cpuspeed_exec_t;
 init_system_domain(cpuspeed_t, cpuspeed_exec_t)
 
@@ -21,102 +23,82 @@
 
 ########################################
 #
-# CPU microcode loader local policy
+# Common local policy
 #
 
-allow cpucontrol_t self:capability { ipc_lock sys_rawio };
-dontaudit cpucontrol_t self:capability sys_tty_config;
-allow cpucontrol_t self:process signal_perms;
-
-allow cpucontrol_t cpucontrol_conf_t:dir list_dir_perms;
-read_files_pattern(cpucontrol_t, cpucontrol_conf_t, cpucontrol_conf_t)
-read_lnk_files_pattern(cpucontrol_t, cpucontrol_conf_t, cpucontrol_conf_t)
+dontaudit cpucontrol_domain self:capability sys_tty_config;
+allow cpucontrol_domain self:process signal_perms;
 
-kernel_list_proc(cpucontrol_t)
-kernel_read_proc_symlinks(cpucontrol_t)
-kernel_read_kernel_sysctls(cpucontrol_t)
-
-dev_read_sysfs(cpucontrol_t)
-dev_rw_cpu_microcode(cpucontrol_t)
+kernel_read_kernel_sysctls(cpucontrol_domain)
 
-fs_search_auto_mountpoints(cpucontrol_t)
+domain_use_interactive_fds(cpucontrol_domain)
 
-term_dontaudit_use_console(cpucontrol_t)
+files_list_usr(cpucontrol_domain)
 
-domain_use_interactive_fds(cpucontrol_t)
+fs_search_auto_mountpoints(cpucontrol_domain)
 
-files_list_usr(cpucontrol_t)
+term_dontaudit_use_console(cpucontrol_domain)
 
-init_use_fds(cpucontrol_t)
-init_use_script_ptys(cpucontrol_t)
+init_use_fds(cpucontrol_domain)
+init_use_script_ptys(cpucontrol_domain)
 
-logging_send_syslog_msg(cpucontrol_t)
+logging_send_syslog_msg(cpucontrol_domain)
 
-userdom_dontaudit_use_unpriv_user_fds(cpucontrol_t)
+userdom_dontaudit_use_unpriv_user_fds(cpucontrol_domain)
 
 optional_policy(`
-	nscd_socket_use(cpucontrol_t)
+	nscd_socket_use(cpucontrol_domain)
 ')
 
 optional_policy(`
-	rhgb_use_ptys(cpucontrol_t)
+	seutil_sigchld_newrole(cpucontrol_domain)
 ')
 
 optional_policy(`
-	seutil_sigchld_newrole(cpucontrol_t)
+	udev_read_db(cpucontrol_domain)
 ')
 
+########################################
+#
+# Loader local policy
+#
+
+allow cpucontrol_t self:capability { ipc_lock sys_rawio };
+
+allow cpucontrol_t cpucontrol_conf_t:dir list_dir_perms;
+read_files_pattern(cpucontrol_t, cpucontrol_conf_t, cpucontrol_conf_t)
+read_lnk_files_pattern(cpucontrol_t, cpucontrol_conf_t, cpucontrol_conf_t)
+
+kernel_list_proc(cpucontrol_t)
+kernel_read_proc_symlinks(cpucontrol_t)
+
+dev_read_sysfs(cpucontrol_t)
+dev_rw_cpu_microcode(cpucontrol_t)
+
 optional_policy(`
-	udev_read_db(cpucontrol_t)
+	rhgb_use_ptys(cpucontrol_t)
 ')
 
 ########################################
 #
-# CPU frequency scaling daemons
+# Scaling local policy
 #
 
-dontaudit cpuspeed_t self:capability sys_tty_config;
-allow cpuspeed_t self:process { signal_perms setsched };
+allow cpuspeed_t self:process setsched;
 allow cpuspeed_t self:unix_dgram_socket create_socket_perms;
 
 allow cpuspeed_t cpuspeed_var_run_t:file manage_file_perms;
 files_pid_filetrans(cpuspeed_t, cpuspeed_var_run_t, file)
 
 kernel_read_system_state(cpuspeed_t)
-kernel_read_kernel_sysctls(cpuspeed_t)
 
+# This doesnt make sense
 dev_write_sysfs_dirs(cpuspeed_t)
 dev_rw_sysfs(cpuspeed_t)
 
-domain_use_interactive_fds(cpuspeed_t)
-# for demand/load-based scaling:
 domain_read_all_domains_state(cpuspeed_t)
 
 files_read_etc_files(cpuspeed_t)
 files_read_etc_runtime_files(cpuspeed_t)
-files_list_usr(cpuspeed_t)
-
-fs_search_auto_mountpoints(cpuspeed_t)
-
-term_dontaudit_use_console(cpuspeed_t)
-
-init_use_fds(cpuspeed_t)
-init_use_script_ptys(cpuspeed_t)
-
-logging_send_syslog_msg(cpuspeed_t)
 
 miscfiles_read_localization(cpuspeed_t)
-
-userdom_dontaudit_use_unpriv_user_fds(cpuspeed_t)
-
-optional_policy(`
-	nscd_socket_use(cpuspeed_t)
-')
-
-optional_policy(`
-	seutil_sigchld_newrole(cpuspeed_t)
-')
-
-optional_policy(`
-	udev_read_db(cpuspeed_t)
-')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cpufreqselector.te refpolicy/policy/modules/contrib/cpufreqselector.te
--- refpolicy/policy/modules/contrib/cpufreqselector.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cpufreqselector.te	2012-09-27 20:03:30.744126498 +0200
@@ -1,4 +1,4 @@
-policy_module(cpufreqselector, 1.3.0)
+policy_module(cpufreqselector, 1.3.1)
 
 ########################################
 #
@@ -7,11 +7,11 @@
 
 type cpufreqselector_t;
 type cpufreqselector_exec_t;
-application_domain(cpufreqselector_t, cpufreqselector_exec_t)
+init_daemon_domain(cpufreqselector_t, cpufreqselector_exec_t)
 
 ########################################
 #
-# cpufreq-selector local policy
+# Local policy
 #
 
 allow cpufreqselector_t self:capability { sys_nice sys_ptrace };
@@ -23,8 +23,6 @@
 files_read_etc_files(cpufreqselector_t)
 files_read_usr_files(cpufreqselector_t)
 
-corecmd_search_bin(cpufreqselector_t)
-
 dev_rw_sysfs(cpufreqselector_t)
 
 miscfiles_read_localization(cpufreqselector_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cron.fc refpolicy/policy/modules/contrib/cron.fc
--- refpolicy/policy/modules/contrib/cron.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cron.fc	2012-09-27 20:03:30.744126498 +0200
@@ -1,56 +1,61 @@
-/etc/rc\.d/init\.d/atd		--	gen_context(system_u:object_r:crond_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/atd	--	gen_context(system_u:object_r:crond_initrc_exec_t,s0)
 
-/etc/cron\.d(/.*)?			gen_context(system_u:object_r:system_cron_spool_t,s0)
-/etc/crontab			--	gen_context(system_u:object_r:system_cron_spool_t,s0)
+/etc/cron\.d(/.*)?	gen_context(system_u:object_r:system_cron_spool_t,s0)
+/etc/crontab	--	gen_context(system_u:object_r:system_cron_spool_t,s0)
 
-/usr/bin/at			--	gen_context(system_u:object_r:crontab_exec_t,s0)
-/usr/bin/(f)?crontab		--	gen_context(system_u:object_r:crontab_exec_t,s0)
+/usr/bin/at	--	gen_context(system_u:object_r:crontab_exec_t,s0)
+/usr/bin/(f)?crontab	--	gen_context(system_u:object_r:crontab_exec_t,s0)
 
-/usr/sbin/anacron		--	gen_context(system_u:object_r:anacron_exec_t,s0)
-/usr/sbin/atd			--	gen_context(system_u:object_r:crond_exec_t,s0)
-/usr/sbin/cron(d)?		--	gen_context(system_u:object_r:crond_exec_t,s0)
-/usr/sbin/fcron			--	gen_context(system_u:object_r:crond_exec_t,s0)
-/usr/sbin/fcronsighup		--	gen_context(system_u:object_r:crontab_exec_t,s0)
-
-/var/run/anacron\.pid		--	gen_context(system_u:object_r:crond_var_run_t,s0)
-/var/run/atd\.pid		--	gen_context(system_u:object_r:crond_var_run_t,s0)
-/var/run/crond?\.pid		--	gen_context(system_u:object_r:crond_var_run_t,s0)
-/var/run/crond\.reboot		--	gen_context(system_u:object_r:crond_var_run_t,s0)
-/var/run/fcron\.fifo		-s	gen_context(system_u:object_r:crond_var_run_t,s0)
-/var/run/fcron\.pid		--	gen_context(system_u:object_r:crond_var_run_t,s0)
-
-/var/spool/anacron(/.*)?		gen_context(system_u:object_r:system_cron_spool_t,s0)
-/var/spool/at(/.*)?			gen_context(system_u:object_r:user_cron_spool_t,s0)
-
-/var/spool/cron			-d	gen_context(system_u:object_r:cron_spool_t,s0)
-#/var/spool/cron/root		--	gen_context(system_u:object_r:sysadm_cron_spool_t,s0)
-/var/spool/cron/[^/]*		--	<<none>>
+/usr/sbin/anacron	--	gen_context(system_u:object_r:anacron_exec_t,s0)
+/usr/sbin/atd	--	gen_context(system_u:object_r:crond_exec_t,s0)
+/usr/sbin/cron(d)?	--	gen_context(system_u:object_r:crond_exec_t,s0)
+/usr/sbin/fcron	--	gen_context(system_u:object_r:crond_exec_t,s0)
+/usr/sbin/fcronsighup	--	gen_context(system_u:object_r:crontab_exec_t,s0)
 
-/var/spool/cron/crontabs 	-d	gen_context(system_u:object_r:cron_spool_t,s0)
+/var/lib/glpi/files(/.*)?	gen_context(system_u:object_r:cron_var_lib_t,s0)
+
+/var/log/rpmpkgs.*	--	gen_context(system_u:object_r:cron_log_t,s0)
+
+/var/run/anacron\.pid	--	gen_context(system_u:object_r:crond_var_run_t,s0)
+/var/run/atd\.pid	--	gen_context(system_u:object_r:crond_var_run_t,s0)
+/var/run/crond?\.pid	--	gen_context(system_u:object_r:crond_var_run_t,s0)
+/var/run/crond?\.reboot	--	gen_context(system_u:object_r:crond_var_run_t,s0)
+/var/run/fcron\.fifo	-s	gen_context(system_u:object_r:crond_var_run_t,s0)
+/var/run/fcron\.pid	--	gen_context(system_u:object_r:crond_var_run_t,s0)
+/var/run/.*cron.*	--	gen_context(system_u:object_r:crond_var_run_t,s0)
+
+/var/spool/anacron(/.*)?	gen_context(system_u:object_r:system_cron_spool_t,s0)
+/var/spool/at(/.*)?	gen_context(system_u:object_r:user_cron_spool_t,s0)
+
+/var/spool/cron	-d	gen_context(system_u:object_r:cron_spool_t,s0)
+#/var/spool/cron/root	--	gen_context(system_u:object_r:sysadm_cron_spool_t,s0)
+/var/spool/cron/[^/]*	--	<<none>>
+
+/var/spool/cron/crontabs	-d	gen_context(system_u:object_r:cron_spool_t,s0)
 /var/spool/cron/crontabs/.*	--	<<none>>
 #/var/spool/cron/crontabs/root	--	gen_context(system_u:object_r:sysadm_cron_spool_t,s0)
 
-/var/spool/fcron		-d	gen_context(system_u:object_r:cron_spool_t,s0)
-/var/spool/fcron/.*			<<none>>
+/var/spool/fcron	-d	gen_context(system_u:object_r:cron_spool_t,s0)
+/var/spool/fcron/.*	<<none>>
 /var/spool/fcron/systab\.orig	--	gen_context(system_u:object_r:system_cron_spool_t,s0)
-/var/spool/fcron/systab		--	gen_context(system_u:object_r:system_cron_spool_t,s0)
+/var/spool/fcron/systab	--	gen_context(system_u:object_r:system_cron_spool_t,s0)
 /var/spool/fcron/new\.systab	--	gen_context(system_u:object_r:system_cron_spool_t,s0)
 
 ifdef(`distro_debian',`
-/var/log/prelink.log		--	gen_context(system_u:object_r:cron_log_t,s0)
+/var/log/prelink.log.*	--	gen_context(system_u:object_r:cron_log_t,s0)
 
-/var/spool/cron/atjobs		-d	gen_context(system_u:object_r:cron_spool_t,s0)
+/var/spool/cron/atjobs	-d	gen_context(system_u:object_r:cron_spool_t,s0)
 /var/spool/cron/atjobs/[^/]*	--	<<none>>
-/var/spool/cron/atspool		-d	gen_context(system_u:object_r:cron_spool_t,s0)
+/var/spool/cron/atspool	-d	gen_context(system_u:object_r:cron_spool_t,s0)
 ')
 
 ifdef(`distro_gentoo',`
-/var/spool/cron/lastrun		-d	gen_context(system_u:object_r:crond_tmp_t,s0)
+/var/spool/cron/lastrun	-d	gen_context(system_u:object_r:crond_tmp_t,s0)
 /var/spool/cron/lastrun/[^/]*	--	<<none>>
 ')
 
-ifdef(`distro_suse', `
-/var/spool/cron/lastrun		-d	gen_context(system_u:object_r:crond_tmp_t,s0)
+ifdef(`distro_suse',`
+/var/spool/cron/lastrun	-d	gen_context(system_u:object_r:crond_tmp_t,s0)
 /var/spool/cron/lastrun/[^/]*	--	<<none>>
-/var/spool/cron/tabs		-d	gen_context(system_u:object_r:cron_spool_t,s0)
+/var/spool/cron/tabs	-d	gen_context(system_u:object_r:cron_spool_t,s0)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cron.if refpolicy/policy/modules/contrib/cron.if
--- refpolicy/policy/modules/contrib/cron.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/cron.if	2012-09-27 20:03:30.744126498 +0200
@@ -2,22 +2,26 @@
 
 #######################################
 ## <summary>
-##	The common rules for a crontab domain.
+##	The template to define a crontab domain.
 ## </summary>
-## <param name="userdomain_prefix">
+## <param name="domain_prefix">
 ##	<summary>
-##	The prefix of the user domain (e.g., user
-##	is the prefix for user_t).
+##	Domain prefix to be used.
 ##	</summary>
 ## </param>
 #
 template(`cron_common_crontab_template',`
+	gen_require(`
+		attribute crontab_domain;
+		type crontab_exec_t;
+	')
+
 	##############################
 	#
 	# Declarations
 	#
 
-	type $1_t;
+	type $1_t, crontab_domain;
 	userdom_user_application_domain($1_t, crontab_exec_t)
 
 	type $1_tmp_t;
@@ -28,63 +32,12 @@
 	# Local policy
 	#
 
-	# dac_override is to create the file in the directory under /tmp
-	allow $1_t self:capability { fowner setuid setgid chown dac_override };
-	allow $1_t self:process { setsched signal_perms };
-	allow $1_t self:fifo_file rw_fifo_file_perms;
-
-	allow $1_t $1_tmp_t:file manage_file_perms;
-	files_tmp_filetrans($1_t, $1_tmp_t, file)
-
-	# create files in /var/spool/cron
-	manage_files_pattern($1_t, { cron_spool_t user_cron_spool_t }, user_cron_spool_t)
-	filetrans_pattern($1_t, cron_spool_t, user_cron_spool_t, file)
-	files_list_spool($1_t)
-
-	# crontab signals crond by updating the mtime on the spooldir
-	allow $1_t cron_spool_t:dir setattr;
-
-	kernel_read_system_state($1_t)
-
-	# for the checks used by crontab -u
-	selinux_dontaudit_search_fs($1_t)
-
-	fs_getattr_xattr_fs($1_t)
-
-	domain_use_interactive_fds($1_t)
-
-	files_read_etc_files($1_t)
-	files_read_usr_files($1_t)
-	files_dontaudit_search_pids($1_t)
+	manage_dirs_pattern($1_t, $1_tmp_t, $1_tmp_t)
+	manage_files_pattern($1_t, $1_tmp_t, $1_tmp_t)
+	files_tmp_filetrans($1_t, $1_tmp_t, { dir file })
 
 	auth_domtrans_chk_passwd($1_t)
-
-	logging_send_syslog_msg($1_t)
-	logging_send_audit_msgs($1_t)
-
-	init_dontaudit_write_utmp($1_t)
-	init_read_utmp($1_t)
-
-	miscfiles_read_localization($1_t)
-
-	seutil_read_config($1_t)
-
-	userdom_manage_user_tmp_dirs($1_t)
-	userdom_manage_user_tmp_files($1_t)
-	# Access terminals.
-	userdom_use_user_terminals($1_t)
-	# Read user crontabs
-	userdom_read_user_home_content_files($1_t)
-
-	tunable_policy(`fcron_crond',`
-		# fcron wants an instant update of a crontab change for the administrator
-		# also crontab does a security check for crontab -u
-		dontaudit $1_t crond_t:process signal;
-	')
-
-	optional_policy(`
-		nscd_socket_use($1_t)
-	')
+	auth_use_nsswitch($1_t)
 ')
 
 ########################################
@@ -93,38 +46,52 @@
 ## </summary>
 ## <param name="role">
 ##	<summary>
-##	Role allowed access
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <param name="domain">
 ##	<summary>
-##	User domain for the role
+##	User domain for the role.
 ##	</summary>
 ## </param>
+## <rolecap/>
 #
 interface(`cron_role',`
 	gen_require(`
 		type cronjob_t, crontab_t, crontab_exec_t;
+		type user_cron_spool_t, crond_t;
 	')
 
+	##############################
+	#
+	# Declarations
+	#
+
 	role $1 types { cronjob_t crontab_t };
 
-	# cronjob shows up in user ps
-	ps_process_pattern($2, cronjob_t)
+	##############################
+	#
+	# Local policy
+	#
 
-	# Transition from the user domain to the derived domain.
 	domtrans_pattern($2, crontab_exec_t, crontab_t)
 
-	# crontab shows up in user ps
-	ps_process_pattern($2, crontab_t)
-	allow $2 crontab_t:process signal;
+	dontaudit crond_t $2:process { noatsecure siginh rlimitinh };
+	allow $2 crond_t:process sigchld;
+
+	allow $2 user_cron_spool_t:file { getattr read write ioctl };
+	
+	allow $2 crontab_t:process { ptrace signal_perms };
+	ps_process_pattern($2, { cronjob_t crontab_t })
 
-	# Run helper programs as the user domain
-	#corecmd_bin_domtrans(crontab_t, $2)
-	#corecmd_shell_domtrans(crontab_t, $2)
 	corecmd_exec_bin(crontab_t)
 	corecmd_exec_shell(crontab_t)
 
+	tunable_policy(`cron_userdomain_transition',`
+		allow crond_t $2:process transition;
+		allow $2 user_cron_spool_t:file entrypoint;
+	')
+
 	optional_policy(`
 		gen_require(`
 			class dbus send_msg;
@@ -133,7 +100,7 @@
 		dbus_stub(cronjob_t)
 
 		allow cronjob_t $2:dbus send_msg;
-	')		
+	')
 ')
 
 ########################################
@@ -153,24 +120,28 @@
 #
 interface(`cron_unconfined_role',`
 	gen_require(`
-		type unconfined_cronjob_t, crontab_t, crontab_tmp_t, crontab_exec_t;
+		type unconfined_cronjob_t, crontab_t, crontab_exec_t;
 	')
 
+	##############################
+	#
+	# Declarations
+	#
+
 	role $1 types { unconfined_cronjob_t crontab_t };
 
-	# cronjob shows up in user ps
+	##############################
+	#
+	# Local policy
+	#
+
 	ps_process_pattern($2, unconfined_cronjob_t)
 
-	# Transition from the user domain to the derived domain.
-	domtrans_pattern($2, crontab_exec_t, crontab_t)
+	# domtrans_pattern($2, crontab_exec_t, crontab_t)
 
-	# crontab shows up in user ps
+	allow $2 crontab_t:process { ptrace signal_perms };
 	ps_process_pattern($2, crontab_t)
-	allow $2 crontab_t:process signal;
 
-	# Run helper programs as the user domain
-	#corecmd_bin_domtrans(crontab_t, $2)
-	#corecmd_shell_domtrans(crontab_t, $2)
 	corecmd_exec_bin(crontab_t)
 	corecmd_exec_shell(crontab_t)
 
@@ -182,7 +153,7 @@
 		dbus_stub(unconfined_cronjob_t)
 
 		allow unconfined_cronjob_t $2:dbus send_msg;
-	')		
+	')
 ')
 
 ########################################
@@ -202,28 +173,22 @@
 #
 interface(`cron_admin_role',`
 	gen_require(`
-		type cronjob_t, crontab_exec_t, admin_crontab_t, admin_crontab_tmp_t;
+		type cronjob_t, crontab_exec_t, admin_crontab_t;
 		class passwd crontab;
 	')
 
-	role $1 types { cronjob_t admin_crontab_t admin_crontab_tmp_t };
+	role $1 types { cronjob_t admin_crontab_t };
 
-	# cronjob shows up in user ps
 	ps_process_pattern($2, cronjob_t)
 
 	# Manipulate other users crontab.
 	allow $2 self:passwd crontab;
 
-	# Transition from the user domain to the derived domain.
 	domtrans_pattern($2, crontab_exec_t, admin_crontab_t)
 
-	# crontab shows up in user ps
+	allow $2 admin_crontab_t:process { ptrace signal_perms };
 	ps_process_pattern($2, admin_crontab_t)
-	allow $2 admin_crontab_t:process signal;
 
-	# Run helper programs as the user domain
-	#corecmd_bin_domtrans(admin_crontab_t, $2)
-	#corecmd_shell_domtrans(admin_crontab_t, $2)
 	corecmd_exec_bin(admin_crontab_t)
 	corecmd_exec_shell(admin_crontab_t)
 
@@ -235,13 +200,13 @@
 		dbus_stub(admin_cronjob_t)
 
 		allow cronjob_t $2:dbus send_msg;
-	')		
+	')
 ')
 
 ########################################
 ## <summary>
-##	Make the specified program domain accessable
-##	from the system cron jobs.
+##	Make the specified program domain
+##	accessable from the system cron jobs.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -280,12 +245,13 @@
 		type system_cronjob_t, crond_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, crond_exec_t, system_cronjob_t)
 ')
 
 ########################################
 ## <summary>
-##	Execute crond_exec_t 
+##	Execute crond in the caller domain. 
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -298,12 +264,13 @@
 		type crond_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	can_exec($1, crond_exec_t)
 ')
 
 ########################################
 ## <summary>
-##	Execute crond server in the nscd domain.
+##	Execute crond server in the crond domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -321,8 +288,7 @@
 
 ########################################
 ## <summary>
-##	Inherit and use a file descriptor
-##	from the cron daemon.
+##	Use crond file descriptors.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -340,7 +306,7 @@
 
 ########################################
 ## <summary>
-##	Send a SIGCHLD signal to the cron daemon.
+##	Send child terminated signals to crond.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -358,7 +324,7 @@
 
 ########################################
 ## <summary>
-##	Read a cron daemon unnamed pipe.
+##	Read cron daemon unnamed pipes.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -376,7 +342,8 @@
 
 ########################################
 ## <summary>
-##	Do not audit attempts to write cron daemon unnamed pipes.
+##	Do not audit attempts to write
+##	cron daemon unnamed pipes.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -394,7 +361,7 @@
 
 ########################################
 ## <summary>
-##	Read and write a cron daemon unnamed pipe.
+##	Read and write crond unnamed pipes.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -412,7 +379,7 @@
 
 ########################################
 ## <summary>
-##	Read, and write cron daemon TCP sockets.
+##	Read and write crond TCP sockets.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -430,7 +397,8 @@
 
 ########################################
 ## <summary>
-##	Dontaudit Read, and write cron daemon TCP sockets.
+##	Do not audit attempts to read and
+##	write cron daemon TCP sockets.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -448,7 +416,7 @@
 
 ########################################
 ## <summary>
-##	Search the directory containing user cron tables.
+##	Search cron spool directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -467,7 +435,8 @@
 
 ########################################
 ## <summary>
-##	Manage pid files used by cron
+##	Create, read, write, and delete
+##	crond pid files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -485,7 +454,8 @@
 
 ########################################
 ## <summary>
-##	Execute anacron in the cron system domain.
+##	Execute anacron in the cron
+##	system domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -498,13 +468,13 @@
 		type system_cronjob_t, anacron_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, anacron_exec_t, system_cronjob_t)
 ')
 
 ########################################
 ## <summary>
-##	Inherit and use a file descriptor
-##	from system cron jobs.
+##	Use system cron job file descriptors.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -522,7 +492,7 @@
 
 ########################################
 ## <summary>
-##	Write a system cron job unnamed pipe.
+##	Write system cron job unnamed pipes.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -540,7 +510,8 @@
 
 ########################################
 ## <summary>
-##	Read and write a system cron job unnamed pipe.
+##	Read and write system cron job
+##	unnamed pipes.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -558,7 +529,8 @@
 
 ########################################
 ## <summary>
-##	Allow read/write unix stream sockets from the system cron jobs.
+##	Read and write inherited system cron
+##	job unix domain stream sockets.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -576,7 +548,7 @@
 
 ########################################
 ## <summary>
-##	Read temporary files from the system cron jobs.
+##	Read system cron job temporary files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -596,7 +568,7 @@
 ########################################
 ## <summary>
 ##	Do not audit attempts to append temporary
-##	files from the system cron jobs.
+##	system cron job files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -615,7 +587,7 @@
 ########################################
 ## <summary>
 ##	Do not audit attempts to write temporary
-##	files from the system cron jobs.
+##	system cron job files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cron.te refpolicy/policy/modules/contrib/cron.te
--- refpolicy/policy/modules/contrib/cron.te	2012-09-28 19:56:54.086040255 +0200
+++ refpolicy/policy/modules/contrib/cron.te	2012-09-27 20:03:30.745126498 +0200
@@ -1,4 +1,4 @@
-policy_module(cron, 2.4.0)
+policy_module(cron, 2.5.0)
 
 gen_require(`
 	class passwd rootok;
@@ -10,37 +10,47 @@
 #
 
 ## <desc>
-## <p>
-## Allow system cron jobs to relabel filesystem
-## for restoring file contexts.
-## </p>
+##	<p>
+##	Determine whether system cron jobs
+##	can relabel filesystem for
+##	restoring file contexts.
+##	</p>
 ## </desc>
 gen_tunable(cron_can_relabel, false)
 
 ## <desc>
-## <p>
-## Enable extra rules in the cron domain
-## to support fcron.
-## </p>
+##	<p>
+##	Determine whether crond can execute jobs
+##	in the user domain as opposed to the
+##	the generic cronjob domain.
+##	</p>
+## </desc>
+gen_tunable(cron_userdomain_transition, false)
+
+## <desc>
+##	<p>
+##	Determine whether extra rules
+##	should beenabled to support fcron.
+##	</p>
 ## </desc>
 gen_tunable(fcron_crond, false)
 
 attribute cron_spool_type;
+attribute crontab_domain;
 
 type anacron_exec_t;
 application_executable_file(anacron_exec_t)
 
 type cron_spool_t;
 files_type(cron_spool_t)
+mta_system_content(cron_spool_t)
 
-# var/lib files
 type cron_var_lib_t;
 files_type(cron_var_lib_t)
 
 type cron_var_run_t;
-files_type(cron_var_run_t)
+files_pid_file(cron_var_run_t)
 
-# var/log files
 type cron_log_t;
 logging_log_file(cron_log_t)
 
@@ -64,9 +74,12 @@
 
 type crond_tmp_t;
 files_tmp_file(crond_tmp_t)
+files_poly_parent(crond_tmp_t)
+mta_system_content(crond_tmp_t)
 
 type crond_var_run_t;
 files_pid_file(crond_var_run_t)
+mta_system_content(crond_var_run_t)
 
 type crontab_exec_t;
 application_executable_file(crontab_exec_t)
@@ -83,12 +96,12 @@
 
 type system_cron_spool_t, cron_spool_type;
 files_type(system_cron_spool_t)
+mta_system_content(system_cron_spool_t)
 
 type system_cronjob_t alias system_crond_t;
 init_daemon_domain(system_cronjob_t, anacron_exec_t)
 corecmd_shell_entry_type(system_cronjob_t)
 domain_interactive_fd(system_cronjob_t)
-role system_r types system_cronjob_t;
 
 type system_cronjob_lock_t alias system_crond_lock_t;
 files_lock_file(system_cronjob_lock_t)
@@ -96,30 +109,95 @@
 type system_cronjob_tmp_t alias system_crond_tmp_t;
 files_tmp_file(system_cronjob_tmp_t)
 
-ifdef(`enable_mcs',`
-	init_ranged_daemon_domain(crond_t, crond_exec_t, s0 - mcs_systemhigh)
-')
+type system_cronjob_var_lib_t;
+files_type(system_cronjob_var_lib_t)
+
+type system_cronjob_var_run_t;
+files_pid_file(system_cronjob_var_run_t)
 
 type unconfined_cronjob_t;
 domain_type(unconfined_cronjob_t)
 domain_cron_exemption_target(unconfined_cronjob_t)
 
-# Type of user crontabs once moved to cron spool.
 type user_cron_spool_t, cron_spool_type;
 typealias user_cron_spool_t alias { staff_cron_spool_t sysadm_cron_spool_t unconfined_cron_spool_t };
 typealias user_cron_spool_t alias { auditadm_cron_spool_t secadm_cron_spool_t };
 files_type(user_cron_spool_t)
 ubac_constrained(user_cron_spool_t)
+mta_system_content(user_cron_spool_t)
+
+ifdef(`enable_mcs',`
+	init_ranged_daemon_domain(crond_t, crond_exec_t, s0 - mcs_systemhigh)
+')
+
+##############################
+#
+# Common local policy
+#
+
+allow crontab_domain self:capability { fowner setuid setgid chown dac_override };
+allow crontab_domain self:process { getcap setsched signal_perms };
+allow crontab_domain self:fifo_file rw_fifo_file_perms;
+
+manage_files_pattern(crontab_domain, { cron_spool_t user_cron_spool_t }, user_cron_spool_t)
+filetrans_pattern(crontab_domain, cron_spool_t, user_cron_spool_t, file)
+
+allow crontab_domain cron_spool_t:dir setattr_dir_perms;
+
+allow crontab_domain crond_t:process signal;
+allow crontab_domain crond_var_run_t:file read_file_perms;
+
+kernel_read_system_state(crontab_domain)
+
+selinux_dontaudit_search_fs(crontab_domain)
+
+files_list_spool(crontab_domain)
+files_read_etc_files(crontab_domain)
+files_read_usr_files(crontab_domain)
+files_dontaudit_search_pids(crontab_domain)
+
+fs_getattr_xattr_fs(crontab_domain)
+fs_manage_cgroup_dirs(crontab_domain)
+fs_rw_cgroup_files(crontab_domain)
+
+domain_use_interactive_fds(crontab_domain)
+
+fs_dontaudit_rw_anon_inodefs_files(crontab_domain)
+
+auth_rw_var_auth(crontab_domain)
+
+logging_send_syslog_msg(crontab_domain)
+logging_send_audit_msgs(crontab_domain)
+
+init_dontaudit_write_utmp(crontab_domain)
+init_read_utmp(crontab_domain)
+init_read_state(crontab_domain)
+
+miscfiles_read_localization(crontab_domain)
+
+seutil_read_config(crontab_domain)
+
+userdom_manage_user_tmp_dirs(crontab_domain)
+userdom_manage_user_tmp_files(crontab_domain)
+userdom_use_user_terminals(crontab_domain)
+userdom_read_user_home_content_files(crontab_domain)
+userdom_read_user_home_content_symlinks(crontab_domain)
+
+tunable_policy(`cron_userdomain_transition',`
+	logging_set_loginuid(crontab_domain)
+')
+
+tunable_policy(`fcron_crond',`
+	dontaudit crontab_domain crond_t:process signal;
+')
 
 ########################################
 #
-# Admin crontab local policy
+# Admin local policy
 #
 
-# Allow our crontab domain to unlink a user cron spool file.
-allow admin_crontab_t user_cron_spool_t:file { getattr read unlink };
+allow admin_crontab_t crond_t:process signal;
 
-# Manipulate other users crontab.
 selinux_get_fs_mount(admin_crontab_t)
 selinux_validate_context(admin_crontab_t)
 selinux_compute_access_vector(admin_crontab_t)
@@ -127,32 +205,29 @@
 selinux_compute_relabel_context(admin_crontab_t)
 selinux_compute_user_contexts(admin_crontab_t)
 
-tunable_policy(`fcron_crond', `
-	# fcron wants an instant update of a crontab change for the administrator
-	# also crontab does a security check for crontab -u
+tunable_policy(`fcron_crond',`
 	allow admin_crontab_t self:process setfscreate;
 ')
 
 ########################################
 #
-# Cron daemon local policy
+# Daemon local policy
 #
 
-allow crond_t self:capability { dac_override setgid setuid sys_nice dac_read_search };
+allow crond_t self:capability { dac_override chown fowner setgid setuid sys_nice dac_read_search };
 dontaudit crond_t self:capability { sys_resource sys_tty_config };
-allow crond_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
+allow crond_t self:process ~{ ptrace setcurrent setexec setfscreate execmem execstack execheap };
 allow crond_t self:process { setexec setfscreate };
 allow crond_t self:fd use;
 allow crond_t self:fifo_file rw_fifo_file_perms;
-allow crond_t self:unix_dgram_socket create_socket_perms;
-allow crond_t self:unix_stream_socket create_stream_socket_perms;
 allow crond_t self:unix_dgram_socket sendto;
-allow crond_t self:unix_stream_socket connectto;
+allow crond_t self:unix_stream_socket { accept connectto listen };
 allow crond_t self:shm create_shm_perms;
 allow crond_t self:sem create_sem_perms;
 allow crond_t self:msgq create_msgq_perms;
 allow crond_t self:msg { send receive };
 allow crond_t self:key { search write link };
+dontaudit crond_t self:netlink_audit_socket nlmsg_tty_audit;
 
 manage_files_pattern(crond_t, cron_log_t, cron_log_t)
 logging_log_filetrans(crond_t, cron_log_t, file)
@@ -164,69 +239,89 @@
 
 manage_dirs_pattern(crond_t, crond_tmp_t, crond_tmp_t)
 manage_files_pattern(crond_t, crond_tmp_t, crond_tmp_t)
-files_tmp_filetrans(crond_t, crond_tmp_t, { file dir })
+files_tmp_filetrans(crond_t, crond_tmp_t, { dir file })
 
 list_dirs_pattern(crond_t, system_cron_spool_t, system_cron_spool_t)
 read_files_pattern(crond_t, system_cron_spool_t, system_cron_spool_t)
 
+list_dirs_pattern(crond_t, user_cron_spool_t, user_cron_spool_t)
+rw_dirs_pattern(crond_t, user_cron_spool_t, user_cron_spool_t)
+read_files_pattern(crond_t, user_cron_spool_t, user_cron_spool_t)
+read_lnk_files_pattern(crond_t, user_cron_spool_t, user_cron_spool_t)
+allow crond_t user_cron_spool_t:file manage_lnk_file_perms;
+
+allow crond_t { cronjob_t system_cronjob_t unconfined_cronjob_t }:process transition;
+allow crond_t { cronjob_t system_cronjob_t unconfined_cronjob_t }:fd use;
+allow crond_t { cronjob_t system_cronjob_t unconfined_cronjob_t }:key manage_key_perms;
+dontaudit crond_t { cronjob_t system_cronjob_t unconfined_cronjob_t }:process { noatsecure siginh rlimitinh };
+
+domtrans_pattern(crond_t, anacron_exec_t, system_cronjob_t)
+
 kernel_read_kernel_sysctls(crond_t)
 kernel_read_fs_sysctls(crond_t)
 kernel_search_key(crond_t)
 
-dev_read_sysfs(crond_t)
-selinux_get_fs_mount(crond_t)
-selinux_validate_context(crond_t)
-selinux_compute_access_vector(crond_t)
-selinux_compute_create_context(crond_t)
-selinux_compute_relabel_context(crond_t)
-selinux_compute_user_contexts(crond_t)
+corecmd_exec_shell(crond_t)
+corecmd_exec_bin(crond_t)
+corecmd_list_bin(crond_t)
 
+dev_read_sysfs(crond_t)
 dev_read_urand(crond_t)
 
+domain_use_interactive_fds(crond_t)
+domain_subj_id_change_exemption(crond_t)
+domain_role_change_exemption(crond_t)
+
 fs_getattr_all_fs(crond_t)
-fs_search_auto_mountpoints(crond_t)
 fs_list_inotifyfs(crond_t)
-
-# need auth_chkpwd to check for locked accounts.
-auth_domtrans_chk_passwd(crond_t)
-
-corecmd_exec_shell(crond_t)
-corecmd_list_bin(crond_t)
-corecmd_read_bin_symlinks(crond_t)
-
-domain_use_interactive_fds(crond_t)
+fs_manage_cgroup_dirs(crond_t)
+fs_rw_cgroup_files(crond_t)
+fs_search_auto_mountpoints(crond_t)
 
 files_read_usr_files(crond_t)
 files_read_etc_runtime_files(crond_t)
-files_read_etc_files(crond_t)
 files_read_generic_spool(crond_t)
 files_list_usr(crond_t)
-# Read from /var/spool/cron.
 files_search_var_lib(crond_t)
 files_search_default(crond_t)
 
+mls_fd_share_all_levels(crond_t)
+# crontab -e and kernel check of transition
+mls_file_read_all_levels(crond_t)
+mls_file_write_all_levels(crond_t)
+mls_process_set_level(crond_t)
+mls_trusted_object(crond_t)
+
+selinux_get_fs_mount(crond_t)
+selinux_validate_context(crond_t)
+selinux_compute_access_vector(crond_t)
+selinux_compute_create_context(crond_t)
+selinux_compute_relabel_context(crond_t)
+selinux_compute_user_contexts(crond_t)
+
+init_read_state(crond_t)
 init_rw_utmp(crond_t)
 init_spec_domtrans_script(crond_t)
 
+auth_domtrans_chk_passwd(crond_t)
+auth_manage_var_auth(crond_t)
 auth_use_nsswitch(crond_t)
 
+logging_send_audit_msgs(crond_t)
 logging_send_syslog_msg(crond_t)
 logging_set_loginuid(crond_t)
 
 seutil_read_config(crond_t)
 seutil_read_default_contexts(crond_t)
-seutil_sigchld_newrole(crond_t)
 
 miscfiles_read_localization(crond_t)
 
 userdom_use_unpriv_users_fds(crond_t)
-# Not sure why this is needed
 userdom_list_user_home_dirs(crond_t)
 
 mta_send_mail(crond_t)
 
 ifdef(`distro_debian',`
-	# pam_limits is used
 	allow crond_t self:process setrlimit;
 
 	optional_policy(`
@@ -235,9 +330,7 @@
 	')
 ')
 
-ifdef(`distro_redhat', `
-	# Run the rpm program in the rpm_t domain. Allow creation of RPM log files
-	# via redirection of standard out.
+ifdef(`distro_redhat',`
 	optional_policy(`
 		rpm_manage_log(crond_t)
 	')
@@ -252,6 +345,48 @@
 ')
 
 optional_policy(`
+	apache_search_sys_content(crond_t)
+')
+
+optional_policy(`
+	dbus_system_bus_client(crond_t)
+
+	optional_policy(`
+		hal_dbus_chat(crond_t)
+	')
+
+	optional_policy(`
+		unconfined_dbus_send(crond_t)
+	')
+')
+
+optional_policy(`
+	djbdns_search_tinydns_keys(crond_t)
+	djbdns_link_tinydns_keys(crond_t)
+')
+
+optional_policy(`
+	apache_search_sys_content(crond_t)
+')
+
+optional_policy(`
+	dbus_system_bus_client(crond_t)
+
+	optional_policy(`
+		hal_dbus_chat(crond_t)
+	')
+
+	optional_policy(`
+		unconfined_dbus_send(crond_t)
+	')
+')
+
+optional_policy(`
+	djbdns_search_tinydns_keys(crond_t)
+	djbdns_link_tinydns_keys(crond_t)
+')
+
+optional_policy(`
 	locallogin_search_keys(crond_t)
 	locallogin_link_keys(crond_t)
 ')
@@ -265,11 +400,10 @@
 ')
 
 optional_policy(`
-	hal_dbus_chat(crond_t)
+	hal_write_log(crond_t)
 ')
 
 optional_policy(`
-	# cjp: why?
 	munin_search_lib(crond_t)
 ')
 
@@ -278,22 +412,24 @@
 ')
 
 optional_policy(`
-	# Commonly used from postinst scripts
 	rpm_read_pipes(crond_t)
 ')
 
 optional_policy(`
-	# allow crond to find /usr/lib/postgresql/bin/do.maintenance
 	postgresql_search_db(crond_t)
 ')
 
 optional_policy(`
+	seutil_sigchld_newrole(crond_t)
+')
+
+optional_policy(`
 	udev_read_db(crond_t)
 ')
 
 ########################################
 #
-# System cron process domain
+# System local policy
 #
 
 allow system_cronjob_t self:capability { dac_override dac_read_search chown setgid setuid fowner net_bind_service fsetid sys_nice };
@@ -301,56 +437,41 @@
 allow system_cronjob_t self:fifo_file rw_fifo_file_perms;
 allow system_cronjob_t self:passwd rootok;
 
-# This is to handle creation of files in /var/log directory.
-#  Used currently by rpm script log files
 allow system_cronjob_t cron_log_t:file manage_file_perms;
 logging_log_filetrans(system_cronjob_t, cron_log_t, file)
 
-# This is to handle /var/lib/misc directory.  Used currently
-# by prelink var/lib files for cron 
-allow system_cronjob_t cron_var_lib_t:file manage_file_perms;
+allow system_cronjob_t cron_var_lib_t:file { manage_file_perms relabel_file_perms };
 files_var_lib_filetrans(system_cronjob_t, cron_var_lib_t, file)
 
-allow system_cronjob_t system_cron_spool_t:file read_file_perms;
-# The entrypoint interface is not used as this is not
-# a regular entrypoint.  Since crontab files are
-# not directly executed, crond must ensure that
-# the crontab file has a type that is appropriate
-# for the domain of the user cron job.  It
-# performs an entrypoint permission check
-# for this purpose.
-allow system_cronjob_t system_cron_spool_t:file entrypoint;
+allow system_cronjob_t cron_var_run_t:file manage_file_perms;
+files_pid_filetrans(system_cronjob_t, cron_var_run_t, file)
 
-# Permit a transition from the crond_t domain to this domain.
-# The transition is requested explicitly by the modified crond 
-# via setexeccon.  There is no way to set up an automatic
-# transition, since crontabs are configuration files, not executables.
-allow crond_t system_cronjob_t:process transition;
-dontaudit crond_t system_cronjob_t:process { noatsecure siginh rlimitinh };
-allow crond_t system_cronjob_t:fd use;
-allow system_cronjob_t crond_t:fd use;
-allow system_cronjob_t crond_t:fifo_file rw_file_perms;
-allow system_cronjob_t crond_t:process sigchld;
+manage_files_pattern(system_cronjob_t, system_cron_spool_t, system_cron_spool_t)
+allow system_cronjob_t system_cron_spool_t:file entrypoint;
 
-# Write /var/lock/makewhatis.lock.
 allow system_cronjob_t system_cronjob_lock_t:file manage_file_perms;
 files_lock_filetrans(system_cronjob_t, system_cronjob_lock_t, file)
 
-# write temporary files
 manage_files_pattern(system_cronjob_t, crond_tmp_t, system_cronjob_tmp_t)
 manage_lnk_files_pattern(system_cronjob_t, crond_tmp_t, system_cronjob_tmp_t)
 filetrans_pattern(system_cronjob_t, crond_tmp_t, system_cronjob_tmp_t, { file lnk_file })
 files_tmp_filetrans(system_cronjob_t, system_cronjob_tmp_t, file)
 
-# Read from /var/spool/cron.
+files_search_var_lib(system_cronjob_t)
+manage_files_pattern(system_cronjob_t, system_cronjob_var_lib_t, system_cronjob_var_lib_t)
+
+allow system_cronjob_t crond_t:fd use;
+allow system_cronjob_t crond_t:fifo_file rw_file_perms;
+allow system_cronjob_t crond_t:process sigchld;
+
 allow system_cronjob_t cron_spool_t:dir list_dir_perms;
-allow system_cronjob_t cron_spool_t:file read_file_perms;
+allow system_cronjob_t cron_spool_t:file rw_file_perms;
 
 kernel_read_kernel_sysctls(system_cronjob_t)
+kernel_read_network_state(system_cronjob_t)
 kernel_read_system_state(system_cronjob_t)
 kernel_read_software_raid_state(system_cronjob_t)
 
-# ps does not need to access /boot when run from cron
 files_dontaudit_search_boot(system_cronjob_t)
 
 corecmd_exec_all_executables(system_cronjob_t)
@@ -367,6 +488,7 @@
 dev_getattr_all_blk_files(system_cronjob_t)
 dev_getattr_all_chr_files(system_cronjob_t)
 dev_read_urand(system_cronjob_t)
+dev_read_sysfs(system_cronjob_t)
 
 fs_getattr_all_fs(system_cronjob_t)
 fs_getattr_all_files(system_cronjob_t)
@@ -374,11 +496,9 @@
 fs_getattr_all_pipes(system_cronjob_t)
 fs_getattr_all_sockets(system_cronjob_t)
 
-# quiet other ps operations
 domain_dontaudit_read_all_domains_state(system_cronjob_t)
 
 files_exec_etc_files(system_cronjob_t)
-files_read_etc_files(system_cronjob_t)
 files_read_etc_runtime_files(system_cronjob_t)
 files_list_all(system_cronjob_t)
 files_getattr_all_dirs(system_cronjob_t)
@@ -388,16 +508,14 @@
 files_getattr_all_sockets(system_cronjob_t)
 files_read_usr_files(system_cronjob_t)
 files_read_var_files(system_cronjob_t)
-# for nscd:
 files_dontaudit_search_pids(system_cronjob_t)
-# Access other spool directories like
-# /var/spool/anacron and /var/spool/slrnpull.
 files_manage_generic_spool(system_cronjob_t)
+files_create_boot_flag(system_cronjob_t)
+
+mls_file_read_to_clearance(system_cronjob_t)
 
 init_use_script_fds(system_cronjob_t)
-init_read_utmp(system_cronjob_t)
-init_dontaudit_rw_utmp(system_cronjob_t)
-# prelink tells init to restart it self, we either need to allow or dontaudit
+init_rw_utmp(system_cronjob_t)
 init_telinit(system_cronjob_t)
 init_domtrans_script(system_cronjob_t)
 
@@ -415,9 +533,7 @@
 
 seutil_read_config(system_cronjob_t)
 
-ifdef(`distro_redhat', `
-	# Run the rpm program in the rpm_t domain. Allow creation of RPM log files
-	# via redirection of standard out.
+ifdef(`distro_redhat',`
 	optional_policy(`
 		rpm_manage_log(system_cronjob_t)
 	')
@@ -436,7 +552,6 @@
 ')
 
 optional_policy(`
-	# Needed for certwatch
 	apache_exec_modules(system_cronjob_t)
 	apache_read_config(system_cronjob_t)
 	apache_read_log(system_cronjob_t)
@@ -448,6 +563,30 @@
 ')
 
 optional_policy(`
+	dbus_system_bus_client(system_cronjob_t)
+
+	optional_policy(`
+		networkmanager_dbus_chat(system_cronjob_t)
+	')
+')
+
+optional_policy(`
+	exim_read_spool_files(system_cronjob_t)
+')
+
+optional_policy(`
+	dbus_system_bus_client(system_cronjob_t)
+
+	optional_policy(`
+		networkmanager_dbus_chat(system_cronjob_t)
+	')
+')
+
+optional_policy(`
+	exim_read_spool_files(system_cronjob_t)
+')
+
+optional_policy(`
 	ftp_read_log(system_cronjob_t)
 ')
 
@@ -458,6 +597,14 @@
 ')
 
 optional_policy(`
+	livecd_read_tmp_files(system_cronjob_t)
+')
+
+optional_policy(`
+	livecd_read_tmp_files(system_cronjob_t)
+')
+
+optional_policy(`
 	lpd_list_spool(system_cronjob_t)
 ')
 
@@ -466,6 +613,7 @@
 ')
 
 optional_policy(`
+	mta_read_config(system_cronjob_t)
 	mta_send_mail(system_cronjob_t)
 ')
 
@@ -488,7 +636,6 @@
 optional_policy(`
 	samba_read_config(system_cronjob_t)
 	samba_read_log(system_cronjob_t)
-	#samba_read_secrets(system_cronjob_t)
 ')
 
 optional_policy(`
@@ -504,13 +651,12 @@
 ')
 
 optional_policy(`
-	unconfined_domain(system_cronjob_t)
 	userdom_user_home_dir_filetrans_user_home_content(system_cronjob_t, { dir file lnk_file fifo_file sock_file })
 ')
 
 ########################################
 #
-# User cronjobs local policy
+# Cronjob local policy
 #
 
 allow cronjob_t self:process { signal_perms setsched };
@@ -518,23 +664,9 @@
 allow cronjob_t self:unix_stream_socket create_stream_socket_perms;
 allow cronjob_t self:unix_dgram_socket create_socket_perms;
 
-# The entrypoint interface is not used as this is not
-# a regular entrypoint.  Since crontab files are
-# not directly executed, crond must ensure that
-# the crontab file has a type that is appropriate
-# for the domain of the user cron job.  It
-# performs an entrypoint permission check
-# for this purpose.
 allow cronjob_t user_cron_spool_t:file entrypoint;
 
-# Permit a transition from the crond_t domain to this domain.
-# The transition is requested explicitly by the modified crond 
-# via setexeccon.  There is no way to set up an automatic
-# transition, since crontabs are configuration files, not executables.
-allow crond_t cronjob_t:process transition;
-dontaudit crond_t cronjob_t:process { noatsecure siginh rlimitinh };
-allow crond_t cronjob_t:fd use;
-allow crond_t cronjob_t:key create;
+#allow crond_t cronjob_t:key create;
 allow cronjob_t crond_t:fd use;
 allow cronjob_t crond_t:fifo_file rw_file_perms;
 allow cronjob_t crond_t:process sigchld;
@@ -542,7 +674,6 @@
 kernel_read_system_state(cronjob_t)
 kernel_read_kernel_sysctls(cronjob_t)
 
-# ps does not need to access /boot when run from cron
 files_dontaudit_search_boot(cronjob_t)
 
 corenet_all_recvfrom_unlabeled(cronjob_t)
@@ -553,31 +684,29 @@
 corenet_udp_sendrecv_generic_node(cronjob_t)
 corenet_tcp_sendrecv_all_ports(cronjob_t)
 corenet_udp_sendrecv_all_ports(cronjob_t)
-corenet_tcp_connect_all_ports(cronjob_t)
+
 corenet_sendrecv_all_client_packets(cronjob_t)
+corenet_tcp_connect_all_ports(cronjob_t)
+
+corecmd_exec_all_executables(cronjob_t)
 
 dev_read_urand(cronjob_t)
 
 fs_getattr_all_fs(cronjob_t)
 
-corecmd_exec_all_executables(cronjob_t)
-
-# quiet other ps operations
 domain_dontaudit_read_all_domains_state(cronjob_t)
 domain_dontaudit_getattr_all_domains(cronjob_t)
 
-files_read_usr_files(cronjob_t)
 files_exec_etc_files(cronjob_t)
-# for nscd:
+files_read_etc_runtime_files(cronjob_t)
+files_read_var_files(cronjob_t)
+files_read_usr_files(cronjob_t)
+files_search_spool(cronjob_t)
 files_dontaudit_search_pids(cronjob_t)
 
 libs_exec_lib_files(cronjob_t)
 libs_exec_ld_so(cronjob_t)
 
-files_read_etc_runtime_files(cronjob_t)
-files_read_var_files(cronjob_t)
-files_search_spool(cronjob_t)
-
 logging_search_logs(cronjob_t)
 
 seutil_read_config(cronjob_t)
@@ -588,44 +717,25 @@
 userdom_manage_user_tmp_symlinks(cronjob_t)
 userdom_manage_user_tmp_pipes(cronjob_t)
 userdom_manage_user_tmp_sockets(cronjob_t)
-# Run scripts in user home directory and access shared libs.
 userdom_exec_user_home_content_files(cronjob_t)
-# Access user files and dirs.
 userdom_manage_user_home_content_files(cronjob_t)
 userdom_manage_user_home_content_symlinks(cronjob_t)
 userdom_manage_user_home_content_pipes(cronjob_t)
 userdom_manage_user_home_content_sockets(cronjob_t)
-#userdom_user_home_dir_filetrans_user_home_content(cronjob_t, notdevfile_class_set)
-
-list_dirs_pattern(crond_t, user_cron_spool_t, user_cron_spool_t)
-read_files_pattern(crond_t, user_cron_spool_t, user_cron_spool_t)
 
-tunable_policy(`fcron_crond', `
+tunable_policy(`fcron_crond',`
 	allow crond_t user_cron_spool_t:file manage_file_perms;
 ')
 
-# need a per-role version of this:
-#optional_policy(`
-#	mono_domtrans(cronjob_t)
-#')
-
 optional_policy(`
 	nis_use_ypbind(cronjob_t)
 ')
 
 ########################################
 #
-# Unconfined cronjobs local policy
+# Unconfined local policy
 #
 
 optional_policy(`
-	# Permit a transition from the crond_t domain to this domain.
-	# The transition is requested explicitly by the modified crond 
-	# via setexeccon.  There is no way to set up an automatic
-	# transition, since crontabs are configuration files, not executables.
-	allow crond_t unconfined_cronjob_t:process transition;
-	dontaudit crond_t unconfined_cronjob_t:process { noatsecure siginh rlimitinh };
-	allow crond_t unconfined_cronjob_t:fd use;
-
 	unconfined_domain(unconfined_cronjob_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cups.fc refpolicy/policy/modules/contrib/cups.fc
--- refpolicy/policy/modules/contrib/cups.fc	2012-05-04 16:10:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/cups.fc	2012-09-27 20:03:30.745126498 +0200
@@ -1,69 +1,76 @@
+/etc/alchemist/namespace/printconf(/.*)?	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
 
-/etc/alchemist/namespace/printconf(/.*)? gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
-
-/etc/cups(/.*)?			gen_context(system_u:object_r:cupsd_etc_t,s0)
-/etc/cups/classes\.conf.* --	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
-/etc/cups/cupsd\.conf.* --	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
-/etc/cups/lpoptions.* 	--	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
-/etc/cups/ppd(/.*)?		gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+/etc/cups(/.*)?	gen_context(system_u:object_r:cupsd_etc_t,s0)
+/etc/cups/classes\.conf.*	--	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+/etc/cups/cupsd\.conf.*	--	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+/etc/cups/lpoptions.*	--	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+/etc/cups/ppd(/.*)?	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
 /etc/cups/ppds\.dat	--	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
-/etc/cups/printers\.conf.* --	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
-/etc/cups/subscriptions.* --	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
-/etc/cups/certs		-d	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+/etc/cups/printers\.conf.*	--	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+/etc/cups/subscriptions.*	--	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+/etc/cups/certs	-d	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
 /etc/cups/certs/.*	--	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
 /etc/rc\.d/init\.d/cups	--	gen_context(system_u:object_r:cupsd_initrc_exec_t,s0)
 
 /etc/cups/interfaces(/.*)?	gen_context(system_u:object_r:cupsd_interface_t,s0)
 
-/etc/hp(/.*)?			gen_context(system_u:object_r:hplip_etc_t,s0)
+/etc/hp(/.*)?	gen_context(system_u:object_r:hplip_etc_t,s0)
+
+/etc/printcap.*	--	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+
+/lib/udev/udev-configure-printer	--	gen_context(system_u:object_r:cupsd_config_exec_t,s0)
+/usr/lib/udev/udev-configure-printer	--	gen_context(system_u:object_r:cupsd_config_exec_t,s0)
 
-/etc/printcap.* 	--	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+/opt/brother/Printers(.*/)?inf(/.*)?	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+/opt/gutenprint/ppds(/.*)?	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
 
-/lib/udev/udev-configure-printer -- gen_context(system_u:object_r:cupsd_config_exec_t,s0)
+/usr/bin/cups-config-daemon	--	gen_context(system_u:object_r:cupsd_config_exec_t,s0)
+/usr/bin/hpijs	--	gen_context(system_u:object_r:hplip_exec_t,s0)
 
-/opt/gutenprint/ppds(/.*)? 	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+/usr/Brother/fax/.*\.log.*	gen_context(system_u:object_r:cupsd_log_t,s0)
+/usr/Brother/(.*/)?inf(/.*)?	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+/usr/Printer/(.*/)?inf(/.*)?	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
 
-/usr/bin/cups-config-daemon --	gen_context(system_u:object_r:cupsd_config_exec_t,s0)
-/usr/bin/hpijs		--	gen_context(system_u:object_r:hplip_exec_t,s0)
+/usr/lib/cups/daemon/cups-lpd	--	gen_context(system_u:object_r:cupsd_lpd_exec_t,s0)
+/usr/lib/cups/backend/cups-pdf	--	gen_context(system_u:object_r:cups_pdf_exec_t,s0)
+/usr/lib/cups/backend/hp.*	--	gen_context(system_u:object_r:hplip_exec_t,s0)
 
-/usr/lib/cups/daemon/cups-lpd -- gen_context(system_u:object_r:cupsd_lpd_exec_t,s0)
-/usr/lib/cups/backend/cups-pdf -- gen_context(system_u:object_r:cups_pdf_exec_t,s0)
-/usr/lib/cups/backend/hp.* --	gen_context(system_u:object_r:hplip_exec_t,s0)
+/usr/libexec/cups-pk-helper-mechanism	--	gen_context(system_u:object_r:cupsd_config_exec_t,s0)
+/usr/libexec/hal_lpadmin	--	gen_context(system_u:object_r:cupsd_config_exec_t,s0)
 
-/usr/libexec/cups-pk-helper-mechanism -- gen_context(system_u:object_r:cupsd_config_exec_t,s0)
-/usr/libexec/hal_lpadmin --	gen_context(system_u:object_r:cupsd_config_exec_t,s0)
+/usr/local/linuxprinter/ppd(/.*)?	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
 
 /usr/sbin/hp-[^/]+	--	gen_context(system_u:object_r:hplip_exec_t,s0)
-/usr/sbin/cupsd		--	gen_context(system_u:object_r:cupsd_exec_t,s0)
-/usr/sbin/hal_lpadmin --	gen_context(system_u:object_r:cupsd_config_exec_t,s0)
-/usr/sbin/hpiod		--	gen_context(system_u:object_r:hplip_exec_t,s0)
-/usr/sbin/printconf-backend --	gen_context(system_u:object_r:cupsd_config_exec_t,s0)
+/usr/sbin/cupsd	--	gen_context(system_u:object_r:cupsd_exec_t,s0)
+/usr/sbin/hal_lpadmin	--	gen_context(system_u:object_r:cupsd_config_exec_t,s0)
+/usr/sbin/hpiod	--	gen_context(system_u:object_r:hplip_exec_t,s0)
+/usr/sbin/printconf-backend	--	gen_context(system_u:object_r:cupsd_config_exec_t,s0)
 /usr/sbin/ptal-printd	--	gen_context(system_u:object_r:ptal_exec_t,s0)
 /usr/sbin/ptal-mlcd	--	gen_context(system_u:object_r:ptal_exec_t,s0)
 /usr/sbin/ptal-photod	--	gen_context(system_u:object_r:ptal_exec_t,s0)
 
-/usr/share/cups(/.*)?		gen_context(system_u:object_r:cupsd_etc_t,s0)
-/usr/share/foomatic/db/oldprinterids --	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
-/usr/share/hplip/.*\.py --	gen_context(system_u:object_r:hplip_exec_t,s0)
-
-/var/cache/alchemist/printconf.* gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
-/var/cache/foomatic(/.*)? 	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
-/var/cache/cups(/.*)? 		gen_context(system_u:object_r:cupsd_rw_etc_t,mls_systemhigh)
+/usr/share/cups(/.*)?	gen_context(system_u:object_r:cupsd_etc_t,s0)
+/usr/share/foomatic/db/oldprinterids	--	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+/usr/share/hplip/.*\.py	--	gen_context(system_u:object_r:hplip_exec_t,s0)
+
+/var/cache/alchemist/printconf.*	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+/var/cache/foomatic(/.*)?	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
+/var/cache/cups(/.*)?	gen_context(system_u:object_r:cupsd_rw_etc_t,mls_systemhigh)
 
 /var/lib/cups/certs	-d	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
 /var/lib/cups/certs/.*	--	gen_context(system_u:object_r:cupsd_rw_etc_t,s0)
 
-/var/lib/hp(/.*)?		gen_context(system_u:object_r:hplip_var_lib_t,s0)
+/var/lib/hp(/.*)?	gen_context(system_u:object_r:hplip_var_lib_t,s0)
 
-/var/log/cups(/.*)?		gen_context(system_u:object_r:cupsd_log_t,s0)
-/var/log/turboprint.*		gen_context(system_u:object_r:cupsd_log_t,s0)
+/var/log/cups(/.*)?	gen_context(system_u:object_r:cupsd_log_t,s0)
+/var/log/turboprint.*	gen_context(system_u:object_r:cupsd_log_t,s0)
 
-/var/ccpd(/.*)?			gen_context(system_u:object_r:cupsd_var_run_t,s0)
-/var/ekpd(/.*)?			gen_context(system_u:object_r:cupsd_var_run_t,s0)
-/var/run/cups(/.*)?		gen_context(system_u:object_r:cupsd_var_run_t,s0)
+/var/ccpd(/.*)?	gen_context(system_u:object_r:cupsd_var_run_t,s0)
+/var/ekpd(/.*)?	gen_context(system_u:object_r:cupsd_var_run_t,s0)
+/var/run/cups(/.*)?	gen_context(system_u:object_r:cupsd_var_run_t,s0)
 /var/run/hp.*\.pid	--	gen_context(system_u:object_r:hplip_var_run_t,s0)
 /var/run/hp.*\.port	--	gen_context(system_u:object_r:hplip_var_run_t,s0)
 /var/run/ptal-printd(/.*)?	gen_context(system_u:object_r:ptal_var_run_t,s0)
 /var/run/ptal-mlcd(/.*)?	gen_context(system_u:object_r:ptal_var_run_t,s0)
-/var/run/udev-configure-printer(/.*)? 	gen_context(system_u:object_r:cupsd_config_var_run_t,s0)
-/var/turboprint(/.*)?		gen_context(system_u:object_r:cupsd_var_run_t,s0)
+/var/run/udev-configure-printer(/.*)?	gen_context(system_u:object_r:cupsd_config_var_run_t,s0)
+/var/turboprint(/.*)?	gen_context(system_u:object_r:cupsd_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cups.if refpolicy/policy/modules/contrib/cups.if
--- refpolicy/policy/modules/contrib/cups.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/cups.if	2012-09-27 20:03:30.745126498 +0200
@@ -1,12 +1,18 @@
-## <summary>Common UNIX printing system</summary>
+## <summary>Common UNIX printing system.</summary>
 
 ########################################
 ## <summary>
-##	Setup cups to transtion to the cups backend domain
+##	Create a domain which can be
+##	started by cupsd.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="entry_point">
+##	<summary>
+##	Type of the program to be used as an entry point to this domain.
 ##	</summary>
 ## </param>
 #
@@ -42,12 +48,14 @@
 		type cupsd_t, cupsd_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, cupsd_exec_t, cupsd_t)
 ')
 
 ########################################
 ## <summary>
-##	Connect to cupsd over an unix domain stream socket.
+##	Connect to cupsd over an unix
+##	domain stream socket.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -120,7 +128,8 @@
 
 ########################################
 ## <summary>
-##	Execute cups_config in the cups_config domain.
+##	Execute cups_config in the
+##	cups config domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -133,6 +142,7 @@
 		type cupsd_config_t, cupsd_config_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, cupsd_config_exec_t, cupsd_config_t)
 ')
 
@@ -193,8 +203,7 @@
 	')
 
 	files_search_etc($1)
-	read_files_pattern($1, cupsd_etc_t, cupsd_etc_t)
-	read_files_pattern($1, cupsd_etc_t, cupsd_rw_etc_t)
+	read_files_pattern($1, cupsd_etc_t, { cupsd_etc_t cupsd_rw_etc_t })
 ')
 
 ########################################
@@ -277,7 +286,8 @@
 
 ########################################
 ## <summary>
-##	Connect to ptal over an unix domain stream socket.
+##	Connect to ptal over an unix
+##	domain stream socket.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -296,8 +306,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate 
-##	an cups environment
+##	All of the rules required to
+##	administrate an cups environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -306,7 +316,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the cups domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -316,43 +326,35 @@
 		type cupsd_t, cupsd_tmp_t, cupsd_lpd_tmp_t;
 		type cupsd_etc_t, cupsd_log_t, cupsd_spool_t;
 		type cupsd_config_var_run_t, cupsd_lpd_var_run_t;
-		type cupsd_var_run_t, ptal_etc_t;
-		type ptal_var_run_t, hplip_var_run_t;
-		type cupsd_initrc_exec_t;
+		type cupsd_var_run_t, ptal_etc_t, cupsd_rw_etc_t;
+		type ptal_var_run_t, hplip_var_run_t, cupsd_initrc_exec_t;
+		type cupsd_config_t, cupsd_lpd_t, cups_pdf_t;
+		type hplip_t, ptal_t;
 	')
 
-	allow $1 cupsd_t:process { ptrace signal_perms };
-	ps_process_pattern($1, cupsd_t)
+	allow $1 { cupsd_t cupsd_config_t cupsd_lpd_t }:process { ptrace signal_perms };
+	allow $1 { cups_pdf_t hplip_t ptal_t }:process { ptrace signal_perms };
+	ps_process_pattern($1, { cupsd_t cupsd_config_t cupsd_lpd_t })
+	ps_process_pattern($1, { cups_pdf_t hplip_t ptal_t })
 
 	init_labeled_script_domtrans($1, cupsd_initrc_exec_t)
 	domain_system_change_exemption($1)
 	role_transition $2 cupsd_initrc_exec_t system_r;
 	allow $2 system_r;
 
-	admin_pattern($1, cupsd_etc_t)
 	files_list_etc($1)
+	admin_pattern($1, { cupsd_etc_t cupsd_rw_etc_t ptal_etc_t })
 
-	admin_pattern($1, cupsd_config_var_run_t)
-
-	admin_pattern($1, cupsd_log_t)
 	logging_list_logs($1)
+	admin_pattern($1, cupsd_log_t)
 
-	admin_pattern($1, cupsd_lpd_tmp_t)
-
-	admin_pattern($1, cupsd_lpd_var_run_t)
-
-	admin_pattern($1, cupsd_spool_t)
 	files_list_spool($1)
+	admin_pattern($1, cupsd_spool_t)
 
-	admin_pattern($1, cupsd_tmp_t)
 	files_list_tmp($1)
+	admin_pattern($1, { cupsd_tmp_t  cupsd_lpd_tmp_t })
 
-	admin_pattern($1, cupsd_var_run_t)
 	files_list_pids($1)
-
-	admin_pattern($1, hplip_var_run_t)
-
-	admin_pattern($1, ptal_etc_t)
-
-	admin_pattern($1, ptal_var_run_t)
+	admin_pattern($1, { cupsd_config_var_run_t cupsd_var_run_t hplip_var_run_t })
+	admin_pattern($1, { ptal_var_run_t cupsd_lpd_var_run_t })
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cups.te refpolicy/policy/modules/contrib/cups.te
--- refpolicy/policy/modules/contrib/cups.te	2012-07-25 20:33:04.000000000 +0200
+++ refpolicy/policy/modules/contrib/cups.te	2012-09-27 20:03:30.745126498 +0200
@@ -1,4 +1,4 @@
-policy_module(cups, 1.15.0)
+policy_module(cups, 1.15.2)
 
 ########################################
 #
@@ -15,6 +15,7 @@
 type cupsd_t;
 type cupsd_exec_t;
 init_daemon_domain(cupsd_t, cupsd_exec_t)
+mls_trusted_object(cupsd_t)
 
 type cupsd_etc_t;
 files_config_file(cupsd_etc_t)
@@ -63,7 +64,6 @@
 type hplip_t;
 type hplip_exec_t;
 init_daemon_domain(hplip_t, hplip_exec_t)
-# For CUPS to run as a backend
 cups_backend(hplip_t, hplip_exec_t)
 
 type hplip_etc_t;
@@ -101,26 +101,22 @@
 # Cups local policy
 #
 
-# /usr/lib/cups/backend/serial needs sys_admin(?!)
 allow cupsd_t self:capability { ipc_lock sys_admin dac_override dac_read_search kill setgid setuid fsetid net_bind_service fowner chown dac_override sys_rawio sys_resource sys_tty_config };
 dontaudit cupsd_t self:capability { sys_tty_config net_admin };
+allow cupsd_t self:capability2 block_suspend;
 allow cupsd_t self:process { getpgid setpgid setsched signal_perms };
 allow cupsd_t self:fifo_file rw_fifo_file_perms;
-allow cupsd_t self:unix_stream_socket { create_stream_socket_perms connectto };
-allow cupsd_t self:unix_dgram_socket create_socket_perms;
+allow cupsd_t self:unix_stream_socket { accept connectto listen };
 allow cupsd_t self:netlink_selinux_socket create_socket_perms;
 allow cupsd_t self:shm create_shm_perms;
 allow cupsd_t self:sem create_sem_perms;
-allow cupsd_t self:tcp_socket create_stream_socket_perms;
-allow cupsd_t self:udp_socket create_socket_perms;
+allow cupsd_t self:tcp_socket { accept listen };
 allow cupsd_t self:appletalk_socket create_socket_perms;
-# generic socket here until appletalk socket is available in kernels
-allow cupsd_t self:socket create_socket_perms;
 
-allow cupsd_t cupsd_etc_t:{ dir file } setattr;
+allow cupsd_t cupsd_etc_t:dir setattr_dir_perms;
+allow cupsd_t cupsd_etc_t:file setattr_file_perms;
 read_files_pattern(cupsd_t, cupsd_etc_t, cupsd_etc_t)
 read_lnk_files_pattern(cupsd_t, cupsd_etc_t, cupsd_etc_t)
-files_search_etc(cupsd_t)
 
 manage_files_pattern(cupsd_t, cupsd_interface_t, cupsd_interface_t)
 
@@ -129,28 +125,28 @@
 filetrans_pattern(cupsd_t, cupsd_etc_t, cupsd_rw_etc_t, file)
 files_var_filetrans(cupsd_t, cupsd_rw_etc_t, { dir file })
 
-# allow cups to execute its backend scripts
-can_exec(cupsd_t, cupsd_exec_t)
 allow cupsd_t cupsd_exec_t:dir search_dir_perms;
 allow cupsd_t cupsd_exec_t:lnk_file read_lnk_file_perms;
 
 allow cupsd_t cupsd_lock_t:file manage_file_perms;
 files_lock_filetrans(cupsd_t, cupsd_lock_t, file)
 
-manage_files_pattern(cupsd_t, cupsd_log_t, cupsd_log_t)
-allow cupsd_t cupsd_log_t:dir setattr;
+manage_dirs_pattern(cupsd_t, cupsd_log_t, cupsd_log_t)
+append_files_pattern(cupsd_t, cupsd_log_t, cupsd_log_t)
+create_files_pattern(cupsd_t, cupsd_log_t, cupsd_log_t)
+setattr_files_pattern(cupsd_t, cupsd_log_t, cupsd_log_t)
 logging_log_filetrans(cupsd_t, cupsd_log_t, { file dir })
 
 manage_dirs_pattern(cupsd_t, cupsd_tmp_t, cupsd_tmp_t)
 manage_files_pattern(cupsd_t, cupsd_tmp_t, cupsd_tmp_t)
 manage_fifo_files_pattern(cupsd_t, cupsd_tmp_t, cupsd_tmp_t)
-files_tmp_filetrans(cupsd_t, cupsd_tmp_t, { file dir fifo_file })
+files_tmp_filetrans(cupsd_t, cupsd_tmp_t, { dir fifo_file file })
 
-allow cupsd_t cupsd_var_run_t:dir setattr;
+manage_dirs_pattern(cupsd_t, cupsd_var_run_t, cupsd_var_run_t)
 manage_files_pattern(cupsd_t, cupsd_var_run_t, cupsd_var_run_t)
 manage_sock_files_pattern(cupsd_t, cupsd_var_run_t, cupsd_var_run_t)
 manage_fifo_files_pattern(cupsd_t, cupsd_var_run_t, cupsd_var_run_t)
-files_pid_filetrans(cupsd_t, cupsd_var_run_t, { file fifo_file })
+files_pid_filetrans(cupsd_t, cupsd_var_run_t, { dir fifo_file file })
 
 allow cupsd_t hplip_t:process { signal sigkill };
 
@@ -159,7 +155,9 @@
 allow cupsd_t hplip_var_run_t:file read_file_perms;
 
 stream_connect_pattern(cupsd_t, ptal_var_run_t, ptal_var_run_t, ptal_t)
-allow cupsd_t ptal_var_run_t : sock_file setattr;
+allow cupsd_t ptal_var_run_t:sock_file setattr_sock_file_perms;
+
+can_exec(cupsd_t, { cupsd_exec_t cupsd_interface_t })
 
 kernel_read_system_state(cupsd_t)
 kernel_read_network_state(cupsd_t)
@@ -178,6 +176,9 @@
 corenet_udp_sendrecv_all_ports(cupsd_t)
 corenet_tcp_bind_generic_node(cupsd_t)
 corenet_udp_bind_generic_node(cupsd_t)
+
+corenet_sendrecv_all_server_packets(cupsd_t)
+corenet_sendrecv_all_client_packets(cupsd_t)
 corenet_tcp_bind_ipp_port(cupsd_t)
 corenet_udp_bind_ipp_port(cupsd_t)
 corenet_udp_bind_howl_port(cupsd_t)
@@ -189,56 +190,52 @@
 corenet_sendrecv_ipp_client_packets(cupsd_t)
 corenet_sendrecv_ipp_server_packets(cupsd_t)
 
+corecmd_exec_bin(cupsd_t)
+corecmd_exec_shell(cupsd_t)
+
 dev_rw_printer(cupsd_t)
 dev_read_urand(cupsd_t)
 dev_read_sysfs(cupsd_t)
-dev_rw_input_dev(cupsd_t)	#447878
+dev_rw_input_dev(cupsd_t)
 dev_rw_generic_usb_dev(cupsd_t)
 dev_rw_usbfs(cupsd_t)
 dev_getattr_printer_dev(cupsd_t)
 
 domain_read_all_domains_state(cupsd_t)
-
-fs_getattr_all_fs(cupsd_t)
-fs_search_auto_mountpoints(cupsd_t)
-fs_search_fusefs(cupsd_t)
-fs_read_anon_inodefs_files(cupsd_t)
-
-mls_file_downgrade(cupsd_t)
-mls_file_write_all_levels(cupsd_t)
-mls_file_read_all_levels(cupsd_t)
-mls_rangetrans_target(cupsd_t)
-mls_socket_write_all_levels(cupsd_t)
-mls_fd_use_all_levels(cupsd_t)
-
-term_use_unallocated_ttys(cupsd_t)
-term_search_ptys(cupsd_t)
-
-# Filter scripts may be shell scripts, and may invoke progs like /bin/mktemp
-corecmd_exec_shell(cupsd_t)
-corecmd_exec_bin(cupsd_t)
-
 domain_use_interactive_fds(cupsd_t)
 
+files_getattr_boot_dirs(cupsd_t)
 files_list_spool(cupsd_t)
-files_read_etc_files(cupsd_t)
 files_read_etc_runtime_files(cupsd_t)
-# read python modules
 files_read_usr_files(cupsd_t)
+files_exec_usr_files(cupsd_t)
 # for /var/lib/defoma
 files_read_var_lib_files(cupsd_t)
 files_list_world_readable(cupsd_t)
 files_read_world_readable_files(cupsd_t)
 files_read_world_readable_symlinks(cupsd_t)
-# Satisfy readahead
 files_read_var_files(cupsd_t)
 files_read_var_symlinks(cupsd_t)
+files_write_generic_pid_pipes(cupsd_t)
+files_dontaudit_getattr_all_tmp_files(cupsd_t)
+files_dontaudit_list_home(cupsd_t)
 # for /etc/printcap
 files_dontaudit_write_etc_files(cupsd_t)
-# smbspool seems to be iterating through all existing tmp files.
-# redhat bug #214953
-# cjp: this might be a broken behavior
-files_dontaudit_getattr_all_tmp_files(cupsd_t)
+
+fs_getattr_all_fs(cupsd_t)
+fs_search_auto_mountpoints(cupsd_t)
+fs_search_fusefs(cupsd_t)
+fs_read_anon_inodefs_files(cupsd_t)
+
+mls_fd_use_all_levels(cupsd_t)
+mls_file_downgrade(cupsd_t)
+mls_file_write_all_levels(cupsd_t)
+mls_file_read_all_levels(cupsd_t)
+mls_rangetrans_target(cupsd_t)
+mls_socket_write_all_levels(cupsd_t)
+
+term_search_ptys(cupsd_t)
+term_use_unallocated_ttys(cupsd_t)
 
 selinux_compute_access_vector(cupsd_t)
 selinux_validate_context(cupsd_t)
@@ -251,7 +248,6 @@
 auth_rw_faillog(cupsd_t)
 auth_use_nsswitch(cupsd_t)
 
-# Read /usr/lib/gconv/gconv-modules.* and /usr/lib/python2.2/.*
 libs_read_lib_files(cupsd_t)
 libs_exec_lib_files(cupsd_t)
 
@@ -259,23 +255,16 @@
 logging_send_syslog_msg(cupsd_t)
 
 miscfiles_read_localization(cupsd_t)
-# invoking ghostscript needs to read fonts
 miscfiles_read_fonts(cupsd_t)
 miscfiles_setattr_fonts_cache_dirs(cupsd_t)
 
 seutil_read_config(cupsd_t)
+
 sysnet_exec_ifconfig(cupsd_t)
 
-files_dontaudit_list_home(cupsd_t)
 userdom_dontaudit_use_unpriv_user_fds(cupsd_t)
 userdom_dontaudit_search_user_home_content(cupsd_t)
 
-# Write to /var/spool/cups.
-lpd_manage_spool(cupsd_t)
-lpd_read_config(cupsd_t)
-lpd_exec_lpr(cupsd_t)
-lpd_relabel_spool(cupsd_t)
-
 optional_policy(`
 	apm_domtrans_client(cupsd_t)
 ')
@@ -311,17 +300,29 @@
 ')
 
 optional_policy(`
+	kerberos_manage_host_rcache(cupsd_t)
+	kerberos_tmp_filetrans_host_rcache(cupsd_t, file, "host_0")
+')
+
+optional_policy(`
 	logrotate_domtrans(cupsd_t)
 ')
 
 optional_policy(`
+	lpd_exec_lpr(cupsd_t)
+	lpd_manage_spool(cupsd_t)
+	lpd_read_config(cupsd_t)
+	lpd_relabel_spool(cupsd_t)
+')
+
+optional_policy(`
 	mta_send_mail(cupsd_t)
 ')
 
 optional_policy(`
-	# cups execs smbtool which reads samba_etc_t files
 	samba_read_config(cupsd_t)
 	samba_rw_var_files(cupsd_t)
+	samba_stream_connect_nmbd(cupsd_t)
 ')
 
 optional_policy(`
@@ -338,16 +339,14 @@
 
 ########################################
 #
-# Cups configuration daemon local policy
+# Configuration daemon local policy
 #
 
 allow cupsd_config_t self:capability { chown dac_override sys_tty_config };
 dontaudit cupsd_config_t self:capability sys_tty_config;
 allow cupsd_config_t self:process { getsched signal_perms };
 allow cupsd_config_t self:fifo_file rw_fifo_file_perms;
-allow cupsd_config_t self:unix_stream_socket create_socket_perms;
-allow cupsd_config_t self:unix_dgram_socket create_socket_perms;
-allow cupsd_config_t self:tcp_socket create_stream_socket_perms;
+allow cupsd_config_t self:tcp_socket { accept listen };
 
 allow cupsd_config_t cupsd_t:process signal;
 ps_process_pattern(cupsd_config_t, cupsd_t)
@@ -360,8 +359,6 @@
 manage_lnk_files_pattern(cupsd_config_t, cupsd_rw_etc_t, cupsd_rw_etc_t)
 files_var_filetrans(cupsd_config_t, cupsd_rw_etc_t, file)
 
-can_exec(cupsd_config_t, cupsd_config_exec_t)
-
 allow cupsd_config_t cupsd_log_t:file rw_file_perms;
 
 manage_lnk_files_pattern(cupsd_config_t, cupsd_tmp_t, cupsd_tmp_t)
@@ -371,8 +368,13 @@
 
 allow cupsd_config_t cupsd_var_run_t:file read_file_perms;
 
+manage_dirs_pattern(cupsd_config_t, cupsd_config_var_run_t, cupsd_config_var_run_t)
 manage_files_pattern(cupsd_config_t, cupsd_config_var_run_t, cupsd_config_var_run_t)
-files_pid_filetrans(cupsd_config_t, cupsd_config_var_run_t, file)
+files_pid_filetrans(cupsd_config_t, cupsd_config_var_run_t, { dir file })
+
+stream_connect_pattern(cupsd_config_t, cupsd_var_run_t, cupsd_var_run_t, cupsd_t)
+
+can_exec(cupsd_config_t, cupsd_config_exec_t)
 
 domtrans_pattern(cupsd_config_t, hplip_exec_t, hplip_t)
 
@@ -386,32 +388,29 @@
 corenet_tcp_sendrecv_generic_if(cupsd_config_t)
 corenet_tcp_sendrecv_generic_node(cupsd_config_t)
 corenet_tcp_sendrecv_all_ports(cupsd_config_t)
-corenet_tcp_connect_all_ports(cupsd_config_t)
+
 corenet_sendrecv_all_client_packets(cupsd_config_t)
+corenet_tcp_connect_all_ports(cupsd_config_t)
+
+corecmd_exec_bin(cupsd_config_t)
+corecmd_exec_shell(cupsd_config_t)
 
 dev_read_sysfs(cupsd_config_t)
 dev_read_urand(cupsd_config_t)
 dev_read_rand(cupsd_config_t)
 dev_rw_generic_usb_dev(cupsd_config_t)
 
+files_read_etc_runtime_files(cupsd_config_t)
+files_read_usr_files(cupsd_config_t)
+files_read_var_symlinks(cupsd_config_t)
 files_search_all_mountpoints(cupsd_config_t)
 
 fs_getattr_all_fs(cupsd_config_t)
 fs_search_auto_mountpoints(cupsd_config_t)
 
-corecmd_exec_bin(cupsd_config_t)
-corecmd_exec_shell(cupsd_config_t)
-
 domain_use_interactive_fds(cupsd_config_t)
-# killall causes the following
 domain_dontaudit_search_all_domains_state(cupsd_config_t)
 
-files_read_usr_files(cupsd_config_t)
-files_read_etc_files(cupsd_config_t)
-files_read_etc_runtime_files(cupsd_config_t)
-files_read_var_symlinks(cupsd_config_t)
-
-# Alternatives asks for this
 init_getattr_all_script_files(cupsd_config_t)
 
 auth_use_nsswitch(cupsd_config_t)
@@ -425,16 +424,9 @@
 
 userdom_dontaudit_use_unpriv_user_fds(cupsd_config_t)
 userdom_dontaudit_search_user_home_dirs(cupsd_config_t)
-
-cups_stream_connect(cupsd_config_t)
-
-lpd_read_config(cupsd_config_t)
-
-ifdef(`distro_redhat',`
-	optional_policy(`
-		rpm_read_db(cupsd_config_t)
-	')
-')
+userdom_read_all_users_state(cupsd_config_t)
+userdom_read_user_tmp_symlinks(cupsd_config_t)
+userdom_rw_user_tmp_files(cupsd_config_t)
 
 optional_policy(`
 	term_use_generic_ptys(cupsd_config_t)
@@ -450,6 +442,10 @@
 	optional_policy(`
 		hal_dbus_chat(cupsd_config_t)
 	')
+
+	optional_policy(`
+		policykit_dbus_chat(cupsd_config_t)
+	')
 ')
 
 optional_policy(`
@@ -467,8 +463,7 @@
 ')
 
 optional_policy(`
-	policykit_dbus_chat(cupsd_config_t)
-	userdom_read_all_users_state(cupsd_config_t)
+	lpd_read_config(cupsd_config_t)
 ')
 
 optional_policy(`
@@ -489,23 +484,14 @@
 
 ########################################
 #
-# Cups lpd support
+# Lpd local policy
 #
 
+allow cupsd_lpd_t self:capability { setuid setgid };
 allow cupsd_lpd_t self:process signal_perms;
 allow cupsd_lpd_t self:fifo_file rw_fifo_file_perms;
-allow cupsd_lpd_t self:tcp_socket connected_stream_socket_perms;
-allow cupsd_lpd_t self:udp_socket create_socket_perms;
-
-# for identd
-# cjp: this should probably only be inetd_child rules?
+allow cupsd_lpd_t self:tcp_socket { accept listen };
 allow cupsd_lpd_t self:netlink_tcpdiag_socket r_netlink_socket_perms;
-allow cupsd_lpd_t self:capability { setuid setgid };
-files_search_home(cupsd_lpd_t)
-optional_policy(`
-	kerberos_use(cupsd_lpd_t)
-')
-#end for identd
 
 allow cupsd_lpd_t cupsd_etc_t:dir list_dir_perms;
 read_files_pattern(cupsd_lpd_t, cupsd_etc_t, cupsd_etc_t)
@@ -517,11 +503,13 @@
 
 manage_dirs_pattern(cupsd_lpd_t, cupsd_lpd_tmp_t, cupsd_lpd_tmp_t)
 manage_files_pattern(cupsd_lpd_t, cupsd_lpd_tmp_t, cupsd_lpd_tmp_t)
-files_tmp_filetrans(cupsd_lpd_t, cupsd_lpd_tmp_t, { file dir })
+files_tmp_filetrans(cupsd_lpd_t, cupsd_lpd_tmp_t, { dir file })
 
 manage_files_pattern(cupsd_lpd_t, cupsd_lpd_var_run_t, cupsd_lpd_var_run_t)
 files_pid_filetrans(cupsd_lpd_t, cupsd_lpd_var_run_t, file)
 
+stream_connect_pattern(cupsd_lpd_t, cupsd_var_run_t, cupsd_var_run_t, cupsd_t)
+
 kernel_read_kernel_sysctls(cupsd_lpd_t)
 kernel_read_system_state(cupsd_lpd_t)
 kernel_read_network_state(cupsd_lpd_t)
@@ -529,21 +517,18 @@
 corenet_all_recvfrom_unlabeled(cupsd_lpd_t)
 corenet_all_recvfrom_netlabel(cupsd_lpd_t)
 corenet_tcp_sendrecv_generic_if(cupsd_lpd_t)
-corenet_udp_sendrecv_generic_if(cupsd_lpd_t)
 corenet_tcp_sendrecv_generic_node(cupsd_lpd_t)
-corenet_udp_sendrecv_generic_node(cupsd_lpd_t)
-corenet_tcp_sendrecv_all_ports(cupsd_lpd_t)
-corenet_udp_sendrecv_all_ports(cupsd_lpd_t)
-corenet_tcp_bind_generic_node(cupsd_lpd_t)
-corenet_udp_bind_generic_node(cupsd_lpd_t)
+
+corenet_sendrecv_ipp_client_packets(cupsd_lpd_t)
 corenet_tcp_connect_ipp_port(cupsd_lpd_t)
+corenet_tcp_sendrecv_ipp_port(cupsd_lpd_t)
 
 dev_read_urand(cupsd_lpd_t)
 dev_read_rand(cupsd_lpd_t)
 
 fs_getattr_xattr_fs(cupsd_lpd_t)
 
-files_read_etc_files(cupsd_lpd_t)
+files_search_home(cupsd_lpd_t)
 
 auth_use_nsswitch(cupsd_lpd_t)
 
@@ -552,48 +537,43 @@
 miscfiles_read_localization(cupsd_lpd_t)
 miscfiles_setattr_fonts_cache_dirs(cupsd_lpd_t)
 
-cups_stream_connect(cupsd_lpd_t)
-
 optional_policy(`
 	inetd_service_domain(cupsd_lpd_t, cupsd_lpd_exec_t)
 ')
 
 ########################################
 #
-# cups_pdf local policy
+# Pdf local policy
 #
 
 allow cups_pdf_t self:capability { chown fowner fsetid setuid setgid dac_override };
-allow cups_pdf_t self:fifo_file rw_file_perms;
+allow cups_pdf_t self:fifo_file rw_fifo_file_perms;
 allow cups_pdf_t self:unix_stream_socket create_stream_socket_perms;
 
 manage_files_pattern(cups_pdf_t, cupsd_log_t, cupsd_log_t)
 
 manage_files_pattern(cups_pdf_t, cups_pdf_tmp_t, cups_pdf_tmp_t)
 manage_dirs_pattern(cups_pdf_t, cups_pdf_tmp_t, cups_pdf_tmp_t)
-files_tmp_filetrans(cups_pdf_t, cups_pdf_tmp_t, { file dir })
+files_tmp_filetrans(cups_pdf_t, cups_pdf_tmp_t, { dir file })
 
 fs_rw_anon_inodefs_files(cups_pdf_t)
 
 kernel_read_system_state(cups_pdf_t)
 
-files_read_etc_files(cups_pdf_t)
 files_read_usr_files(cups_pdf_t)
 
-corecmd_exec_shell(cups_pdf_t)
 corecmd_exec_bin(cups_pdf_t)
+corecmd_exec_shell(cups_pdf_t)
 
 auth_use_nsswitch(cups_pdf_t)
 
 miscfiles_read_localization(cups_pdf_t)
 miscfiles_read_fonts(cups_pdf_t)
+miscfiles_setattr_fonts_cache_dirs(cups_pdf_t)
 
-userdom_home_filetrans_user_home_dir(cups_pdf_t)
 userdom_manage_user_home_content_dirs(cups_pdf_t)
 userdom_manage_user_home_content_files(cups_pdf_t)
-
-lpd_manage_spool(cups_pdf_t)
-
+userdom_home_filetrans_user_home_dir(cups_pdf_t)
 
 tunable_policy(`use_nfs_home_dirs',`
 	fs_search_auto_mountpoints(cups_pdf_t)
@@ -606,6 +586,10 @@
 	fs_manage_cifs_files(cups_pdf_t)
 ')
 
+optional_policy(`
+	lpd_manage_spool(cups_pdf_t)
+')
+
 ########################################
 #
 # HPLIP local policy
@@ -616,34 +600,32 @@
 dontaudit hplip_t self:capability sys_tty_config;
 allow hplip_t self:fifo_file rw_fifo_file_perms;
 allow hplip_t self:process signal_perms;
-allow hplip_t self:unix_dgram_socket create_socket_perms;
-allow hplip_t self:unix_stream_socket create_socket_perms;
 allow hplip_t self:netlink_route_socket r_netlink_socket_perms;
 allow hplip_t self:tcp_socket create_stream_socket_perms;
 allow hplip_t self:udp_socket create_socket_perms;
 allow hplip_t self:rawip_socket create_socket_perms;
 
 allow hplip_t cupsd_etc_t:dir search_dir_perms;
+
 manage_dirs_pattern(hplip_t, cupsd_tmp_t, cupsd_tmp_t)
 manage_files_pattern(hplip_t, cupsd_tmp_t, cupsd_tmp_t)
-files_tmp_filetrans(hplip_t, cupsd_tmp_t, { file dir })
-
-cups_stream_connect(hplip_t)
+files_tmp_filetrans(hplip_t, cupsd_tmp_t, { dir file })
 
 allow hplip_t hplip_etc_t:dir list_dir_perms;
 read_files_pattern(hplip_t, hplip_etc_t, hplip_etc_t)
 read_lnk_files_pattern(hplip_t, hplip_etc_t, hplip_etc_t)
-files_search_etc(hplip_t)
 
 manage_files_pattern(hplip_t, hplip_var_lib_t, hplip_var_lib_t)
 manage_lnk_files_pattern(hplip_t, hplip_var_lib_t, hplip_var_lib_t)
 
 manage_fifo_files_pattern(hplip_t, hplip_tmp_t, hplip_tmp_t)
-files_tmp_filetrans(hplip_t, hplip_tmp_t, fifo_file )
+files_tmp_filetrans(hplip_t, hplip_tmp_t, fifo_file)
 
 manage_files_pattern(hplip_t, hplip_var_run_t, hplip_var_run_t)
 files_pid_filetrans(hplip_t, hplip_var_run_t, file)
 
+stream_connect_pattern(hplip_t, cupsd_var_run_t, cupsd_var_run_t, cupsd_t)
+
 kernel_read_system_state(hplip_t)
 kernel_read_kernel_sysctls(hplip_t)
 
@@ -659,13 +641,20 @@
 corenet_udp_sendrecv_all_ports(hplip_t)
 corenet_tcp_bind_generic_node(hplip_t)
 corenet_udp_bind_generic_node(hplip_t)
+
+corenet_sendrecv_hplip_client_packets(hplip_t)
+corenet_receive_hplip_server_packets(hplip_t)
 corenet_tcp_bind_hplip_port(hplip_t)
 corenet_tcp_connect_hplip_port(hplip_t)
+
+corenet_sendrecv_ipp_client_packets(hplip_t)
 corenet_tcp_connect_ipp_port(hplip_t)
-corenet_sendrecv_hplip_client_packets(hplip_t)
-corenet_receive_hplip_server_packets(hplip_t)
+
+corenet_sendrecv_howl_server_packets(hplip_t)
 corenet_udp_bind_howl_port(hplip_t)
 
+corecmd_exec_bin(hplip_t)
+
 dev_read_sysfs(hplip_t)
 dev_rw_printer(hplip_t)
 dev_read_urand(hplip_t)
@@ -673,19 +662,16 @@
 dev_rw_generic_usb_dev(hplip_t)
 dev_rw_usbfs(hplip_t)
 
-fs_getattr_all_fs(hplip_t)
-fs_search_auto_mountpoints(hplip_t)
-fs_rw_anon_inodefs_files(hplip_t)
-
-# for python
-corecmd_exec_bin(hplip_t)
-
 domain_use_interactive_fds(hplip_t)
 
 files_read_etc_files(hplip_t)
 files_read_etc_runtime_files(hplip_t)
 files_read_usr_files(hplip_t)
 
+fs_getattr_all_fs(hplip_t)
+fs_search_auto_mountpoints(hplip_t)
+fs_rw_anon_inodefs_files(hplip_t)
+
 logging_send_syslog_msg(hplip_t)
 
 miscfiles_read_localization(hplip_t)
@@ -696,11 +682,17 @@
 userdom_dontaudit_search_user_home_dirs(hplip_t)
 userdom_dontaudit_search_user_home_content(hplip_t)
 
-lpd_read_config(hplip_t)
-lpd_manage_spool(hplip_t)
-
 optional_policy(`
 	dbus_system_bus_client(hplip_t)
+
+	optional_policy(`
+		userdom_dbus_send_all_users(hplip_t)
+	')
+')
+
+optional_policy(`
+	lpd_read_config(hplip_t)
+	lpd_manage_spool(hplip_t)
 ')
 
 optional_policy(`
@@ -723,14 +715,12 @@
 allow ptal_t self:capability { chown sys_rawio };
 dontaudit ptal_t self:capability sys_tty_config;
 allow ptal_t self:fifo_file rw_fifo_file_perms;
-allow ptal_t self:unix_dgram_socket create_socket_perms;
-allow ptal_t self:unix_stream_socket create_stream_socket_perms;
+allow ptal_t self:unix_stream_socket { accept listen };
 allow ptal_t self:tcp_socket create_stream_socket_perms;
 
 allow ptal_t ptal_etc_t:dir list_dir_perms;
 read_files_pattern(ptal_t, ptal_etc_t, ptal_etc_t)
 read_lnk_files_pattern(ptal_t, ptal_etc_t, ptal_etc_t)
-files_search_etc(ptal_t)
 
 manage_dirs_pattern(ptal_t, ptal_var_run_t, ptal_var_run_t)
 manage_files_pattern(ptal_t, ptal_var_run_t, ptal_var_run_t)
@@ -747,22 +737,24 @@
 corenet_all_recvfrom_netlabel(ptal_t)
 corenet_tcp_sendrecv_generic_if(ptal_t)
 corenet_tcp_sendrecv_generic_node(ptal_t)
-corenet_tcp_sendrecv_all_ports(ptal_t)
 corenet_tcp_bind_generic_node(ptal_t)
+
+corenet_sendrecv_ptal_server_packets(ptal_t)
 corenet_tcp_bind_ptal_port(ptal_t)
+corenet_tcp_sendrecv_ptal_port(ptal_t)
 
 dev_read_sysfs(ptal_t)
 dev_read_usbfs(ptal_t)
 dev_rw_printer(ptal_t)
 
-fs_getattr_all_fs(ptal_t)
-fs_search_auto_mountpoints(ptal_t)
-
 domain_use_interactive_fds(ptal_t)
 
 files_read_etc_files(ptal_t)
 files_read_etc_runtime_files(ptal_t)
 
+fs_getattr_all_fs(ptal_t)
+fs_search_auto_mountpoints(ptal_t)
+
 logging_send_syslog_msg(ptal_t)
 
 miscfiles_read_localization(ptal_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cvs.fc refpolicy/policy/modules/contrib/cvs.fc
--- refpolicy/policy/modules/contrib/cvs.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cvs.fc	2012-09-27 20:03:30.745126498 +0200
@@ -1,10 +1,13 @@
+/etc/rc\.d/init\.d/cvs	--	gen_context(system_u:object_r:cvs_initrc_exec_t,s0)
 
-/opt/cvs(/.*)?		gen_context(system_u:object_r:cvs_data_t,s0)
+/opt/cvs(/.*)?	gen_context(system_u:object_r:cvs_data_t,s0)
 
 /usr/bin/cvs	--	gen_context(system_u:object_r:cvs_exec_t,s0)
 
-/var/cvs(/.*)?		gen_context(system_u:object_r:cvs_data_t,s0)
-
-#CVSWeb file context
 /usr/share/cvsweb/cvsweb\.cgi	--	gen_context(system_u:object_r:httpd_cvs_script_exec_t,s0)
+
+/var/cvs(/.*)?	gen_context(system_u:object_r:cvs_data_t,s0)
+
+/var/run/cvs\.pid	--	gen_context(system_u:object_r:cvs_var_run_t,s0)
+
 /var/www/cgi-bin/cvsweb\.cgi	--	gen_context(system_u:object_r:httpd_cvs_script_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cvs.if refpolicy/policy/modules/contrib/cvs.if
--- refpolicy/policy/modules/contrib/cvs.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/cvs.if	2012-09-27 20:03:30.746126498 +0200
@@ -1,8 +1,8 @@
-## <summary>Concurrent versions system</summary>
+## <summary>Concurrent versions system.</summary>
 
 ########################################
 ## <summary>
-##	Read the CVS data and metadata.
+##	Read CVS data and metadata content.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -22,8 +22,7 @@
 
 ########################################
 ## <summary>
-##	Allow the specified domain to execute cvs
-##	in the caller domain.
+##	Execute cvs in the caller domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -36,13 +35,14 @@
 		type cvs_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	can_exec($1, cvs_exec_t)
 ')
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate 
-##	an cvs environment
+##	All of the rules required to
+##	administrate an cvs environment
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -51,22 +51,20 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the cvs domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
 #
 interface(`cvs_admin',`
 	gen_require(`
-		type cvs_t, cvs_tmp_t;
+		type cvs_t, cvs_tmp_t, cvs_initrc_exec_t;
 		type cvs_data_t, cvs_var_run_t;
-		type cvs_initrc_exec_t;
 	')
 
 	allow $1 cvs_t:process { ptrace signal_perms };
 	ps_process_pattern($1, cvs_t)
 
-	# Allow cvs_t to restart the apache service
 	init_labeled_script_domtrans($1, cvs_initrc_exec_t)
 	domain_system_change_exemption($1)
 	role_transition $2 cvs_initrc_exec_t system_r;
@@ -75,6 +73,7 @@
 	files_list_tmp($1)
 	admin_pattern($1, cvs_tmp_t)
 
+	files_search_usr($1)
 	admin_pattern($1, cvs_data_t)
 
 	files_list_pids($1)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cvs.te refpolicy/policy/modules/contrib/cvs.te
--- refpolicy/policy/modules/contrib/cvs.te	2012-09-28 19:56:54.104040255 +0200
+++ refpolicy/policy/modules/contrib/cvs.te	2012-09-27 20:03:30.746126498 +0200
@@ -1,4 +1,4 @@
-policy_module(cvs, 1.9.0)
+policy_module(cvs, 1.9.1)
 
 ########################################
 #
@@ -6,9 +6,10 @@
 #
 
 ## <desc>
-## <p>
-## Allow cvs daemon to read shadow
-## </p>
+##	<p>
+##	Determine whether cvs can read shadow
+##	password files.
+##	</p>
 ## </desc>
 gen_tunable(allow_cvs_read_shadow, false)
 
@@ -16,7 +17,6 @@
 type cvs_exec_t;
 init_daemon_domain(cvs_t, cvs_exec_t)
 application_executable_file(cvs_exec_t)
-role system_r types cvs_t;
 
 type cvs_data_t; # customizable
 files_type(cvs_data_t)
@@ -35,12 +35,10 @@
 # Local policy
 #
 
+allow cvs_t self:capability { setuid setgid };
 allow cvs_t self:process signal_perms;
 allow cvs_t self:fifo_file rw_fifo_file_perms;
-allow cvs_t self:tcp_socket connected_stream_socket_perms;
-# for identd; cjp: this should probably only be inetd_child rules?
 allow cvs_t self:netlink_tcpdiag_socket r_netlink_socket_perms;
-allow cvs_t self:capability { setuid setgid };
 
 manage_dirs_pattern(cvs_t, cvs_data_t, cvs_data_t)
 manage_files_pattern(cvs_t, cvs_data_t, cvs_data_t)
@@ -48,7 +46,7 @@
 
 manage_dirs_pattern(cvs_t, cvs_tmp_t, cvs_tmp_t)
 manage_files_pattern(cvs_t, cvs_tmp_t, cvs_tmp_t)
-files_tmp_filetrans(cvs_t, cvs_tmp_t, { file dir })
+files_tmp_filetrans(cvs_t, cvs_tmp_t, { dir file })
 
 manage_files_pattern(cvs_t, cvs_var_run_t, cvs_var_run_t)
 files_pid_filetrans(cvs_t, cvs_var_run_t, file)
@@ -57,29 +55,20 @@
 kernel_read_system_state(cvs_t)
 kernel_read_network_state(cvs_t)
 
-corenet_all_recvfrom_unlabeled(cvs_t)
-corenet_all_recvfrom_netlabel(cvs_t)
-corenet_tcp_sendrecv_generic_if(cvs_t)
-corenet_udp_sendrecv_generic_if(cvs_t)
-corenet_tcp_sendrecv_generic_node(cvs_t)
-corenet_udp_sendrecv_generic_node(cvs_t)
-corenet_tcp_sendrecv_all_ports(cvs_t)
-corenet_udp_sendrecv_all_ports(cvs_t)
+corecmd_exec_bin(cvs_t)
+corecmd_exec_shell(cvs_t)
 
 dev_read_urand(cvs_t)
 
+files_read_etc_runtime_files(cvs_t)
+files_search_home(cvs_t)
+
 fs_getattr_xattr_fs(cvs_t)
 
 auth_domtrans_chk_passwd(cvs_t)
 auth_use_nsswitch(cvs_t)
 
-corecmd_exec_bin(cvs_t)
-corecmd_exec_shell(cvs_t)
-
-files_read_etc_files(cvs_t)
-files_read_etc_runtime_files(cvs_t)
-# for identd; cjp: this should probably only be inetd_child rules?
-files_search_home(cvs_t)
+init_read_utmp(cvs_t)
 
 logging_send_syslog_msg(cvs_t)
 logging_send_audit_msgs(cvs_t)
@@ -88,6 +77,8 @@
 
 mta_send_mail(cvs_t)
 
+userdom_dontaudit_search_user_home_dirs(cvs_t)
+
 # cjp: typeattribute doesnt work in conditionals yet
 auth_can_read_shadow_passwords(cvs_t)
 tunable_policy(`allow_cvs_read_shadow',`
@@ -107,7 +98,7 @@
 
 ########################################
 #
-# CVSWeb policy
+# CVSWeb local policy
 #
 
 optional_policy(`
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cyphesis.fc refpolicy/policy/modules/contrib/cyphesis.fc
--- refpolicy/policy/modules/contrib/cyphesis.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cyphesis.fc	2012-09-27 20:03:30.746126498 +0200
@@ -1,5 +1,7 @@
+/etc/rc\.d/init\.d/cyphesis	--	gen_context(system_u:object_r:cyphesis_initrc_exec_t,s0)
+
 /usr/bin/cyphesis	--	gen_context(system_u:object_r:cyphesis_exec_t,s0)
 
-/var/log/cyphesis(/.*)?		gen_context(system_u:object_r:cyphesis_log_t,s0)
+/var/log/cyphesis(/.*)?	gen_context(system_u:object_r:cyphesis_log_t,s0)
 
-/var/run/cyphesis(/.*)?		gen_context(system_u:object_r:cyphesis_var_run_t,s0)
+/var/run/cyphesis(/.*)?	gen_context(system_u:object_r:cyphesis_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cyphesis.if refpolicy/policy/modules/contrib/cyphesis.if
--- refpolicy/policy/modules/contrib/cyphesis.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cyphesis.if	2012-09-27 20:03:30.746126498 +0200
@@ -1,4 +1,4 @@
-## <summary>Cyphesis WorldForge game server</summary>
+## <summary>Cyphesis WorldForge game server.</summary>
 
 ########################################
 ## <summary>
@@ -15,5 +15,47 @@
 		type cyphesis_t, cyphesis_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, cyphesis_exec_t, cyphesis_t)
 ')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an cyphesis environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`cyphesis_admin',`
+	gen_require(`
+		type cyphesis_t, cyphesis_initrc_exec_t, cyphesis_log_t;
+		type cyphesis_var_run_t, cyphesis_tmp_t;
+	')
+
+	allow $1 cyphesis_t:process { ptrace signal_perms };
+	ps_process_pattern($1, cyphesis_t)
+
+	init_labeled_script_domtrans($1, cyphesis_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 cyphesis_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, cyphesis_log_t)
+
+	files_search_pids($1)
+	admin_pattern($1, cyphesis_var_run_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, cyphesis_tmp_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cyphesis.te refpolicy/policy/modules/contrib/cyphesis.te
--- refpolicy/policy/modules/contrib/cyphesis.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/cyphesis.te	2012-09-27 20:03:30.746126498 +0200
@@ -1,4 +1,4 @@
-policy_module(cyphesis, 1.2.0)
+policy_module(cyphesis, 1.2.1)
 
 ########################################
 #
@@ -8,6 +8,10 @@
 type cyphesis_t;
 type cyphesis_exec_t;
 init_daemon_domain(cyphesis_t, cyphesis_exec_t)
+application_executable_file(cyphesis_exec_t)
+
+type cyphesis_initrc_exec_t;
+init_script_file(cyphesis_initrc_exec_t)
 
 type cyphesis_log_t;
 logging_log_file(cyphesis_log_t)
@@ -20,45 +24,41 @@
 
 ########################################
 #
-# cyphesis local policy
+# Local policy
 #
 
 allow cyphesis_t self:process { setfscreate setsched signal };
 allow cyphesis_t self:fifo_file rw_fifo_file_perms;
 allow cyphesis_t self:tcp_socket create_stream_socket_perms;
-allow cyphesis_t self:unix_stream_socket create_stream_socket_perms;
-allow cyphesis_t self:unix_dgram_socket create_socket_perms;
+allow cyphesis_t self:unix_stream_socket { accept listen };
 
-manage_files_pattern(cyphesis_t, cyphesis_log_t, cyphesis_log_t)
+append_files_pattern(cyphesis_t, cyphesis_log_t, cyphesis_log_t)
+create_files_pattern(cyphesis_t, cyphesis_log_t, cyphesis_log_t)
+setattr_files_pattern(cyphesis_t, cyphesis_log_t, cyphesis_log_t)
 logging_log_filetrans(cyphesis_t, cyphesis_log_t, file)
 
-# DAN > Does cyphesis really create a sock_file in /tmp? Why?
-allow cyphesis_t cyphesis_tmp_t:sock_file manage_sock_file_perms;
-files_tmp_filetrans(cyphesis_t, cyphesis_tmp_t, file)
-
 manage_dirs_pattern(cyphesis_t, cyphesis_var_run_t, cyphesis_var_run_t)
 manage_files_pattern(cyphesis_t, cyphesis_var_run_t, cyphesis_var_run_t)
 manage_sock_files_pattern(cyphesis_t, cyphesis_var_run_t, cyphesis_var_run_t)
-files_pid_filetrans(cyphesis_t, cyphesis_var_run_t, { dir file sock_file })
+files_pid_filetrans(cyphesis_t, cyphesis_var_run_t, dir)
 
 kernel_read_system_state(cyphesis_t)
 kernel_read_kernel_sysctls(cyphesis_t)
 
-# DAN> What is cyphesis looking for in /bin?
 corecmd_search_bin(cyphesis_t)
 corecmd_getattr_bin_files(cyphesis_t)
 
 corenet_all_recvfrom_unlabeled(cyphesis_t)
 corenet_tcp_sendrecv_generic_if(cyphesis_t)
 corenet_tcp_sendrecv_generic_node(cyphesis_t)
-corenet_tcp_sendrecv_all_ports(cyphesis_t)
 corenet_tcp_bind_generic_node(cyphesis_t)
-corenet_tcp_bind_cyphesis_port(cyphesis_t)
+
 corenet_sendrecv_cyphesis_server_packets(cyphesis_t)
+corenet_tcp_bind_cyphesis_port(cyphesis_t)
+corenet_tcp_sendrecv_cyphesis_port(cyphesis_t)
 
 dev_read_urand(cyphesis_t)
 
-# Init script handling
 domain_use_interactive_fds(cyphesis_t)
 
 files_read_etc_files(cyphesis_t)
@@ -70,10 +70,12 @@
 
 sysnet_dns_name_resolve(cyphesis_t)
 
-# cyphesis wants to talk to avahi via dbus
 optional_policy(`
-	avahi_dbus_chat(cyphesis_t)
 	dbus_system_bus_client(cyphesis_t)
+
+	optional_policy(`
+		avahi_dbus_chat(cyphesis_t)
+	')
 ')
 
 optional_policy(`
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cyrus.fc refpolicy/policy/modules/contrib/cyrus.fc
--- refpolicy/policy/modules/contrib/cyrus.fc	2012-05-04 16:15:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/cyrus.fc	2012-09-27 20:03:30.746126498 +0200
@@ -1,7 +1,10 @@
-/etc/rc\.d/init\.d/cyrus		--	gen_context(system_u:object_r:cyrus_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/cyrus.*	--	gen_context(system_u:object_r:cyrus_initrc_exec_t,s0)
 
-/usr/lib/cyrus/master			--	gen_context(system_u:object_r:cyrus_exec_t,s0)
+/usr/lib/cyrus/master	--	gen_context(system_u:object_r:cyrus_exec_t,s0)
 /usr/lib/cyrus-imapd/cyrus-master	--	gen_context(system_u:object_r:cyrus_exec_t,s0)
 
-/var/imap(/.*)?					gen_context(system_u:object_r:cyrus_var_lib_t,s0)
-/var/lib/imap(/.*)?				gen_context(system_u:object_r:cyrus_var_lib_t,s0)
+/var/imap(/.*)?	gen_context(system_u:object_r:cyrus_var_lib_t,s0)
+
+/var/lib/imap(/.*)?	gen_context(system_u:object_r:cyrus_var_lib_t,s0)
+
+/var/run/cyrus.*	gen_context(system_u:object_r:cyrus_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cyrus.if refpolicy/policy/modules/contrib/cyrus.if
--- refpolicy/policy/modules/contrib/cyrus.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/cyrus.if	2012-09-27 20:03:30.746126498 +0200
@@ -1,9 +1,9 @@
-## <summary>Cyrus is an IMAP service intended to be run on sealed servers</summary>
+## <summary>Cyrus is an IMAP service intended to be run on sealed servers.</summary>
 
 ########################################
 ## <summary>
-##	Allow caller to create, read, write,
-##	and delete cyrus data files.
+##	Create, read, write, and delete
+##	cyrus data files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -22,7 +22,8 @@
 
 ########################################
 ## <summary>
-##	Connect to Cyrus using a unix domain stream socket.
+##	Connect to Cyrus using a unix
+##	domain stream socket.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -41,8 +42,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate 
-##	an cyrus environment
+##	All of the rules required to
+##	administrate an cyrus environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -51,7 +52,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the cyrus domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/cyrus.te refpolicy/policy/modules/contrib/cyrus.te
--- refpolicy/policy/modules/contrib/cyrus.te	2012-07-25 20:33:04.000000000 +0200
+++ refpolicy/policy/modules/contrib/cyrus.te	2012-09-27 20:03:30.747126498 +0200
@@ -1,4 +1,4 @@
-policy_module(cyrus, 1.12.0)
+policy_module(cyrus, 1.12.1)
 
 ########################################
 #
@@ -37,22 +37,18 @@
 allow cyrus_t self:sem create_sem_perms;
 allow cyrus_t self:msgq create_msgq_perms;
 allow cyrus_t self:msg { send receive };
-allow cyrus_t self:unix_dgram_socket create_socket_perms;
-allow cyrus_t self:unix_stream_socket create_stream_socket_perms;
 allow cyrus_t self:unix_dgram_socket sendto;
-allow cyrus_t self:unix_stream_socket connectto;
-allow cyrus_t self:tcp_socket create_stream_socket_perms;
-allow cyrus_t self:udp_socket create_socket_perms;
+allow cyrus_t self:unix_stream_socket { accept connectto listen };
+allow cyrus_t self:tcp_socket { accept listen };
 
 manage_dirs_pattern(cyrus_t, cyrus_tmp_t, cyrus_tmp_t)
 manage_files_pattern(cyrus_t, cyrus_tmp_t, cyrus_tmp_t)
-files_tmp_filetrans(cyrus_t, cyrus_tmp_t, { file dir })
+files_tmp_filetrans(cyrus_t, cyrus_tmp_t, { dir file })
 
 manage_dirs_pattern(cyrus_t, cyrus_var_lib_t, cyrus_var_lib_t)
 manage_files_pattern(cyrus_t, cyrus_var_lib_t, cyrus_var_lib_t)
 manage_lnk_files_pattern(cyrus_t, cyrus_var_lib_t, cyrus_var_lib_t)
 manage_sock_files_pattern(cyrus_t, cyrus_var_lib_t, cyrus_var_lib_t)
-files_pid_filetrans(cyrus_t, cyrus_var_run_t, file)
 
 manage_files_pattern(cyrus_t, cyrus_var_run_t, cyrus_var_run_t)
 manage_sock_files_pattern(cyrus_t, cyrus_var_run_t, cyrus_var_run_t)
@@ -65,37 +61,40 @@
 corenet_all_recvfrom_unlabeled(cyrus_t)
 corenet_all_recvfrom_netlabel(cyrus_t)
 corenet_tcp_sendrecv_generic_if(cyrus_t)
-corenet_udp_sendrecv_generic_if(cyrus_t)
 corenet_tcp_sendrecv_generic_node(cyrus_t)
-corenet_udp_sendrecv_generic_node(cyrus_t)
 corenet_tcp_sendrecv_all_ports(cyrus_t)
-corenet_udp_sendrecv_all_ports(cyrus_t)
 corenet_tcp_bind_generic_node(cyrus_t)
+
+corenet_sendrecv_mail_server_packets(cyrus_t)
 corenet_tcp_bind_mail_port(cyrus_t)
+
+corenet_sendrecv_lmtp_server_packets(cyrus_t)
 corenet_tcp_bind_lmtp_port(cyrus_t)
+
+corenet_sendrecv_pop_server_packets(cyrus_t)
 corenet_tcp_bind_pop_port(cyrus_t)
+
+corenet_sendrecv_sieve_server_packets(cyrus_t)
 corenet_tcp_bind_sieve_port(cyrus_t)
-corenet_tcp_connect_all_ports(cyrus_t)
-corenet_sendrecv_mail_server_packets(cyrus_t)
-corenet_sendrecv_pop_server_packets(cyrus_t)
-corenet_sendrecv_lmtp_server_packets(cyrus_t)
+
 corenet_sendrecv_all_client_packets(cyrus_t)
+corenet_tcp_connect_all_ports(cyrus_t)
+
+corecmd_exec_bin(cyrus_t)
 
 dev_read_rand(cyrus_t)
 dev_read_urand(cyrus_t)
 dev_read_sysfs(cyrus_t)
 
-fs_getattr_all_fs(cyrus_t)
-fs_search_auto_mountpoints(cyrus_t)
-
-corecmd_exec_bin(cyrus_t)
-
 domain_use_interactive_fds(cyrus_t)
 
 files_list_var_lib(cyrus_t)
-files_read_etc_files(cyrus_t)
 files_read_etc_runtime_files(cyrus_t)
 files_read_usr_files(cyrus_t)
+files_dontaudit_write_usr_dirs(cyrus_t)
+
+fs_getattr_all_fs(cyrus_t)
+fs_search_auto_mountpoints(cyrus_t)
 
 auth_use_nsswitch(cyrus_t)
 
@@ -106,8 +105,6 @@
 miscfiles_read_localization(cyrus_t)
 miscfiles_read_generic_certs(cyrus_t)
 
-sysnet_read_config(cyrus_t)
-
 userdom_use_unpriv_users_fds(cyrus_t)
 userdom_dontaudit_search_user_home_dirs(cyrus_t)
 
@@ -123,10 +120,6 @@
 ')
 
 optional_policy(`
-	ldap_stream_connect(cyrus_t)
-')
-
-optional_policy(`
 	sasl_connect(cyrus_t)
 ')
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/daemontools.fc refpolicy/policy/modules/contrib/daemontools.fc
--- refpolicy/policy/modules/contrib/daemontools.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/daemontools.fc	2012-09-27 20:03:30.747126498 +0200
@@ -1,53 +1,41 @@
-#
-# /service
-#
-
-/service		-d	gen_context(system_u:object_r:svc_svc_t,s0)
-/service/.*			gen_context(system_u:object_r:svc_svc_t,s0)
-
-#
-# /usr
-#
+/service	-d	gen_context(system_u:object_r:svc_svc_t,s0)
+/service/.*	gen_context(system_u:object_r:svc_svc_t,s0)
 
-/usr/bin/envdir		--	gen_context(system_u:object_r:svc_run_exec_t,s0)
+/usr/bin/envdir	--	gen_context(system_u:object_r:svc_run_exec_t,s0)
 /usr/bin/envuidgid	--	gen_context(system_u:object_r:svc_run_exec_t,s0)
-/usr/bin/fghack		--	gen_context(system_u:object_r:svc_run_exec_t,s0)
+/usr/bin/fghack	--	gen_context(system_u:object_r:svc_run_exec_t,s0)
 /usr/bin/multilog	--	gen_context(system_u:object_r:svc_multilog_exec_t,s0)
 /usr/bin/pgrphack	--	gen_context(system_u:object_r:svc_run_exec_t,s0)
-/usr/bin/setlock		--	gen_context(system_u:object_r:svc_run_exec_t,s0)
+/usr/bin/setlock	--	gen_context(system_u:object_r:svc_run_exec_t,s0)
 /usr/bin/setuidgid	--	gen_context(system_u:object_r:svc_run_exec_t,s0)
 /usr/bin/softlimit	--	gen_context(system_u:object_r:svc_run_exec_t,s0)
-/usr/bin/svc		--	gen_context(system_u:object_r:svc_start_exec_t,s0)
-/usr/bin/svok		--	gen_context(system_u:object_r:svc_start_exec_t,s0)
-/usr/bin/svscan		--	gen_context(system_u:object_r:svc_start_exec_t,s0)
+/usr/bin/svc	--	gen_context(system_u:object_r:svc_start_exec_t,s0)
+/usr/bin/svok	--	gen_context(system_u:object_r:svc_start_exec_t,s0)
+/usr/bin/svscan	--	gen_context(system_u:object_r:svc_start_exec_t,s0)
 /usr/bin/svscanboot	--	gen_context(system_u:object_r:svc_start_exec_t,s0)
 /usr/bin/supervise	--	gen_context(system_u:object_r:svc_start_exec_t,s0)
 
-#
-# /var
-#
-
-/var/axfrdns(/.*)?		gen_context(system_u:object_r:svc_svc_t,s0)
-/var/axfrdns/run		--	gen_context(system_u:object_r:svc_run_exec_t,s0)
+/var/axfrdns(/.*)?	gen_context(system_u:object_r:svc_svc_t,s0)
+/var/axfrdns/run	--	gen_context(system_u:object_r:svc_run_exec_t,s0)
 /var/axfrdns/log/run	--	gen_context(system_u:object_r:svc_run_exec_t,s0)
-/var/axfrdns/env(/.*)?		gen_context(system_u:object_r:svc_conf_t,s0)
+/var/axfrdns/env(/.*)?	gen_context(system_u:object_r:svc_conf_t,s0)
 
-/var/dnscache(/.*)?		gen_context(system_u:object_r:svc_svc_t,s0)
-/var/dnscache/env(/.*)?		gen_context(system_u:object_r:svc_conf_t,s0)
+/var/dnscache(/.*)?	gen_context(system_u:object_r:svc_svc_t,s0)
+/var/dnscache/env(/.*)?	gen_context(system_u:object_r:svc_conf_t,s0)
 /var/dnscache/run	--	gen_context(system_u:object_r:svc_run_exec_t,s0)
 /var/dnscache/log/run	--	gen_context(system_u:object_r:svc_run_exec_t,s0)
 
 /var/qmail/supervise(/.*)?	gen_context(system_u:object_r:svc_svc_t,s0)
-/var/qmail/supervise/.*/run --	gen_context(system_u:object_r:svc_run_exec_t,s0)
-/var/qmail/supervise/.*/log/run -- gen_context(system_u:object_r:svc_run_exec_t,s0)
+/var/qmail/supervise/.*/run	--	gen_context(system_u:object_r:svc_run_exec_t,s0)
+/var/qmail/supervise/.*/log/run	--	gen_context(system_u:object_r:svc_run_exec_t,s0)
 
-/var/service/.*			gen_context(system_u:object_r:svc_svc_t,s0)
+/var/service/.*	gen_context(system_u:object_r:svc_svc_t,s0)
 /var/service/.*/env(/.*)?	gen_context(system_u:object_r:svc_conf_t,s0)
 /var/service/.*/log/main(/.*)?	gen_context(system_u:object_r:svc_log_t,s0)
-/var/service/.*/log/run		gen_context(system_u:object_r:svc_run_exec_t,s0)
-/var/service/.*/run.*		gen_context(system_u:object_r:svc_run_exec_t,s0)
+/var/service/.*/log/run	gen_context(system_u:object_r:svc_run_exec_t,s0)
+/var/service/.*/run.*	gen_context(system_u:object_r:svc_run_exec_t,s0)
 
-/var/tinydns(/.*)?		gen_context(system_u:object_r:svc_svc_t,s0)
-/var/tinydns/run		--	gen_context(system_u:object_r:svc_run_exec_t,s0)
+/var/tinydns(/.*)?	gen_context(system_u:object_r:svc_svc_t,s0)
+/var/tinydns/run	--	gen_context(system_u:object_r:svc_run_exec_t,s0)
 /var/tinydns/log/run	--	gen_context(system_u:object_r:svc_run_exec_t,s0)
-/var/tinydns/env(/.*)?		gen_context(system_u:object_r:svc_conf_t,s0)
+/var/tinydns/env(/.*)?	gen_context(system_u:object_r:svc_conf_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/daemontools.if refpolicy/policy/modules/contrib/daemontools.if
--- refpolicy/policy/modules/contrib/daemontools.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/daemontools.if	2012-09-27 20:03:30.747126498 +0200
@@ -1,13 +1,9 @@
-## <summary>Collection of tools for managing UNIX services</summary>
-## <desc>
-##	<p>
-##		Policy for DJB's daemontools
-##	</p>
-## </desc>
+## <summary>Collection of tools for managing UNIX services.</summary>
 
 ########################################
 ## <summary>
-##	An ipc channel between the supervised domain and svc_start_t
+##	An ipc channel between the
+##	supervised domain and svc_start_t.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -22,22 +18,23 @@
 
 	allow $1 svc_start_t:process sigchld;
 	allow $1 svc_start_t:fd use;
-	allow $1 svc_start_t:fifo_file { read write getattr };
+	allow $1 svc_start_t:fifo_file rw_fifo_file_perms;
 	allow svc_start_t $1:process signal;
 ')
 
 ########################################
 ## <summary>
-##	Define a specified domain as a supervised service.
+##	Create a domain which can be
+##	started by daemontools.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Type to be used as a domain.
 ##	</summary>
 ## </param>
 ## <param name="entrypoint">
 ##	<summary>
-##	The type associated with the process program.
+##	Type of the program to be used as an entry point to this domain.
 ##	</summary>
 ## </param>
 #
@@ -55,7 +52,8 @@
 
 ########################################
 ## <summary>
-##	Execute in the svc_start_t domain.
+##	Execute svc start in the svc
+##	start domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -68,38 +66,40 @@
 		type svc_start_t, svc_start_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, svc_start_exec_t, svc_start_t)
 ')
 
 ######################################
 ## <summary>
-##  Execute svc_start in the svc_start domain, and
-##  allow the specified role the svc_start domain.
+##	Execute svc start in the svc
+##	start domain, and allow the
+##	specified role the svc start domain.
 ## </summary>
 ## <param name="domain">
-##  <summary>
-##  Domain allowed access.
-##  </summary>
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
 ## </param>
 ## <param name="role">
-##  <summary>
-##  The role to be allowed the svc_start domain.
-##  </summary>
+##	<summary>
+##	Role allowed access.
+##	</summary>
 ## </param>
 ## <rolecap/>
 #
 interface(`daemonstools_run_start',`
-    gen_require(`
-		type svc_start_t;
-    ')
+	gen_require(`
+		attribute_role svc_start_roles;
+	')
 
-    daemontools_domtrans_start($1)
-    role $2 types svc_start_t;
+	daemontools_domtrans_start($1)
+	roleattribute $2 svc_start_roles;
 ')
 
 ########################################
 ## <summary>
-##	Execute in the svc_run_t domain.
+##	Execute avc run in the svc run domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -112,30 +112,33 @@
 		type svc_run_t, svc_run_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, svc_run_exec_t, svc_run_t)
 ')
 
 ######################################
 ## <summary>
-##  Send a SIGCHLD signal to svc_run domain.
+##	Send child terminated signals
+##	to svc run.
 ## </summary>
 ## <param name="domain">
-##  <summary>
-##  Domain allowed access.
-##  </summary>
+##	<summary>
+##	Domain allowed access.
+##	</summary>
 ## </param>
 #
 interface(`daemontools_sigchld_run',`
-    gen_require(`
+	gen_require(`
 		type svc_run_t;
-    ')
+	')
 
-    allow $1 svc_run_t:process sigchld;
+	allow $1 svc_run_t:process sigchld;
 ')
 
 ########################################
 ## <summary>
-##	Execute in the svc_multilog_t domain.
+##	Execute avc multilog in the svc
+##	multilog domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -148,30 +151,32 @@
 		type svc_multilog_t, svc_multilog_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, svc_multilog_exec_t, svc_multilog_t)
 ')
 
 ######################################
 ## <summary>
-##  Search svc_svc_t  directory.
+##	Search svc svc directories.
 ## </summary>
 ## <param name="domain">
-##  <summary>
-##  Domain allowed access.
-##  </summary>
+##	<summary>
+##	Domain allowed access.
+##	</summary>
 ## </param>
 #
 interface(`daemontools_search_svc_dir',`
-    gen_require(`
+	gen_require(`
 		type svc_svc_t;
-    ')
+	')
 
-    allow $1 svc_svc_t:dir search_dir_perms;
+	files_search_var($1)
+	allow $1 svc_svc_t:dir search_dir_perms;
 ')
 
 ########################################
 ## <summary>
-##	Allow a domain to read svc_svc_t files.
+##	Read svc avc files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -185,13 +190,15 @@
 		type svc_svc_t;
 	')
 
+	files_search_var($1)
 	allow $1 svc_svc_t:dir list_dir_perms;
 	allow $1 svc_svc_t:file read_file_perms;
 ')
 
 ########################################
 ## <summary>
-##	Allow a domain to create svc_svc_t files.
+##	Create, read, write and delete
+##	svc svc content.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -205,8 +212,9 @@
 		type svc_svc_t;
 	')
 
+	files_search_var($1)
 	allow $1 svc_svc_t:dir manage_dir_perms;
 	allow $1 svc_svc_t:fifo_file manage_fifo_file_perms;
 	allow $1 svc_svc_t:file manage_file_perms;
-	allow $1 svc_svc_t:lnk_file { read create };
+	allow $1 svc_svc_t:lnk_file manage_lnk_file_perms;
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/daemontools.te refpolicy/policy/modules/contrib/daemontools.te
--- refpolicy/policy/modules/contrib/daemontools.te	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/daemontools.te	2012-09-27 20:03:30.747126498 +0200
@@ -1,10 +1,13 @@
-policy_module(daemontools, 1.2.0)
+policy_module(daemontools, 1.2.1)
 
 ########################################
 #
 # Declarations
 #
 
+attribute_role svc_start_roles;
+roleattribute system_r svc_start_roles;
+
 type svc_conf_t;
 files_config_file(svc_conf_t)
 
@@ -25,26 +28,26 @@
 type svc_start_exec_t;
 init_domain(svc_start_t, svc_start_exec_t)
 init_system_domain(svc_start_t, svc_start_exec_t)
-role system_r types svc_start_t;
+role svc_start_roles types svc_start_t;
 
 type svc_svc_t;
 files_type(svc_svc_t)
 
 ########################################
 #
-# multilog local policy
+# Multilog local policy
 #
 
-# multilog creates /service/*/log/status
 manage_files_pattern(svc_multilog_t, svc_svc_t, svc_svc_t)
 
+allow svc_multilog_t svc_start_t:process sigchld;
+allow svc_multilog_t svc_start_t:fd use;
+allow svc_multilog_t svc_start_t:fifo_file rw_fifo_file_perms;
+
 init_use_fds(svc_multilog_t)
 
-# writes to /var/log/*/*
 logging_manage_generic_logs(svc_multilog_t)
 
-daemontools_ipc_domain(svc_multilog_t)
-
 ########################################
 #
 # local policy for binaries that impose 
@@ -60,8 +63,13 @@
 allow svc_run_t svc_conf_t:dir list_dir_perms;
 allow svc_run_t svc_conf_t:file read_file_perms;
 
+allow svc_run_t svc_svc_t:dir list_dir_perms;
+allow svc_run_t svc_svc_t:file read_file_perms;
+
 can_exec(svc_run_t, svc_run_exec_t)
 
+domtrans_pattern(svc_run_t, svc_multilog_exec_t, svc_multilog_t)
+
 kernel_read_system_state(svc_run_t)
 
 dev_read_urand(svc_run_t)
@@ -77,9 +85,6 @@
 init_use_script_fds(svc_run_t)
 init_use_fds(svc_run_t)
 
-daemontools_domtrans_multilog(svc_run_t)
-daemontools_read_svc(svc_run_t)
-
 optional_policy(`
 	qmail_read_config(svc_run_t)
 ')
@@ -90,15 +95,22 @@
 # ie svc, svscan, supervise ...
 #
 
-allow svc_start_t svc_run_t:process { signal setrlimit };
-
-allow svc_start_t self:fifo_file rw_fifo_file_perms;
 allow svc_start_t self:capability kill;
+allow svc_start_t self:fifo_file rw_fifo_file_perms;
 allow svc_start_t self:tcp_socket create_stream_socket_perms;
-allow svc_start_t self:unix_stream_socket create_socket_perms;
+
+allow svc_start_t svc_svc_t:dir manage_dir_perms;
+allow svc_start_t svc_svc_t:fifo_file manage_fifo_file_perms;
+allow svc_start_t svc_svc_t:file manage_file_perms;
+allow svc_start_t svc_svc_t:lnk_file manage_lnk_file_perms;
+
+allow svc_start_t svc_multilog_t:process signal;
+allow svc_start_t svc_run_t:process { signal setrlimit };
 
 can_exec(svc_start_t, svc_start_exec_t)
 
+domtrans_pattern(svc_start_t, svc_run_exec_t, svc_run_t)
+
 kernel_read_kernel_sysctls(svc_start_t)
 kernel_read_system_state(svc_start_t)
 
@@ -110,9 +122,6 @@
 files_search_var(svc_start_t)
 files_search_pids(svc_start_t)
 
-daemontools_domtrans_run(svc_start_t)
-daemontools_manage_svc(svc_start_t)
-
 logging_send_syslog_msg(svc_start_t)
 
 miscfiles_read_localization(svc_start_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dante.fc refpolicy/policy/modules/contrib/dante.fc
--- refpolicy/policy/modules/contrib/dante.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dante.fc	2012-09-27 20:03:30.747126498 +0200
@@ -1,6 +1,10 @@
+/etc/rc\.d/init\.d/danted	--	gen_context(system_u:object_r:dante_initrc_exec_t,s0)
 
-/etc/socks(/.*)?		gen_context(system_u:object_r:dante_conf_t,s0)
+/etc/danted\.conf	--	gen_context(system_u:object_r:dante_conf_t,s0)
+/etc/socks(/.*)?	gen_context(system_u:object_r:dante_conf_t,s0)
 
-/usr/sbin/sockd		--	gen_context(system_u:object_r:dante_exec_t,s0)
+/usr/sbin/danted	--	gen_context(system_u:object_r:dante_exec_t,s0)
+/usr/sbin/sockd	--	gen_context(system_u:object_r:dante_exec_t,s0)
 
+/var/run/danted\.pid	--	gen_context(system_u:object_r:dante_var_run_t,s0)
 /var/run/sockd\.pid	--	gen_context(system_u:object_r:dante_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dante.if refpolicy/policy/modules/contrib/dante.if
--- refpolicy/policy/modules/contrib/dante.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dante.if	2012-09-27 20:03:30.747126498 +0200
@@ -1 +1,39 @@
-## <summary>Dante msproxy and socks4/5 proxy server</summary>
+## <summary>Dante msproxy and socks4/5 proxy server.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an dante environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`dante_admin',`
+	gen_require(`
+		type dante_t, dante_conf_t, dante_var_run_t;
+		type dante_initrc_exec_t;
+	')
+
+	allow $1 dante_t:process { ptrace signal_perms };
+	ps_process_pattern($1, dante_t)
+
+	init_labeled_script_domtrans($1, dante_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 dante_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_etc($1)
+	admin_pattern($1, dante_conf_t)
+
+	files_search_pids($1)
+	admin_pattern($1, dante_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dante.te refpolicy/policy/modules/contrib/dante.te
--- refpolicy/policy/modules/contrib/dante.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dante.te	2012-09-27 20:03:30.747126498 +0200
@@ -1,4 +1,4 @@
-policy_module(dante, 1.8.0)
+policy_module(dante, 1.8.1)
 
 ########################################
 #
@@ -9,8 +9,11 @@
 type dante_exec_t;
 init_daemon_domain(dante_t, dante_exec_t)
 
+type dante_initrc_exec_t;
+init_script_file(dante_initrc_exec_t)
+
 type dante_conf_t;
-files_type(dante_conf_t)
+files_config_file(dante_conf_t)
 
 type dante_var_run_t;
 files_pid_file(dante_var_run_t)
@@ -40,13 +43,12 @@
 corenet_all_recvfrom_unlabeled(dante_t)
 corenet_all_recvfrom_netlabel(dante_t)
 corenet_tcp_sendrecv_generic_if(dante_t)
-corenet_udp_sendrecv_generic_if(dante_t)
 corenet_tcp_sendrecv_generic_node(dante_t)
-corenet_udp_sendrecv_generic_node(dante_t)
-corenet_tcp_sendrecv_all_ports(dante_t)
-corenet_udp_sendrecv_all_ports(dante_t)
 corenet_tcp_bind_generic_node(dante_t)
+
+corenet_sendrecv_socks_server_packets(dante_t)
 corenet_tcp_bind_socks_port(dante_t)
+corenet_tcp_sendrecv_socks_port(dante_t)
 
 dev_read_sysfs(dante_t)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dbadm.if refpolicy/policy/modules/contrib/dbadm.if
--- refpolicy/policy/modules/contrib/dbadm.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dbadm.if	2012-09-27 20:03:30.748126498 +0200
@@ -1,4 +1,4 @@
-## <summary>Database administrator role</summary>
+## <summary>Database administrator role.</summary>
 
 ########################################
 ## <summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dbadm.te refpolicy/policy/modules/contrib/dbadm.te
--- refpolicy/policy/modules/contrib/dbadm.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dbadm.te	2012-09-27 20:03:30.748126498 +0200
@@ -1,4 +1,4 @@
-policy_module(dbadm, 1.0.0)
+policy_module(dbadm, 1.0.1)
 
 ########################################
 #
@@ -6,16 +6,18 @@
 #
 
 ## <desc>
-## <p>
-## Allow dbadm to manage files in users home directories
-## </p>
+##	<p>
+##	Determine whether dbadm can manage
+##	files in users home directories.
+##	</p>
 ## </desc>
 gen_tunable(dbadm_manage_user_files, false)
 
 ## <desc>
-## <p>
-## Allow dbadm to read files in users home directories
-## </p>
+##	<p>
+##	Determine whether dbadm can read
+##	files in users home directories.
+##	</p>
 ## </desc>
 gen_tunable(dbadm_read_user_files, false)
 
@@ -25,7 +27,7 @@
 
 ########################################
 #
-# database admin local policy
+# Local policy
 #
 
 allow dbadm_t self:capability { dac_override dac_read_search sys_ptrace };
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dbus.fc refpolicy/policy/modules/contrib/dbus.fc
--- refpolicy/policy/modules/contrib/dbus.fc	2012-05-04 16:10:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/dbus.fc	2012-09-27 20:03:30.748126498 +0200
@@ -1,25 +1,18 @@
-/etc/dbus-1(/.*)?		gen_context(system_u:object_r:dbusd_etc_t,s0)
+/etc/dbus-.*(/.*)?	gen_context(system_u:object_r:dbusd_etc_t,s0)
 
-/bin/dbus-daemon 	--	gen_context(system_u:object_r:dbusd_exec_t,s0)
+/bin/dbus-daemon	--	gen_context(system_u:object_r:dbusd_exec_t,s0)
 
-ifdef(`distro_redhat',`
-/lib/dbus-1/dbus-daemon-launch-helper -- gen_context(system_u:object_r:dbusd_exec_t,s0)
-')
+/lib/dbus-.*/dbus-daemon-launch-helper -- gen_context(system_u:object_r:dbusd_exec_t,s0)
 
-/usr/bin/dbus-daemon(-1)? --	gen_context(system_u:object_r:dbusd_exec_t,s0)
+/usr/bin/dbus-daemon(-1)?	--	gen_context(system_u:object_r:dbusd_exec_t,s0)
 
-ifdef(`distro_debian',`
-/usr/lib/dbus-1.0/dbus-daemon-launch-helper -- gen_context(system_u:object_r:dbusd_exec_t,s0)
-')
+/usr/lib/dbus-.*/dbus-daemon-launch-helper	--	gen_context(system_u:object_r:dbusd_exec_t,s0)
 
-ifdef(`distro_gentoo',`
-/usr/libexec/dbus-daemon-launch-helper -- gen_context(system_u:object_r:dbusd_exec_t,s0)
-')
+/usr/libexec/dbus-daemon-launch-helper	--	gen_context(system_u:object_r:dbusd_exec_t,s0)
 
-/var/lib/dbus(/.*)?		gen_context(system_u:object_r:system_dbusd_var_lib_t,s0)
+/var/lib/dbus(/.*)?	gen_context(system_u:object_r:system_dbusd_var_lib_t,s0)
 
-/var/run/dbus(/.*)?		gen_context(system_u:object_r:system_dbusd_var_run_t,s0)
+/var/run/dbus(/.*)?	gen_context(system_u:object_r:system_dbusd_var_run_t,s0)
+/var/run/messagebus\.pid	--	gen_context(system_u:object_r:system_dbusd_var_run_t,s0)
 
-ifdef(`distro_redhat',`
 /var/named/chroot/var/run/dbus(/.*)?	gen_context(system_u:object_r:system_dbusd_var_run_t,s0)
-')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dbus.if refpolicy/policy/modules/contrib/dbus.if
--- refpolicy/policy/modules/contrib/dbus.if	2012-09-28 19:56:54.183040257 +0200
+++ refpolicy/policy/modules/contrib/dbus.if	2012-09-27 20:03:30.748126498 +0200
@@ -1,4 +1,4 @@
-## <summary>Desktop messaging bus</summary>
+## <summary>Desktop messaging bus.</summary>
 
 ########################################
 ## <summary>
@@ -19,7 +19,7 @@
 
 ########################################
 ## <summary>
-##	Role access for dbus
+##	Role access for dbus.
 ## </summary>
 ## <param name="role_prefix">
 ##	<summary>
@@ -41,20 +41,20 @@
 template(`dbus_role_template',`
 	gen_require(`
 		class dbus { send_msg acquire_svc };
-
 		attribute session_bus_type;
-		type system_dbusd_t, session_dbusd_tmp_t, dbusd_exec_t, dbusd_etc_t;
+		type system_dbusd_t, dbusd_exec_t;
 	')
 
 	##############################
 	#
-	# Delcarations
+	# Declarations
 	#
 
 	type $1_dbusd_t, session_bus_type;
 	domain_type($1_dbusd_t)
 	domain_entry_file($1_dbusd_t, dbusd_exec_t)
 	ubac_constrained($1_dbusd_t)
+
 	role $2 types $1_dbusd_t;
 
 	##############################
@@ -62,118 +62,36 @@
 	# Local policy
 	#
 
-	allow $1_dbusd_t self:process { getattr sigkill signal };
-	dontaudit $1_dbusd_t self:process ptrace;
-	allow $1_dbusd_t self:file { getattr read write };
-	allow $1_dbusd_t self:fifo_file rw_fifo_file_perms;
-	allow $1_dbusd_t self:dbus { send_msg acquire_svc };
-	allow $1_dbusd_t self:unix_stream_socket create_stream_socket_perms;
-	allow $1_dbusd_t self:unix_dgram_socket create_socket_perms;
-	allow $1_dbusd_t self:tcp_socket create_stream_socket_perms;
-	allow $1_dbusd_t self:netlink_selinux_socket create_socket_perms;
-
-	# For connecting to the bus
 	allow $3 $1_dbusd_t:unix_stream_socket connectto;
-
-	# SE-DBus specific permissions
 	allow $3 $1_dbusd_t:dbus { send_msg acquire_svc };
-	allow $3 system_dbusd_t:dbus { send_msg acquire_svc };
 
-	allow $1_dbusd_t dbusd_etc_t:dir list_dir_perms;
-	read_files_pattern($1_dbusd_t, dbusd_etc_t, dbusd_etc_t)
-	read_lnk_files_pattern($1_dbusd_t, dbusd_etc_t, dbusd_etc_t)
-
-	manage_dirs_pattern($1_dbusd_t, session_dbusd_tmp_t, session_dbusd_tmp_t)
-	manage_files_pattern($1_dbusd_t, session_dbusd_tmp_t, session_dbusd_tmp_t)
-	files_tmp_filetrans($1_dbusd_t, session_dbusd_tmp_t, { file dir })
+	allow $3 system_dbusd_t:dbus { send_msg acquire_svc };
 
 	domtrans_pattern($3, dbusd_exec_t, $1_dbusd_t)
-	allow $3 $1_dbusd_t:process { signull sigkill signal };
 
-	# cjp: this seems very broken
-	corecmd_bin_domtrans($1_dbusd_t, $3)
-	allow $1_dbusd_t $3:process sigkill;
-	allow $3 $1_dbusd_t:fd use;
-	allow $3 $1_dbusd_t:fifo_file rw_fifo_file_perms;
-	allow $3 $1_dbusd_t:process sigchld;
-
-	kernel_read_system_state($1_dbusd_t)
-	kernel_read_kernel_sysctls($1_dbusd_t)
-
-	corecmd_list_bin($1_dbusd_t)
-	corecmd_read_bin_symlinks($1_dbusd_t)
-	corecmd_read_bin_files($1_dbusd_t)
-	corecmd_read_bin_pipes($1_dbusd_t)
-	corecmd_read_bin_sockets($1_dbusd_t)
-
-	corenet_all_recvfrom_unlabeled($1_dbusd_t)
-	corenet_all_recvfrom_netlabel($1_dbusd_t)
-	corenet_tcp_sendrecv_generic_if($1_dbusd_t)
-	corenet_tcp_sendrecv_generic_node($1_dbusd_t)
-	corenet_tcp_sendrecv_all_ports($1_dbusd_t)
-	corenet_tcp_bind_generic_node($1_dbusd_t)
-	corenet_tcp_bind_reserved_port($1_dbusd_t)
-
-	dev_read_urand($1_dbusd_t)
-
- 	domain_use_interactive_fds($1_dbusd_t)
-	domain_read_all_domains_state($1_dbusd_t)
-
-	files_read_etc_files($1_dbusd_t)
-	files_list_home($1_dbusd_t)
-	files_read_usr_files($1_dbusd_t)
-	files_dontaudit_search_var($1_dbusd_t)
-
-	fs_getattr_romfs($1_dbusd_t)
-	fs_getattr_xattr_fs($1_dbusd_t)
-	fs_list_inotifyfs($1_dbusd_t)
-	fs_dontaudit_list_nfs($1_dbusd_t)
-
-	selinux_get_fs_mount($1_dbusd_t)
-	selinux_validate_context($1_dbusd_t)
-	selinux_compute_access_vector($1_dbusd_t)
-	selinux_compute_create_context($1_dbusd_t)
-	selinux_compute_relabel_context($1_dbusd_t)
-	selinux_compute_user_contexts($1_dbusd_t)
-
-	auth_read_pam_console_data($1_dbusd_t)
-	auth_use_nsswitch($1_dbusd_t)
+	ps_process_pattern($3, $1_dbusd_t)
+	allow $3 $1_dbusd_t:process { ptrace signal_perms };
 
-	logging_send_audit_msgs($1_dbusd_t)
-	logging_send_syslog_msg($1_dbusd_t)
-
-	miscfiles_read_localization($1_dbusd_t)
-
-	seutil_read_config($1_dbusd_t)
-	seutil_read_default_contexts($1_dbusd_t)
-
-	term_use_all_terms($1_dbusd_t)
+	allow $1_dbusd_t $3:process sigkill;
 
-	userdom_read_user_home_content_files($1_dbusd_t)
+	corecmd_bin_domtrans($1_dbusd_t, $3)
+	corecmd_shell_domtrans($1_dbusd_t, $3)
 
+	auth_use_nsswitch($1_dbusd_t)
 
-	ifdef(`hide_broken_symptoms', `
+	ifdef(`hide_broken_symptoms',`
 		dontaudit $3 $1_dbusd_t:netlink_selinux_socket { read write };
 	')
 
 	optional_policy(`
-		hal_dbus_chat($1_dbusd_t)
-	')
-
-	optional_policy(`
 		xdg_read_generic_data_home_files($1_dbusd_t)
 	')
-
-	optional_policy(`
-		xserver_use_xdm_fds($1_dbusd_t)
-		xserver_rw_xdm_pipes($1_dbusd_t)
-	')
 ')
 
 #######################################
 ## <summary>
 ##	Template for creating connections to
-##	the system DBUS.
+##	the system bus.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -183,19 +101,16 @@
 #
 interface(`dbus_system_bus_client',`
 	gen_require(`
-		type system_dbusd_t, system_dbusd_t;
-		type system_dbusd_var_run_t, system_dbusd_var_lib_t;
+		type system_dbusd_t, system_dbusd_var_run_t, system_dbusd_var_lib_t;
 		class dbus send_msg;
 	')
 
-	# SE-DBus specific permissions
 	allow $1 { system_dbusd_t self }:dbus send_msg;
 	allow system_dbusd_t $1:dbus send_msg;
 
 	read_files_pattern($1, system_dbusd_var_lib_t, system_dbusd_var_lib_t)
 	files_search_var_lib($1)
 
-	# For connecting to the bus
 	files_search_pids($1)
 	stream_connect_pattern($1, system_dbusd_var_run_t, system_dbusd_var_run_t, system_dbusd_t)
 	dbus_read_config($1)
@@ -203,9 +118,61 @@
 
 #######################################
 ## <summary>
-##	Template for creating connections to
-##	a user DBUS.
+##	Acquire service on specified
+##	DBUS session bus.
 ## </summary>
+## <param name="role_prefix">
+##	<summary>
+##	The prefix of the user role (e.g., user
+##	is the prefix for user_r).
+##	</summary>
+## </param>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dbus_connect_session_bus',`
+	gen_require(`
+		type $1_dbusd_t;
+		class dbus acquire_svc;
+	')
+
+	allow $2 $1_dbusd_t:dbus acquire_svc;
+')
+
+#######################################
+## <summary>
+##	Acquire service on all DBUS
+##	session busses.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dbus_connect_all_session_bus',`
+	gen_require(`
+		attribute session_bus_type;
+		class dbus acquire_svc;
+	')
+
+	allow $1 session_bus_type:dbus acquire_svc;
+')
+
+#######################################
+## <summary>
+##	Creating connections to specified
+##	DBUS session bus.
+## </summary>
+## <param name="role_prefix">
+##	<summary>
+##	The prefix of the user role (e.g., user
+##	is the prefix for user_r).
+##	</summary>
+## </param>
 ## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
@@ -214,23 +181,48 @@
 #
 interface(`dbus_session_bus_client',`
 	gen_require(`
+		type $1_dbusd_t;
+		class dbus send_msg;
+	')
+
+	allow $2 { $1_dbusd_t self }:dbus send_msg;
+	allow $2 $1_dbusd_t:unix_stream_socket connectto;
+	allow $2 $1_dbusd_t:fd use;
+')
+
+#######################################
+## <summary>
+##	Creating connections to all
+##	DBUS session busses.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`dbus_all_session_bus_client',`
+	gen_require(`
 		attribute session_bus_type;
 		class dbus send_msg;
 	')
 
-	# SE-DBus specific permissions
 	allow $1 { session_bus_type self }:dbus send_msg;
-
-	# For connecting to the bus
 	allow $1 session_bus_type:unix_stream_socket connectto;
-
-	dontaudit $1 session_bus_type:fd use;
+	allow $1 session_bus_type:fd use;
 ')
 
-########################################
+#######################################
 ## <summary>
-##	Send a message the session DBUS.
+##	Send messages to specified
+##	DBUS session bus.
 ## </summary>
+## <param name="role_prefix">
+##	<summary>
+##	The prefix of the user role (e.g., user
+##	is the prefix for user_r).
+##	</summary>
+## </param>
 ## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
@@ -239,16 +231,16 @@
 #
 interface(`dbus_send_session_bus',`
 	gen_require(`
-		attribute session_bus_type;
+		type $1_dbusd_t;
 		class dbus send_msg;
 	')
 
-	allow $1 session_bus_type:dbus send_msg;
+	allow $2 $1_dbusd_t:dbus send_msg;
 ')
 
 ########################################
 ## <summary>
-##	Read dbus configuration.
+##	Read dbus configuration content.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -307,29 +299,15 @@
 
 ########################################
 ## <summary>
-##	Connect to the system DBUS
-##	for service (acquire_svc).
+##	Allow a application domain to be
+##	started by the specified session bus.
 ## </summary>
-## <param name="domain">
+## <param name="role_prefix">
 ##	<summary>
-##	Domain allowed access.
+##	The prefix of the user role (e.g., user
+##	is the prefix for user_r).
 ##	</summary>
 ## </param>
-#
-interface(`dbus_connect_session_bus',`
-	gen_require(`
-		attribute session_bus_type;
-		class dbus acquire_svc;
-	')
-
-	allow $1 session_bus_type:dbus acquire_svc;
-')
-
-########################################
-## <summary>
-##	Allow a application domain to be started
-##	by the session dbus.
-## </summary>
 ## <param name="domain">
 ##	<summary>
 ##	Type to be used as a domain.
@@ -344,19 +322,18 @@
 #
 interface(`dbus_session_domain',`
 	gen_require(`
-		attribute session_bus_type;
+		type $1_dbusd_t;
 	')
 
-	domtrans_pattern(session_bus_type, $2, $1)
+	domtrans_pattern($1_dbusd_t, $2, $3)
 
-	dbus_session_bus_client($1)
-	dbus_connect_session_bus($1)
+	dbus_session_bus_client($1, $2)
+	dbus_connect_session_bus($1, $2)
 ')
 
 ########################################
 ## <summary>
-##	Connect to the system DBUS
-##	for service (acquire_svc).
+##	Acquire service on the DBUS system bus.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -375,7 +352,7 @@
 
 ########################################
 ## <summary>
-##	Send a message on the system DBUS.
+##	Send messages to the DBUS system bus.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -394,7 +371,51 @@
 
 ########################################
 ## <summary>
-##	Allow unconfined access to the system DBUS.
+##	Create resources in /run or /var/run with the system_dbusd_var_run_t
+##	label. This method is deprecated in favor of the init_daemon_run_dir
+##	call.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+## <param name="class">
+##	<summary>
+##	Classes supported for the created resources
+##	</summary>
+## </param>
+## <param name="filename" optional="true">
+##	<summary>
+##	Optional file name used for the resource
+##	</summary>
+## </param>
+#
+interface(`dbus_generic_pid_filetrans_system_dbusd_var_run',`
+	refpolicywarn(`$0($*) has been deprecated.')
+')
+
+########################################
+## <summary>
+##	Create directories with the system_dbusd_var_run_t label
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+#
+interface(`dbus_create_system_dbusd_var_run_dirs',`
+	gen_require(`
+		type system_dbusd_var_run_t;
+	')
+
+	create_dirs_pattern($1, system_dbusd_var_run_t, system_dbusd_var_run_t)
+')
+
+########################################
+## <summary>
+##	Unconfined access to DBUS system bus.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -413,8 +434,8 @@
 
 ########################################
 ## <summary>
-##	Create a domain for processes
-##	which can be started by the system dbus
+##	Create a domain for processes which
+##	can be started by the DBUS system bus.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -454,7 +475,8 @@
 
 ########################################
 ## <summary>
-##	Use and inherit system DBUS file descriptors.
+##	Use and inherit DBUS system bus
+##	file descriptors.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -472,7 +494,8 @@
 
 ########################################
 ## <summary>
-##	Dontaudit Read, and write system dbus TCP sockets.
+##	Do not audit attempts to read and
+##	write DBUS system bus TCP sockets.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -485,13 +508,12 @@
 		type system_dbusd_t;
 	')
 
-	allow $1 system_dbusd_t:tcp_socket { read write };
-	allow $1 system_dbusd_t:fd use;
+	dontaudit $1 system_dbusd_t:tcp_socket { read write };
 ')
 
 ########################################
 ## <summary>
-##	Allow unconfined access to the system DBUS.
+##	Unconfined access to DBUS.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dbus.te refpolicy/policy/modules/contrib/dbus.te
--- refpolicy/policy/modules/contrib/dbus.te	2012-09-28 19:56:54.176040257 +0200
+++ refpolicy/policy/modules/contrib/dbus.te	2012-09-27 20:03:30.748126498 +0200
@@ -1,4 +1,4 @@
-policy_module(dbus, 1.17.0)
+policy_module(dbus, 1.18.0)
 
 gen_require(`
 	class dbus all_dbus_perms;
@@ -6,7 +6,7 @@
 
 ##############################
 #
-# Delcarations
+# Declarations
 #
 
 attribute dbusd_unconfined;
@@ -35,6 +35,7 @@
 
 type system_dbusd_var_run_t;
 files_pid_file(system_dbusd_var_run_t)
+init_daemon_run_dir(system_dbusd_var_run_t, "dbus")
 
 ifdef(`enable_mcs',`
 	init_ranged_system_domain(system_dbusd_t, dbusd_exec_t, s0 - mcs_systemhigh)
@@ -44,45 +45,53 @@
 	init_ranged_system_domain(system_dbusd_t, dbusd_exec_t, s0 - mls_systemhigh)
 ')
 
-##############################
+######################################
 #
-# System bus local policy
+# Local policy
 #
 
-# dac_override: /var/run/dbus is owned by messagebus on Debian
-# cjp: dac_override should probably go in a distro_debian
-allow system_dbusd_t self:capability { dac_override setgid setpcap setuid };
+allow system_dbusd_t self:capability { sys_resource dac_override setgid setpcap setuid };
 dontaudit system_dbusd_t self:capability sys_tty_config;
 allow system_dbusd_t self:process { getattr getsched signal_perms setpgid getcap setcap setrlimit };
 allow system_dbusd_t self:fifo_file rw_fifo_file_perms;
 allow system_dbusd_t self:dbus { send_msg acquire_svc };
-allow system_dbusd_t self:unix_stream_socket { connectto create_stream_socket_perms connectto };
-allow system_dbusd_t self:unix_dgram_socket create_socket_perms;
-# Receive notifications of policy reloads and enforcing status changes.
+allow system_dbusd_t self:unix_stream_socket { accept connectto listen };
 allow system_dbusd_t self:netlink_selinux_socket { create bind read };
 
-can_exec(system_dbusd_t, dbusd_exec_t)
-
 allow system_dbusd_t dbusd_etc_t:dir list_dir_perms;
 read_files_pattern(system_dbusd_t, dbusd_etc_t, dbusd_etc_t)
 read_lnk_files_pattern(system_dbusd_t, dbusd_etc_t, dbusd_etc_t)
 
 manage_dirs_pattern(system_dbusd_t, system_dbusd_tmp_t, system_dbusd_tmp_t)
 manage_files_pattern(system_dbusd_t, system_dbusd_tmp_t, system_dbusd_tmp_t)
-files_tmp_filetrans(system_dbusd_t, system_dbusd_tmp_t, { file dir })
+files_tmp_filetrans(system_dbusd_t, system_dbusd_tmp_t, { dir file })
 
 read_files_pattern(system_dbusd_t, system_dbusd_var_lib_t, system_dbusd_var_lib_t)
 
+manage_dirs_pattern(system_dbusd_t, system_dbusd_var_run_t, system_dbusd_var_run_t)
 manage_files_pattern(system_dbusd_t, system_dbusd_var_run_t, system_dbusd_var_run_t)
 manage_sock_files_pattern(system_dbusd_t, system_dbusd_var_run_t, system_dbusd_var_run_t)
-files_pid_filetrans(system_dbusd_t, system_dbusd_var_run_t, file)
+files_pid_filetrans(system_dbusd_t, system_dbusd_var_run_t, { dir file })
+
+can_exec(system_dbusd_t, dbusd_exec_t)
 
 kernel_read_system_state(system_dbusd_t)
 kernel_read_kernel_sysctls(system_dbusd_t)
 
+corecmd_list_bin(system_dbusd_t)
+corecmd_read_bin_pipes(system_dbusd_t)
+corecmd_read_bin_sockets(system_dbusd_t)
+corecmd_exec_shell(system_dbusd_t)
+
 dev_read_urand(system_dbusd_t)
 dev_read_sysfs(system_dbusd_t)
 
+domain_use_interactive_fds(system_dbusd_t)
+domain_read_all_domains_state(system_dbusd_t)
+
+files_list_home(system_dbusd_t)
+files_read_usr_files(system_dbusd_t)
+
 fs_getattr_all_fs(system_dbusd_t)
 fs_list_inotifyfs(system_dbusd_t)
 fs_search_auto_mountpoints(system_dbusd_t)
@@ -107,16 +116,9 @@
 auth_use_nsswitch(system_dbusd_t)
 auth_read_pam_console_data(system_dbusd_t)
 
-corecmd_list_bin(system_dbusd_t)
-corecmd_read_bin_pipes(system_dbusd_t)
-corecmd_read_bin_sockets(system_dbusd_t)
-
-domain_use_interactive_fds(system_dbusd_t)
-domain_read_all_domains_state(system_dbusd_t)
-
-files_read_etc_files(system_dbusd_t)
-files_list_home(system_dbusd_t)
-files_read_usr_files(system_dbusd_t)
+init_use_fds(system_dbusd_t)
+init_use_script_ptys(system_dbusd_t)
+init_domtrans_script(system_dbusd_t)
 
 init_use_fds(system_dbusd_t)
 init_use_script_ptys(system_dbusd_t)
@@ -140,6 +142,14 @@
 ')
 
 optional_policy(`
+	bluetooth_stream_connect(system_dbusd_t)
+')
+
+optional_policy(`
+	cpufreqselector_dbus_chat(system_dbusd_t)
+')
+
+optional_policy(`
 	policykit_dbus_chat(system_dbusd_t)
 	policykit_domtrans_auth(system_dbusd_t)
 	policykit_search_lib(system_dbusd_t)
@@ -155,7 +165,92 @@
 
 ########################################
 #
+# Common session bus local policy
+#
+
+allow session_bus_type self:capability2 block_suspend;
+dontaudit session_bus_type self:capability sys_resource;
+allow session_bus_type self:process { getattr sigkill signal };
+dontaudit session_bus_type self:process { ptrace setrlimit };
+allow session_bus_type self:file { getattr read write };
+allow session_bus_type self:fifo_file rw_fifo_file_perms;
+allow session_bus_type self:dbus { send_msg acquire_svc };
+allow session_bus_type self:unix_stream_socket { accept listen };
+allow session_bus_type self:tcp_socket { accept listen };
+allow session_bus_type self:netlink_selinux_socket create_socket_perms;
+
+allow session_bus_type dbusd_etc_t:dir list_dir_perms;
+read_files_pattern(session_bus_type, dbusd_etc_t, dbusd_etc_t)
+read_lnk_files_pattern(session_bus_type, dbusd_etc_t, dbusd_etc_t)
+
+manage_dirs_pattern(session_bus_type, session_dbusd_tmp_t, session_dbusd_tmp_t)
+manage_files_pattern(session_bus_type, session_dbusd_tmp_t, session_dbusd_tmp_t)
+files_tmp_filetrans(session_bus_type, session_dbusd_tmp_t, { dir file })
+
+kernel_read_system_state(session_bus_type)
+kernel_read_kernel_sysctls(session_bus_type)
+
+corecmd_list_bin(session_bus_type)
+corecmd_read_bin_symlinks(session_bus_type)
+corecmd_read_bin_files(session_bus_type)
+corecmd_read_bin_pipes(session_bus_type)
+corecmd_read_bin_sockets(session_bus_type)
+
+corenet_all_recvfrom_unlabeled(session_bus_type)
+corenet_all_recvfrom_netlabel(session_bus_type)
+corenet_tcp_sendrecv_generic_if(session_bus_type)
+corenet_tcp_sendrecv_generic_node(session_bus_type)
+corenet_tcp_sendrecv_all_ports(session_bus_type)
+corenet_tcp_bind_generic_node(session_bus_type)
+
+corenet_sendrecv_all_server_packets(session_bus_type)
+corenet_tcp_bind_reserved_port(session_bus_type)
+
+dev_read_urand(session_bus_type)
+
+domain_read_all_domains_state(session_bus_type)
+domain_use_interactive_fds(session_bus_type)
+
+files_list_home(session_bus_type)
+files_read_usr_files(session_bus_type)
+files_dontaudit_search_var(session_bus_type)
+
+fs_getattr_romfs(session_bus_type)
+fs_getattr_xattr_fs(session_bus_type)
+fs_list_inotifyfs(session_bus_type)
+fs_dontaudit_list_nfs(session_bus_type)
+
+selinux_get_fs_mount(session_bus_type)
+selinux_validate_context(session_bus_type)
+selinux_compute_access_vector(session_bus_type)
+selinux_compute_create_context(session_bus_type)
+selinux_compute_relabel_context(session_bus_type)
+selinux_compute_user_contexts(session_bus_type)
+
+auth_read_pam_console_data(session_bus_type)
+
+logging_send_audit_msgs(session_bus_type)
+logging_send_syslog_msg(session_bus_type)
+
+miscfiles_read_localization(session_bus_type)
+
+seutil_read_config(session_bus_type)
+seutil_read_default_contexts(session_bus_type)
+
+term_use_all_terms(session_bus_type)
+
+optional_policy(`
+	hal_dbus_chat(session_bus_type)
+')
+
+optional_policy(`
+	xserver_use_xdm_fds(session_bus_type)
+	xserver_rw_xdm_pipes(session_bus_type)
+')
+
+########################################
+#
 # Unconfined access to this module
 #
 
-allow dbusd_unconfined session_bus_type:dbus all_dbus_perms;
+allow dbusd_unconfined { system_dbusd_t session_bus_type }:dbus all_dbus_perms;
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dcc.fc refpolicy/policy/modules/contrib/dcc.fc
--- refpolicy/policy/modules/contrib/dcc.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dcc.fc	2012-09-27 20:03:30.748126498 +0200
@@ -1,30 +1,26 @@
-/etc/dcc(/.*)?				gen_context(system_u:object_r:dcc_var_t,s0)
-/etc/dcc/dccifd			-s	gen_context(system_u:object_r:dccifd_var_run_t,s0)
-/etc/dcc/map			--	gen_context(system_u:object_r:dcc_client_map_t,s0)
+/etc/dcc(/.*)?	gen_context(system_u:object_r:dcc_var_t,s0)
+/etc/dcc/dccifd	-s	gen_context(system_u:object_r:dccifd_var_run_t,s0)
+/etc/dcc/map	--	gen_context(system_u:object_r:dcc_client_map_t,s0)
 
-/usr/bin/cdcc			--	gen_context(system_u:object_r:cdcc_exec_t,s0)
-/usr/bin/dccproc		--	gen_context(system_u:object_r:dcc_client_exec_t,s0)
+/usr/bin/cdcc	--	gen_context(system_u:object_r:cdcc_exec_t,s0)
+/usr/bin/dccproc	--	gen_context(system_u:object_r:dcc_client_exec_t,s0)
 
 /usr/libexec/dcc/dbclean	--	gen_context(system_u:object_r:dcc_dbclean_exec_t,s0)
-/usr/libexec/dcc/dccd		--	gen_context(system_u:object_r:dccd_exec_t,s0)
-/usr/libexec/dcc/dccifd		--	gen_context(system_u:object_r:dccifd_exec_t,s0)
-/usr/libexec/dcc/dccm		--	gen_context(system_u:object_r:dccm_exec_t,s0)
-
-ifdef(`distro_debian',`
-/usr/sbin/dbclean		--	gen_context(system_u:object_r:dcc_dbclean_exec_t,s0)
-/usr/sbin/dccd			--	gen_context(system_u:object_r:dccd_exec_t,s0)
-/usr/sbin/dccifd		--	gen_context(system_u:object_r:dccifd_exec_t,s0)
-/usr/sbin/dccm			--	gen_context(system_u:object_r:dccm_exec_t,s0)
-')
-
-/var/lib/dcc(/.*)?			gen_context(system_u:object_r:dcc_var_t,s0)
-/var/lib/dcc/map		--	gen_context(system_u:object_r:dcc_client_map_t,s0)
-
-/var/run/dcc(/.*)?			gen_context(system_u:object_r:dcc_var_run_t,s0)
-/var/run/dcc/map		--	gen_context(system_u:object_r:dcc_client_map_t,s0)
-/var/run/dcc/dccifd		-s	gen_context(system_u:object_r:dccifd_var_run_t,s0)
-
-ifdef(`distro_redhat',`
-/var/dcc(/.*)?				gen_context(system_u:object_r:dcc_var_t,s0)
-/var/dcc/map			--	gen_context(system_u:object_r:dcc_client_map_t,s0)
-')
+/usr/libexec/dcc/dccd	--	gen_context(system_u:object_r:dccd_exec_t,s0)
+/usr/libexec/dcc/dccifd	--	gen_context(system_u:object_r:dccifd_exec_t,s0)
+/usr/libexec/dcc/dccm	--	gen_context(system_u:object_r:dccm_exec_t,s0)
+
+/usr/sbin/dbclean	--	gen_context(system_u:object_r:dcc_dbclean_exec_t,s0)
+/usr/sbin/dccd	--	gen_context(system_u:object_r:dccd_exec_t,s0)
+/usr/sbin/dccifd	--	gen_context(system_u:object_r:dccifd_exec_t,s0)
+/usr/sbin/dccm	--	gen_context(system_u:object_r:dccm_exec_t,s0)
+
+/var/dcc(/.*)?	gen_context(system_u:object_r:dcc_var_t,s0)
+/var/dcc/map	--	gen_context(system_u:object_r:dcc_client_map_t,s0)
+
+/var/lib/dcc(/.*)?	gen_context(system_u:object_r:dcc_var_t,s0)
+/var/lib/dcc/map	--	gen_context(system_u:object_r:dcc_client_map_t,s0)
+
+/var/run/dcc(/.*)?	gen_context(system_u:object_r:dcc_var_run_t,s0)
+/var/run/dcc/map	--	gen_context(system_u:object_r:dcc_client_map_t,s0)
+/var/run/dcc/dccifd	-s	gen_context(system_u:object_r:dccifd_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dcc.if refpolicy/policy/modules/contrib/dcc.if
--- refpolicy/policy/modules/contrib/dcc.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dcc.if	2012-09-27 20:03:30.749126498 +0200
@@ -1,4 +1,4 @@
-## <summary>Distributed checksum clearinghouse spam filtering</summary>
+## <summary>Distributed checksum clearinghouse spam filtering.</summary>
 
 ########################################
 ## <summary>
@@ -22,7 +22,8 @@
 ########################################
 ## <summary>
 ##	Execute cdcc in the cdcc domain, and
-##	allow the specified role the cdcc domain.
+##	allow the specified role the
+##	cdcc domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -38,16 +39,17 @@
 #
 interface(`dcc_run_cdcc',`
 	gen_require(`
-		type cdcc_t;
+		attribute_role cdcc_roles;
 	')
 
 	dcc_domtrans_cdcc($1)
-	role $2 types cdcc_t;
+	roleattribute $2 cdcc_roles;
 ')
 
 ########################################
 ## <summary>
-##	Execute dcc_client in the dcc_client domain.
+##	Execute dcc client in the dcc
+##	client domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -66,7 +68,7 @@
 
 ########################################
 ## <summary>
-##	Send a signal to the dcc_client.
+##	Send generic signals to dcc client.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -84,8 +86,9 @@
 
 ########################################
 ## <summary>
-##	Execute dcc_client in the dcc_client domain, and
-##	allow the specified role the dcc_client domain.
+##	Execute dcc client in the dcc
+##	client domain, and allow the
+##	specified role the dcc client domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -101,16 +104,16 @@
 #
 interface(`dcc_run_client',`
 	gen_require(`
-		type dcc_client_t;
+		attribute_role dcc_client_roles;
 	')
 
 	dcc_domtrans_client($1)
-	role $2 types dcc_client_t;
+	roleattribute $2 dcc_client_roles;
 ')
 
 ########################################
 ## <summary>
-##	Execute dbclean in the dcc_dbclean domain.
+##	Execute dbclean in the dcc dbclean domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -129,8 +132,9 @@
 
 ########################################
 ## <summary>
-##	Execute dbclean in the dcc_dbclean domain, and
-##	allow the specified role the dcc_dbclean domain.
+##	Execute dbclean in the dcc dbclean
+##	domain, and allow the specified
+##	role the dcc dbclean domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -146,16 +150,17 @@
 #
 interface(`dcc_run_dbclean',`
 	gen_require(`
-		type dcc_dbclean_t;
+		attribute_role dcc_dbclean_roles;
 	')
 
 	dcc_domtrans_dbclean($1)
-	role $2 types dcc_dbclean_t;
+	roleattribute $2 dcc_dbclean_roles;
 ')
 
 ########################################
 ## <summary>
-##	Connect to dccifd over a unix domain stream socket.
+##	Connect to dccifd over a unix
+##	domain stream socket.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dcc.te refpolicy/policy/modules/contrib/dcc.te
--- refpolicy/policy/modules/contrib/dcc.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dcc.te	2012-09-27 20:03:30.749126498 +0200
@@ -1,14 +1,23 @@
-policy_module(dcc, 1.11.0)
+policy_module(dcc, 1.11.1)
 
 ########################################
 #
 # Declarations
 #
 
+attribute_role cdcc_roles;
+roleattribute system_r cdcc_roles;
+
+attribute_role dcc_client_roles;
+roleattribute system_r dcc_client_roles;
+
+attribute_role dcc_dbclean_roles;
+roleattribute system_r dcc_dbclean_roles;
+
 type cdcc_t;
 type cdcc_exec_t;
 application_domain(cdcc_t, cdcc_exec_t)
-role system_r types cdcc_t;
+role cdcc_roles types cdcc_t;
 
 type cdcc_tmp_t;
 files_tmp_file(cdcc_tmp_t)
@@ -16,7 +25,7 @@
 type dcc_client_t;
 type dcc_client_exec_t;
 application_domain(dcc_client_t, dcc_client_exec_t)
-role system_r types dcc_client_t;
+role dcc_client_roles types dcc_client_t;
 
 type dcc_client_map_t;
 files_type(dcc_client_map_t)
@@ -27,7 +36,7 @@
 type dcc_dbclean_t;
 type dcc_dbclean_exec_t;
 application_domain(dcc_dbclean_t, dcc_dbclean_exec_t)
-role system_r types dcc_dbclean_t;
+role dcc_dbclean_roles types dcc_dbclean_t;
 
 type dcc_dbclean_tmp_t;
 files_tmp_file(dcc_dbclean_tmp_t)
@@ -68,21 +77,12 @@
 type dccm_var_run_t;
 files_pid_file(dccm_var_run_t)
 
-# NOTE: DCC has writeable files in /etc/dcc that should probably be in
-# /var/lib/dcc.  For now this policy supports both directories being
-# writable.
-
-# cjp: dccifd and dccm should be merged, as
-# they have the same rules.
-
 ########################################
 #
-# dcc daemon controller local policy
+# Daemon controller local policy
 #
 
 allow cdcc_t self:capability { setuid setgid };
-allow cdcc_t self:unix_dgram_socket create_socket_perms;
-allow cdcc_t self:udp_socket create_socket_perms;
 
 manage_dirs_pattern(cdcc_t, cdcc_tmp_t, cdcc_tmp_t)
 manage_files_pattern(cdcc_t, cdcc_tmp_t, cdcc_tmp_t)
@@ -90,18 +90,10 @@
 
 allow cdcc_t dcc_client_map_t:file rw_file_perms;
 
-# Access files in /var/dcc. The map file can be updated
 allow cdcc_t dcc_var_t:dir list_dir_perms;
 read_files_pattern(cdcc_t, dcc_var_t, dcc_var_t)
 read_lnk_files_pattern(cdcc_t, dcc_var_t, dcc_var_t)
 
-corenet_all_recvfrom_unlabeled(cdcc_t)
-corenet_all_recvfrom_netlabel(cdcc_t)
-corenet_udp_sendrecv_generic_if(cdcc_t)
-corenet_udp_sendrecv_generic_node(cdcc_t)
-corenet_udp_sendrecv_all_ports(cdcc_t)
-
-files_read_etc_files(cdcc_t)
 files_read_etc_runtime_files(cdcc_t)
 
 auth_use_nsswitch(cdcc_t)
@@ -114,12 +106,10 @@
 
 ########################################
 #
-# dcc procmail interface local policy
+# Procmail interface local policy
 #
 
 allow dcc_client_t self:capability { setuid setgid };
-allow dcc_client_t self:unix_dgram_socket create_socket_perms;
-allow dcc_client_t self:udp_socket create_socket_perms;
 
 allow dcc_client_t dcc_client_map_t:file rw_file_perms;
 
@@ -127,21 +117,12 @@
 manage_files_pattern(dcc_client_t, dcc_client_tmp_t, dcc_client_tmp_t)
 files_tmp_filetrans(dcc_client_t, dcc_client_tmp_t, { file dir })
 
-# Access files in /var/dcc. The map file can be updated
 allow dcc_client_t dcc_var_t:dir list_dir_perms;
 manage_files_pattern(dcc_client_t, dcc_var_t, dcc_var_t)
 read_lnk_files_pattern(dcc_client_t, dcc_var_t, dcc_var_t)
 
 kernel_read_system_state(dcc_client_t)
 
-corenet_all_recvfrom_unlabeled(dcc_client_t)
-corenet_all_recvfrom_netlabel(dcc_client_t)
-corenet_udp_sendrecv_generic_if(dcc_client_t)
-corenet_udp_sendrecv_generic_node(dcc_client_t)
-corenet_udp_sendrecv_all_ports(dcc_client_t)
-corenet_udp_bind_generic_node(dcc_client_t)
-
-files_read_etc_files(dcc_client_t)
 files_read_etc_runtime_files(dcc_client_t)
 
 fs_getattr_all_fs(dcc_client_t)
@@ -164,12 +145,9 @@
 
 ########################################
 #
-# Database cleanup tool local policy
+# Database cleanup local policy
 #
 
-allow dcc_dbclean_t self:unix_dgram_socket create_socket_perms;
-allow dcc_dbclean_t self:udp_socket create_socket_perms;
-
 allow dcc_dbclean_t dcc_client_map_t:file rw_file_perms;
 
 manage_dirs_pattern(dcc_dbclean_t, dcc_dbclean_tmp_t, dcc_dbclean_tmp_t)
@@ -182,13 +160,6 @@
 
 kernel_read_system_state(dcc_dbclean_t)
 
-corenet_all_recvfrom_unlabeled(dcc_dbclean_t)
-corenet_all_recvfrom_netlabel(dcc_dbclean_t)
-corenet_udp_sendrecv_generic_if(dcc_dbclean_t)
-corenet_udp_sendrecv_generic_node(dcc_dbclean_t)
-corenet_udp_sendrecv_all_ports(dcc_dbclean_t)
-
-files_read_etc_files(dcc_dbclean_t)
 files_read_etc_runtime_files(dcc_dbclean_t)
 
 auth_use_nsswitch(dcc_dbclean_t)
@@ -201,28 +172,21 @@
 
 ########################################
 #
-# Server daemon local policy
+# Server local policy
 #
 
 allow dccd_t self:capability net_admin;
 dontaudit dccd_t self:capability sys_tty_config;
 allow dccd_t self:process signal_perms;
-allow dccd_t self:unix_stream_socket create_socket_perms;
-allow dccd_t self:netlink_route_socket { bind create getattr nlmsg_read read write };
-allow dccd_t self:udp_socket create_socket_perms;
 
 allow dccd_t dcc_client_map_t:file rw_file_perms;
 
-# Access files in /var/dcc. The map file can be updated
 allow dccd_t dcc_var_t:dir list_dir_perms;
 read_files_pattern(dccd_t, dcc_var_t, dcc_var_t)
 read_lnk_files_pattern(dccd_t, dcc_var_t, dcc_var_t)
 
-# Runs the dbclean program
 domtrans_pattern(dccd_t, dcc_dbclean_exec_t, dcc_dbclean_t)
-corecmd_search_bin(dccd_t)
 
-# Updating dcc_db, flod, ...
 manage_dirs_pattern(dccd_t, dcc_var_t, dcc_var_t)
 manage_files_pattern(dccd_t, dcc_var_t, dcc_var_t)
 manage_lnk_files_pattern(dccd_t, dcc_var_t, dcc_var_t)
@@ -244,14 +208,16 @@
 corenet_udp_sendrecv_generic_node(dccd_t)
 corenet_udp_sendrecv_all_ports(dccd_t)
 corenet_udp_bind_generic_node(dccd_t)
+
 corenet_udp_bind_dcc_port(dccd_t)
 corenet_sendrecv_dcc_server_packets(dccd_t)
 
+corecmd_search_bin(dccd_t)
+
 dev_read_sysfs(dccd_t)
 
 domain_use_interactive_fds(dccd_t)
 
-files_read_etc_files(dccd_t)
 files_read_etc_runtime_files(dccd_t)
 
 fs_getattr_all_fs(dccd_t)
@@ -281,13 +247,10 @@
 
 dontaudit dccifd_t self:capability sys_tty_config;
 allow dccifd_t self:process signal_perms;
-allow dccifd_t self:unix_stream_socket create_stream_socket_perms;
-allow dccifd_t self:unix_dgram_socket create_socket_perms;
-allow dccifd_t self:udp_socket create_socket_perms;
+allow dccifd_t self:unix_stream_socket { accept listen };
 
 allow dccifd_t dcc_client_map_t:file rw_file_perms;
 
-# Updating dcc_db, flod, ...
 manage_dirs_pattern(dccifd_t, dcc_var_t, dcc_var_t)
 manage_files_pattern(dccifd_t, dcc_var_t, dcc_var_t)
 manage_lnk_files_pattern(dccifd_t, dcc_var_t, dcc_var_t)
@@ -306,17 +269,10 @@
 kernel_read_system_state(dccifd_t)
 kernel_read_kernel_sysctls(dccifd_t)
 
-corenet_all_recvfrom_unlabeled(dccifd_t)
-corenet_all_recvfrom_netlabel(dccifd_t)
-corenet_udp_sendrecv_generic_if(dccifd_t)
-corenet_udp_sendrecv_generic_node(dccifd_t)
-corenet_udp_sendrecv_all_ports(dccifd_t)
-
 dev_read_sysfs(dccifd_t)
 
 domain_use_interactive_fds(dccifd_t)
 
-files_read_etc_files(dccifd_t)
 files_read_etc_runtime_files(dccifd_t)
 
 fs_getattr_all_fs(dccifd_t)
@@ -341,14 +297,12 @@
 
 ########################################
 #
-# sendmail milter client local policy
+# Sendmail milter client local policy
 #
 
 dontaudit dccm_t self:capability sys_tty_config;
 allow dccm_t self:process signal_perms;
-allow dccm_t self:unix_stream_socket create_stream_socket_perms;
-allow dccm_t self:unix_dgram_socket create_socket_perms;
-allow dccm_t self:udp_socket create_socket_perms;
+allow dccm_t self:unix_stream_socket { accept listen };
 
 allow dccm_t dcc_client_map_t:file rw_file_perms;
 
@@ -370,17 +324,10 @@
 kernel_read_system_state(dccm_t)
 kernel_read_kernel_sysctls(dccm_t)
 
-corenet_all_recvfrom_unlabeled(dccm_t)
-corenet_all_recvfrom_netlabel(dccm_t)
-corenet_udp_sendrecv_generic_if(dccm_t)
-corenet_udp_sendrecv_generic_node(dccm_t)
-corenet_udp_sendrecv_all_ports(dccm_t)
-
 dev_read_sysfs(dccm_t)
 
 domain_use_interactive_fds(dccm_t)
 
-files_read_etc_files(dccm_t)
 files_read_etc_runtime_files(dccm_t)
 
 fs_getattr_all_fs(dccm_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ddclient.fc refpolicy/policy/modules/contrib/ddclient.fc
--- refpolicy/policy/modules/contrib/ddclient.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/ddclient.fc	2012-09-28 19:39:36.193016281 +0200
@@ -1,12 +1,16 @@
 /etc/ddclient\.conf	--	gen_context(system_u:object_r:ddclient_etc_t,s0)
 /etc/ddtcd\.conf	--	gen_context(system_u:object_r:ddclient_etc_t,s0)
-/etc/rc\.d/init\.d/ddclient --	gen_context(system_u:object_r:ddclient_initrc_exec_t,s0)
+
+/etc/rc\.d/init\.d/ddclient	--	gen_context(system_u:object_r:ddclient_initrc_exec_t,s0)
 
 /usr/sbin/ddclient	--	gen_context(system_u:object_r:ddclient_exec_t,s0)
-/usr/sbin/ddtcd		--	gen_context(system_u:object_r:ddclient_exec_t,s0)
+/usr/sbin/ddtcd	--	gen_context(system_u:object_r:ddclient_exec_t,s0)
 
 /var/cache/ddclient(/.*)?	gen_context(system_u:object_r:ddclient_var_t,s0)
+
 /var/lib/ddt-client(/.*)?	gen_context(system_u:object_r:ddclient_var_lib_t,s0)
+
 /var/log/ddtcd\.log.*	--	gen_context(system_u:object_r:ddclient_log_t,s0)
+
 /var/run/ddclient\.pid	--	gen_context(system_u:object_r:ddclient_var_run_t,s0)
 /var/run/ddtcd\.pid	--	gen_context(system_u:object_r:ddclient_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ddclient.if refpolicy/policy/modules/contrib/ddclient.if
--- refpolicy/policy/modules/contrib/ddclient.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/ddclient.if	2012-09-28 19:39:36.193016281 +0200
@@ -1,4 +1,4 @@
-## <summary>Update dynamic IP address at DynDNS.org</summary>
+## <summary>Update dynamic IP address at DynDNS.org.</summary>
 
 #######################################
 ## <summary>
@@ -21,7 +21,9 @@
 
 ########################################
 ## <summary>
-##	 Execute ddclient daemon on behalf of a user or staff type.
+##	Execute ddclient in the ddclient
+##	domain, and allow the specified
+##	role the ddclient domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -37,17 +39,17 @@
 #
 interface(`ddclient_run',`
 	gen_require(`
-		type ddclient_t;
+		attribute_role ddclient_roles;
 	')
 
 	ddclient_domtrans($1)
-	role $2 types ddclient_t;
+	roleattribute $2 ddclient_roles;
 ')
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an ddclient environment
+##	All of the rules required to
+##	administrate an ddclient environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -56,7 +58,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the ddclient domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -64,7 +66,7 @@
 interface(`ddclient_admin',`
 	gen_require(`
 		type ddclient_t, ddclient_etc_t, ddclient_log_t;
-		type ddclient_var_t, ddclient_var_lib_t;
+		type ddclient_var_t, ddclient_var_lib_t, ddclient_tmp_t;
 		type ddclient_var_run_t, ddclient_initrc_exec_t;
 	')
 
@@ -90,4 +92,7 @@
 
 	files_list_pids($1)
 	admin_pattern($1, ddclient_var_run_t)
+
+	files_list_tmp($1)
+	admin_pattern($1, ddclient_tmp_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ddclient.te refpolicy/policy/modules/contrib/ddclient.te
--- refpolicy/policy/modules/contrib/ddclient.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/ddclient.te	2012-09-28 19:39:36.204016278 +0200
@@ -1,13 +1,16 @@
-policy_module(ddclient, 1.9.0)
+policy_module(ddclient, 1.9.1)
 
 ########################################
 #
 # Declarations
 #
 
+attribute_role ddclient_roles;
+
 type ddclient_t;
 type ddclient_exec_t;
 init_daemon_domain(ddclient_t, ddclient_exec_t)
+role ddclient_roles types ddclient_t;
 
 type ddclient_etc_t;
 files_config_file(ddclient_etc_t)
@@ -18,6 +21,9 @@
 type ddclient_log_t;
 logging_log_file(ddclient_log_t)
 
+type ddclient_tmp_t;
+files_tmp_file(ddclient_tmp_t)
+
 type ddclient_var_t;
 files_type(ddclient_var_t)
 
@@ -37,31 +43,37 @@
 allow ddclient_t self:fifo_file rw_fifo_file_perms;
 allow ddclient_t self:tcp_socket create_socket_perms;
 allow ddclient_t self:udp_socket create_socket_perms;
+allow ddclient_t self:netlink_route_socket r_netlink_socket_perms;
 
-allow ddclient_t ddclient_etc_t:file read_file_perms;
+read_files_pattern(ddclient_t, ddclient_etc_t, ddclient_etc_t)
+setattr_files_pattern(ddclient_t, ddclient_etc_t, ddclient_etc_t)
 
-allow ddclient_t ddclient_log_t:file manage_file_perms;
+allow ddclient_t ddclient_log_t:file append_file_perms;
+allow ddclient_t ddclient_log_t:file create_file_perms;
+allow ddclient_t ddclient_log_t:file setattr_file_perms;
 logging_log_filetrans(ddclient_t, ddclient_log_t, file)
 
+manage_files_pattern(ddclient_t, ddclient_tmp_t, ddclient_tmp_t)
+files_tmp_filetrans(ddclient_t, ddclient_tmp_t, file)
+
 manage_dirs_pattern(ddclient_t, ddclient_var_t, ddclient_var_t)
 manage_files_pattern(ddclient_t, ddclient_var_t, ddclient_var_t)
 manage_lnk_files_pattern(ddclient_t, ddclient_var_t, ddclient_var_t)
 manage_fifo_files_pattern(ddclient_t, ddclient_var_t, ddclient_var_t)
 manage_sock_files_pattern(ddclient_t, ddclient_var_t, ddclient_var_t)
-files_var_filetrans(ddclient_t, ddclient_var_t, { file lnk_file sock_file fifo_file })
 
 manage_files_pattern(ddclient_t, ddclient_var_lib_t, ddclient_var_lib_t)
-files_var_lib_filetrans(ddclient_t, ddclient_var_lib_t, file)
 
 manage_files_pattern(ddclient_t, ddclient_var_run_t, ddclient_var_run_t)
 files_pid_filetrans(ddclient_t, ddclient_var_run_t, file)
 
-kernel_read_system_state(ddclient_t)
-kernel_read_network_state(ddclient_t)
-kernel_read_software_raid_state(ddclient_t)
 kernel_getattr_core_if(ddclient_t)
 kernel_getattr_message_if(ddclient_t)
 kernel_read_kernel_sysctls(ddclient_t)
+kernel_read_network_state(ddclient_t)
+kernel_read_software_raid_state(ddclient_t)
+kernel_read_system_state(ddclient_t)
+kernel_search_network_sysctl(ddclient_t)
 
 corecmd_exec_shell(ddclient_t)
 corecmd_exec_bin(ddclient_t)
@@ -74,8 +86,9 @@
 corenet_udp_sendrecv_generic_node(ddclient_t)
 corenet_tcp_sendrecv_all_ports(ddclient_t)
 corenet_udp_sendrecv_all_ports(ddclient_t)
-corenet_tcp_connect_all_ports(ddclient_t)
+
 corenet_sendrecv_all_client_packets(ddclient_t)
+corenet_tcp_connect_all_ports(ddclient_t)
 
 dev_read_sysfs(ddclient_t)
 dev_read_urand(ddclient_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ddcprobe.fc refpolicy/policy/modules/contrib/ddcprobe.fc
--- refpolicy/policy/modules/contrib/ddcprobe.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/ddcprobe.fc	2012-09-28 19:40:06.157016964 +0200
@@ -1,4 +1 @@
-#
-# /usr
-#
 /usr/sbin/ddcprobe	--	gen_context(system_u:object_r:ddcprobe_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ddcprobe.if refpolicy/policy/modules/contrib/ddcprobe.if
--- refpolicy/policy/modules/contrib/ddcprobe.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/ddcprobe.if	2012-09-28 19:40:06.170016965 +0200
@@ -1,4 +1,4 @@
-## <summary>ddcprobe retrieves monitor and graphics card information</summary>
+## <summary>ddcprobe retrieves monitor and graphics card information.</summary>
 
 ########################################
 ## <summary>
@@ -15,13 +15,15 @@
 		type ddcprobe_t, ddcprobe_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, ddcprobe_exec_t, ddcprobe_t)
 ')
 
 ########################################
 ## <summary>
-##	Execute ddcprobe in the ddcprobe domain, and
-##	allow the specified role the ddcprobe domain.
+##	Execute ddcprobe in the ddcprobe
+##	domain, and allow the specified
+##	role the ddcprobe domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -30,16 +32,16 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	Role to be authenticated for ddcprobe domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
 #
 interface(`ddcprobe_run',`
 	gen_require(`
-		type ddcprobe_t;
+		attribute_role ddcprobe_roles;
 	')
 
 	ddcprobe_domtrans($1)
-	role $2 types ddcprobe_t;
+	roleattribute $2 ddcprobe_roles;
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ddcprobe.te refpolicy/policy/modules/contrib/ddcprobe.te
--- refpolicy/policy/modules/contrib/ddcprobe.te	2012-09-28 19:56:54.091040255 +0200
+++ refpolicy/policy/modules/contrib/ddcprobe.te	2012-09-28 19:40:27.631017476 +0200
@@ -1,14 +1,17 @@
-policy_module(ddcprobe, 1.2.0)
+policy_module(ddcprobe, 1.2.1)
 
 ########################################
 #
 # Declarations
 #
 
+attribute_role ddcprobe_roles;
+roleattribute system_r ddcprobe_roles;
+
 type ddcprobe_t;
 type ddcprobe_exec_t;
 application_domain(ddcprobe_t, ddcprobe_exec_t)
-role system_r types ddcprobe_t;
+role ddcprobe_roles types ddcprobe_t;
 
 ########################################
 #
@@ -48,6 +51,5 @@
 userdom_use_all_users_fds(ddcprobe_t)
 
 optional_policy(`
-	#reh why? this does not seem even necessary to function properly
 	kudzu_getattr_exec_files(ddcprobe_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/denyhosts.fc refpolicy/policy/modules/contrib/denyhosts.fc
--- refpolicy/policy/modules/contrib/denyhosts.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/denyhosts.fc	2012-09-28 19:41:06.358018362 +0200
@@ -1,7 +1,9 @@
 /etc/rc\.d/init\.d/denyhosts	--	gen_context(system_u:object_r:denyhosts_initrc_exec_t,s0)
 
-/usr/bin/denyhosts\.py		--	gen_context(system_u:object_r:denyhosts_exec_t,s0)
+/usr/bin/denyhosts\.py	--	gen_context(system_u:object_r:denyhosts_exec_t,s0)
+
+/var/lib/denyhosts(/.*)?	gen_context(system_u:object_r:denyhosts_var_lib_t,s0)
 
-/var/lib/denyhosts(/.*)?		gen_context(system_u:object_r:denyhosts_var_lib_t,s0)
 /var/lock/subsys/denyhosts	--	gen_context(system_u:object_r:denyhosts_var_lock_t,s0)
-/var/log/denyhosts(/.*)?		gen_context(system_u:object_r:denyhosts_var_log_t,s0)
+
+/var/log/denyhosts(/.*)?	gen_context(system_u:object_r:denyhosts_var_log_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/denyhosts.if refpolicy/policy/modules/contrib/denyhosts.if
--- refpolicy/policy/modules/contrib/denyhosts.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/denyhosts.if	2012-09-28 19:41:06.359018362 +0200
@@ -1,12 +1,4 @@
-## <summary>DenyHosts SSH dictionary attack mitigation</summary>
-## <desc>
-##	<p>
-##	DenyHosts is a script intended to be run by Linux
-##	system administrators to help thwart SSH server attacks
-##	(also known as dictionary based attacks and brute force
-##	attacks).
-##	</p>
-## </desc>
+## <summary>SSH dictionary attack mitigation.</summary>
 
 ########################################
 ## <summary>
@@ -18,17 +10,19 @@
 ## </summary>
 ## </param>
 #
-interface(`denyhosts_domtrans', `
+interface(`denyhosts_domtrans',`
 	gen_require(`
 		type denyhosts_t, denyhosts_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, denyhosts_exec_t, denyhosts_t)
 ')
 
 ########################################
 ## <summary>
-##	Execute denyhost server in the denyhost domain.
+##	Execute denyhost server in the
+##	denyhost domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -36,7 +30,7 @@
 ##	</summary>
 ## </param>
 #
-interface(`denyhosts_initrc_domtrans', `
+interface(`denyhosts_initrc_domtrans',`
 	gen_require(`
 		type denyhosts_initrc_exec_t;
 	')
@@ -46,8 +40,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an denyhosts environment.
+##	All of the rules required to
+##	administrate an denyhosts environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -60,7 +54,7 @@
 ##	</summary>
 ## </param>
 #
-interface(`denyhosts_admin', `
+interface(`denyhosts_admin',`
 	gen_require(`
 		type denyhosts_t, denyhosts_var_lib_t, denyhosts_var_lock_t;
 		type denyhosts_var_log_t, denyhosts_initrc_exec_t;
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/denyhosts.te refpolicy/policy/modules/contrib/denyhosts.te
--- refpolicy/policy/modules/contrib/denyhosts.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/denyhosts.te	2012-09-28 19:41:06.359018362 +0200
@@ -1,8 +1,8 @@
-policy_module(denyhosts, 1.0.0)
+policy_module(denyhosts, 1.0.1)
 
 ########################################
 #
-# DenyHosts personal declarations.
+# Declarations
 #
 
 type denyhosts_t;
@@ -23,15 +23,14 @@
 
 ########################################
 #
-# DenyHosts personal policy.
+# Local policy
 #
 
-allow denyhosts_t self:netlink_route_socket create_netlink_socket_perms;
-allow denyhosts_t self:tcp_socket create_socket_perms;
-allow denyhosts_t self:udp_socket create_socket_perms;
+allow denyhosts_t self:capability sys_tty_config;
+allow denyhosts_t self:fifo_file rw_fifo_file_perms;
+allow denyhosts_t self:netlink_route_socket nlmsg_write;
 
 manage_files_pattern(denyhosts_t, denyhosts_var_lib_t, denyhosts_var_lib_t)
-files_var_lib_filetrans(denyhosts_t, denyhosts_var_lib_t, file)
 
 manage_dirs_pattern(denyhosts_t, denyhosts_var_lock_t, denyhosts_var_lock_t)
 manage_files_pattern(denyhosts_t, denyhosts_var_lock_t, denyhosts_var_lock_t)
@@ -43,24 +42,25 @@
 setattr_files_pattern(denyhosts_t, denyhosts_var_log_t, denyhosts_var_log_t)
 logging_log_filetrans(denyhosts_t, denyhosts_var_log_t, file)
 
+kernel_read_network_state(denyhosts_t)
 kernel_read_system_state(denyhosts_t)
 
 corecmd_exec_bin(denyhosts_t)
+corecmd_exec_shell(denyhosts_t)
 
 corenet_all_recvfrom_unlabeled(denyhosts_t)
 corenet_all_recvfrom_netlabel(denyhosts_t)
 corenet_tcp_sendrecv_generic_if(denyhosts_t)
 corenet_tcp_sendrecv_generic_node(denyhosts_t)
-corenet_tcp_bind_generic_node(denyhosts_t)
-corenet_tcp_connect_smtp_port(denyhosts_t)
+
 corenet_sendrecv_smtp_client_packets(denyhosts_t)
+corenet_tcp_connect_smtp_port(denyhosts_t)
+corenet_tcp_sendrecv_smtp_port(denyhosts_t)
 
 dev_read_urand(denyhosts_t)
 
-files_read_etc_files(denyhosts_t)
-
-# /var/log/secure
 logging_read_generic_logs(denyhosts_t)
+logging_send_syslog_msg(denyhosts_t)
 
 miscfiles_read_localization(denyhosts_t)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/devicekit.fc refpolicy/policy/modules/contrib/devicekit.fc
--- refpolicy/policy/modules/contrib/devicekit.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/devicekit.fc	2012-09-28 19:41:35.369019031 +0200
@@ -1,20 +1,26 @@
+/lib/udev/udisks-part-id	--	gen_context(system_u:object_r:devicekit_disk_exec_t,s0)
+/lib/udisks2/udisksd	--	gen_context(system_u:object_r:devicekit_disk_exec_t,s0)
+
+/usr/lib/udev/udisks-part-id	--	gen_context(system_u:object_r:devicekit_disk_exec_t,s0)
+/usr/lib/udisks2/udisksd	--	gen_context(system_u:object_r:devicekit_disk_exec_t,s0)
 /usr/lib/udisks/udisks-daemon	--	gen_context(system_u:object_r:devicekit_disk_exec_t,s0)
+/usr/lib/upower/upowerd	--	gen_context(system_u:object_r:devicekit_power_exec_t,s0)
 
 /usr/libexec/devkit-daemon	--	gen_context(system_u:object_r:devicekit_exec_t,s0)
-/usr/libexec/devkit-disks-daemon --	gen_context(system_u:object_r:devicekit_disk_exec_t,s0)
-/usr/libexec/devkit-power-daemon --	gen_context(system_u:object_r:devicekit_power_exec_t,s0)
+/usr/libexec/devkit-disks-daemon	--	gen_context(system_u:object_r:devicekit_disk_exec_t,s0)
+/usr/libexec/devkit-power-daemon	--	gen_context(system_u:object_r:devicekit_power_exec_t,s0)
 /usr/libexec/udisks-daemon	--	gen_context(system_u:object_r:devicekit_disk_exec_t,s0)
-/usr/libexec/upowerd		--	gen_context(system_u:object_r:devicekit_power_exec_t,s0)
+/usr/libexec/upowerd	--	gen_context(system_u:object_r:devicekit_power_exec_t,s0)
 
-ifdef(`distro_debian',`
-/usr/lib/upower/upowerd		--	gen_context(system_u:object_r:devicekit_power_exec_t,s0)
-')
+/var/lib/DeviceKit-.*	gen_context(system_u:object_r:devicekit_var_lib_t,s0)
+/var/lib/upower(/.*)?	gen_context(system_u:object_r:devicekit_var_lib_t,s0)
+/var/lib/udisks.*	gen_context(system_u:object_r:devicekit_var_lib_t,s0)
 
-/var/lib/DeviceKit-.*			gen_context(system_u:object_r:devicekit_var_lib_t,s0)
-/var/lib/upower(/.*)?			gen_context(system_u:object_r:devicekit_var_lib_t,s0)
-/var/lib/udisks(/.*)?			gen_context(system_u:object_r:devicekit_var_lib_t,s0)
+/var/log/pm-powersave\.log.*	--	gen_context(system_u:object_r:devicekit_var_log_t,s0)
+/var/log/pm-suspend\.log.*	--	gen_context(system_u:object_r:devicekit_var_log_t,s0)
 
-/var/run/devkit(/.*)?			gen_context(system_u:object_r:devicekit_var_run_t,s0)
-/var/run/DeviceKit-disks(/.*)?		gen_context(system_u:object_r:devicekit_var_run_t,s0)
-/var/run/udisks(/.*)?			gen_context(system_u:object_r:devicekit_var_run_t,s0)
-/var/run/upower(/.*)?			gen_context(system_u:object_r:devicekit_var_run_t,s0)
+/var/run/devkit(/.*)?	gen_context(system_u:object_r:devicekit_var_run_t,s0)
+/var/run/DeviceKit-disks(/.*)?	gen_context(system_u:object_r:devicekit_var_run_t,s0)
+/var/run/pm-utils(/.*)?	gen_context(system_u:object_r:devicekit_var_run_t,s0)
+/var/run/udisks.*	gen_context(system_u:object_r:devicekit_var_run_t,s0)
+/var/run/upower(/.*)?	gen_context(system_u:object_r:devicekit_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/devicekit.if refpolicy/policy/modules/contrib/devicekit.if
--- refpolicy/policy/modules/contrib/devicekit.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/devicekit.if	2012-09-28 19:41:35.388019029 +0200
@@ -1,4 +1,4 @@
-## <summary>Devicekit modular hardware abstraction layer</summary>
+## <summary>Devicekit modular hardware abstraction layer.</summary>
 
 ########################################
 ## <summary>
@@ -15,6 +15,7 @@
 		type devicekit_t, devicekit_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, devicekit_exec_t, devicekit_t)
 ')
 
@@ -31,10 +32,11 @@
 #
 interface(`devicekit_dgram_send',`
 	gen_require(`
-		type devicekit_t;
+		type devicekit_t, devicekit_var_run_t;
 	')
 
-	allow $1 devicekit_t:unix_dgram_socket sendto;
+	files_search_pids($1)
+	dgram_send_pattern($1, devicekit_var_run_t, devicekit_var_run_t, devicekit_t)
 ')
 
 ########################################
@@ -81,7 +83,7 @@
 
 ########################################
 ## <summary>
-##	Send signal devicekit power
+##	Send generic signals to devicekit power.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -120,6 +122,45 @@
 
 ########################################
 ## <summary>
+##	Create, read, write, and delete
+##	devicekit log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`devicekit_manage_log_files',`
+	gen_require(`
+		type devicekit_var_log_t;
+	')
+
+	logging_search_logs($1)
+	manage_files_pattern($1, devicekit_var_log_t, devicekit_var_log_t)
+')
+
+########################################
+## <summary>
+##	Relabel devicekit log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`devicekit_relabel_log_files',`
+	gen_require(`
+		type devicekit_var_log_t;
+	')
+
+	logging_search_logs($1)
+	relabel_files_pattern($1, devicekit_var_log_t, devicekit_var_log_t)
+')
+
+########################################
+## <summary>
 ##	Read devicekit PID files.
 ## </summary>
 ## <param name="domain">
@@ -139,22 +180,37 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an devicekit environment
+##	Create, read, write, and delete
+##	devicekit PID files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
-## <param name="role">
+#
+interface(`devicekit_manage_pid_files',`
+	gen_require(`
+		type devicekit_var_run_t;
+	')
+
+	files_search_pids($1)
+	manage_files_pattern($1, devicekit_var_run_t, devicekit_var_run_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an devicekit environment.
+## </summary>
+## <param name="domain">
 ##	<summary>
-##	The role to be allowed to manage the devicekit domain.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
-## <param name="terminal">
+## <param name="role">
 ##	<summary>
-##	The type of the user terminal.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -163,23 +219,21 @@
 	gen_require(`
 		type devicekit_t, devicekit_disk_t, devicekit_power_t;
 		type devicekit_var_lib_t, devicekit_var_run_t, devicekit_tmp_t;
+		type devicekit_var_log_t;
 	')
 
-	allow $1 devicekit_t:process { ptrace signal_perms getattr };
-	ps_process_pattern($1, devicekit_t)
+	allow $1 { devicekit_t devicekit_disk_t devicekit_power_t }:process { ptrace signal_perms };
+	ps_process_pattern($1, { devicekit_t devicekit_disk_t devicekit_power_t })
 
-	allow $1 devicekit_disk_t:process { ptrace signal_perms getattr };
-	ps_process_pattern($1, devicekit_disk_t)
-
-	allow $1 devicekit_power_t:process { ptrace signal_perms getattr };
-	ps_process_pattern($1, devicekit_power_t)
-
-	admin_pattern($1, devicekit_tmp_t)
 	files_search_tmp($1)
+	admin_pattern($1, devicekit_tmp_t)
 
-	admin_pattern($1, devicekit_var_lib_t)
 	files_search_var_lib($1)
+	admin_pattern($1, devicekit_var_lib_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, devicekit_var_log_t)
 
-	admin_pattern($1, devicekit_var_run_t)
 	files_search_pids($1)
+	admin_pattern($1, devicekit_var_run_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/devicekit.te refpolicy/policy/modules/contrib/devicekit.te
--- refpolicy/policy/modules/contrib/devicekit.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/devicekit.te	2012-09-28 19:41:35.396019031 +0200
@@ -1,4 +1,4 @@
-policy_module(devicekit, 1.2.0)
+policy_module(devicekit, 1.2.1)
 
 ########################################
 #
@@ -26,16 +26,19 @@
 type devicekit_var_lib_t;
 files_type(devicekit_var_lib_t)
 
+type devicekit_var_log_t;
+logging_log_file(devicekit_var_log_t)
+
 ########################################
 #
-# DeviceKit local policy
+# Local policy
 #
 
 allow devicekit_t self:unix_dgram_socket create_socket_perms;
 
 manage_dirs_pattern(devicekit_t, devicekit_var_run_t, devicekit_var_run_t)
 manage_files_pattern(devicekit_t, devicekit_var_run_t, devicekit_var_run_t)
-files_pid_filetrans(devicekit_t, devicekit_var_run_t, { file dir })
+files_pid_filetrans(devicekit_t, devicekit_var_run_t, { dir file })
 
 kernel_read_system_state(devicekit_t)
 
@@ -49,8 +52,7 @@
 optional_policy(`
 	dbus_system_bus_client(devicekit_t)
 
-	allow devicekit_t devicekit_disk_t:dbus send_msg;
-	allow devicekit_t devicekit_power_t:dbus send_msg;
+	allow devicekit_t { devicekit_disk_t devicekit_power_t }:dbus send_msg;
 ')
 
 optional_policy(`
@@ -59,7 +61,7 @@
 
 ########################################
 #
-# DeviceKit disk local policy
+# Disk local policy
 #
 
 allow devicekit_disk_t self:capability { chown setuid setgid dac_override fowner fsetid net_admin sys_admin sys_nice sys_ptrace sys_rawio };
@@ -69,17 +71,20 @@
 
 manage_dirs_pattern(devicekit_disk_t, devicekit_tmp_t, devicekit_tmp_t)
 manage_files_pattern(devicekit_disk_t, devicekit_tmp_t, devicekit_tmp_t)
-files_tmp_filetrans(devicekit_disk_t, devicekit_tmp_t, { file dir })
+files_tmp_filetrans(devicekit_disk_t, devicekit_tmp_t, { dir file })
 
 manage_dirs_pattern(devicekit_disk_t, devicekit_var_lib_t, devicekit_var_lib_t)
 manage_files_pattern(devicekit_disk_t, devicekit_var_lib_t, devicekit_var_lib_t)
 files_var_lib_filetrans(devicekit_disk_t, devicekit_var_lib_t, dir)
 
+allow devicekit_disk_t devicekit_var_run_t:dir mounton;
 manage_dirs_pattern(devicekit_disk_t, devicekit_var_run_t, devicekit_var_run_t)
 manage_files_pattern(devicekit_disk_t, devicekit_var_run_t, devicekit_var_run_t)
-files_pid_filetrans(devicekit_disk_t, devicekit_var_run_t, { file dir })
+files_pid_filetrans(devicekit_disk_t, devicekit_var_run_t, { dir file })
 
 kernel_getattr_message_if(devicekit_disk_t)
+kernel_list_unlabeled(devicekit_disk_t)
+kernel_dontaudit_getattr_unlabeled_files(devicekit_disk_t)
 kernel_read_fs_sysctls(devicekit_disk_t)
 kernel_read_network_state(devicekit_disk_t)
 kernel_read_software_raid_state(devicekit_disk_t)
@@ -91,12 +96,12 @@
 corecmd_exec_shell(devicekit_disk_t)
 corecmd_getattr_all_executables(devicekit_disk_t)
 
-dev_rw_sysfs(devicekit_disk_t)
-dev_read_urand(devicekit_disk_t)
-dev_getattr_usbfs_dirs(devicekit_disk_t)
-dev_manage_generic_files(devicekit_disk_t)
 dev_getattr_all_chr_files(devicekit_disk_t)
 dev_getattr_mtrr_dev(devicekit_disk_t)
+dev_getattr_usbfs_dirs(devicekit_disk_t)
+dev_manage_generic_files(devicekit_disk_t)
+dev_read_urand(devicekit_disk_t)
+dev_rw_sysfs(devicekit_disk_t)
 
 domain_getattr_all_pipes(devicekit_disk_t)
 domain_getattr_all_sockets(devicekit_disk_t)
@@ -105,14 +110,16 @@
 
 files_dontaudit_read_all_symlinks(devicekit_disk_t)
 files_getattr_all_sockets(devicekit_disk_t)
-files_getattr_all_mountpoints(devicekit_disk_t)
+files_getattr_all_dirs(devicekit_disk_t)
 files_getattr_all_files(devicekit_disk_t)
+files_getattr_all_pipes(devicekit_disk_t)
+files_manage_boot_dirs(devicekit_disk_t)
 files_manage_isid_type_dirs(devicekit_disk_t)
 files_manage_mnt_dirs(devicekit_disk_t)
-files_read_etc_files(devicekit_disk_t)
 files_read_etc_runtime_files(devicekit_disk_t)
 files_read_usr_files(devicekit_disk_t)
 
+fs_getattr_all_fs(devicekit_disk_t)
 fs_list_inotifyfs(devicekit_disk_t)
 fs_manage_fusefs_dirs(devicekit_disk_t)
 fs_mount_all_fs(devicekit_disk_t)
@@ -144,6 +151,10 @@
 	optional_policy(`
 		consolekit_dbus_chat(devicekit_disk_t)
 	')
+
+	optional_policy(`
+		policykit_dbus_chat(devicekit_disk_t)
+	')
 ')
 
 optional_policy(`
@@ -159,7 +170,6 @@
 ')
 
 optional_policy(`
-	policykit_dbus_chat(devicekit_disk_t)
 	policykit_domtrans_auth(devicekit_disk_t)
 	policykit_read_lib(devicekit_disk_t)
 	policykit_read_reload(devicekit_disk_t)
@@ -180,43 +190,62 @@
 
 ########################################
 #
-# DeviceKit-Power local policy
+# Power local policy
 #
 
 allow devicekit_power_t self:capability { dac_override net_admin sys_admin sys_tty_config sys_nice sys_ptrace };
-allow devicekit_power_t self:process getsched;
+allow devicekit_power_t self:process { getsched signal_perms };
 allow devicekit_power_t self:fifo_file rw_fifo_file_perms;
 allow devicekit_power_t self:unix_dgram_socket create_socket_perms;
 allow devicekit_power_t self:netlink_kobject_uevent_socket create_socket_perms;
 
+manage_dirs_pattern(devicekit_power_t, devicekit_tmp_t, devicekit_tmp_t)
+manage_files_pattern(devicekit_power_t, devicekit_tmp_t, devicekit_tmp_t)
+files_tmp_filetrans(devicekit_power_t, devicekit_tmp_t, { file dir })
+
 manage_dirs_pattern(devicekit_power_t, devicekit_var_lib_t, devicekit_var_lib_t)
 manage_files_pattern(devicekit_power_t, devicekit_var_lib_t, devicekit_var_lib_t)
 files_var_lib_filetrans(devicekit_power_t, devicekit_var_lib_t, dir)
 
+allow devicekit_power_t devicekit_var_log_t:file append_file_perms;
+allow devicekit_power_t devicekit_var_log_t:file create_file_perms;
+allow devicekit_power_t devicekit_var_log_t:file setattr_file_perms;
+logging_log_filetrans(devicekit_power_t, devicekit_var_log_t, file)
+
+manage_dirs_pattern(devicekit_power_t, devicekit_var_run_t, devicekit_var_run_t)
+manage_files_pattern(devicekit_power_t, devicekit_var_run_t, devicekit_var_run_t)
+files_pid_filetrans(devicekit_power_t, devicekit_var_run_t, { dir file })
+
+kernel_read_fs_sysctls(devicekit_power_t)
 kernel_read_network_state(devicekit_power_t)
 kernel_read_system_state(devicekit_power_t)
 kernel_rw_hotplug_sysctls(devicekit_power_t)
 kernel_rw_kernel_sysctl(devicekit_power_t)
+kernel_rw_vm_sysctls(devicekit_power_t)
 kernel_search_debugfs(devicekit_power_t)
 kernel_write_proc_files(devicekit_power_t)
+kernel_setsched(devicekit_power_t)
 
 corecmd_exec_bin(devicekit_power_t)
 corecmd_exec_shell(devicekit_power_t)
 
-consoletype_exec(devicekit_power_t)
-
-domain_read_all_domains_state(devicekit_power_t)
-
 dev_read_input(devicekit_power_t)
+dev_read_urand(devicekit_power_t)
 dev_rw_generic_usb_dev(devicekit_power_t)
 dev_rw_generic_chr_files(devicekit_power_t)
 dev_rw_netcontrol(devicekit_power_t)
 dev_rw_sysfs(devicekit_power_t)
+dev_read_rand(devicekit_power_t)
+dev_getattr_all_chr_files(devicekit_power_t)
+
+domain_read_all_domains_state(devicekit_power_t)
 
 files_read_kernel_img(devicekit_power_t)
-files_read_etc_files(devicekit_power_t)
+files_read_etc_runtime_files(devicekit_power_t)
 files_read_usr_files(devicekit_power_t)
+files_dontaudit_list_mnt(devicekit_power_t)
 
+fs_getattr_all_fs(devicekit_power_t)
 fs_list_inotifyfs(devicekit_power_t)
 
 term_use_all_terms(devicekit_power_t)
@@ -225,8 +254,8 @@
 
 miscfiles_read_localization(devicekit_power_t)
 
-sysnet_read_config(devicekit_power_t)
 sysnet_domtrans_ifconfig(devicekit_power_t)
+sysnet_domtrans_dhcpc(devicekit_power_t)
 
 userdom_read_all_users_state(devicekit_power_t)
 
@@ -235,6 +264,10 @@
 ')
 
 optional_policy(`
+	consoletype_exec(devicekit_power_t)
+')
+
+optional_policy(`
 	cron_initrc_domtrans(devicekit_power_t)
 ')
 
@@ -248,10 +281,18 @@
 	')
 
 	optional_policy(`
+		hal_dbus_chat(devicekit_power_t)
+	')
+
+	optional_policy(`
 		networkmanager_dbus_chat(devicekit_power_t)
 	')
 
 	optional_policy(`
+		policykit_dbus_chat(devicekit_power_t)
+	')
+
+	optional_policy(`
 		rpm_dbus_chat(devicekit_power_t)
 	')
 ')
@@ -265,20 +306,38 @@
 	hal_manage_log(devicekit_power_t)
 	hal_manage_pid_dirs(devicekit_power_t)
 	hal_manage_pid_files(devicekit_power_t)
-	hal_dbus_chat(devicekit_power_t)
 ')
 
 optional_policy(`
-	policykit_dbus_chat(devicekit_power_t)
+	modutils_domtrans_insmod(devicekit_power_t)
+')
+
+optional_policy(`
+	mount_domtrans(devicekit_power_t)
+')
+
+optional_policy(`
+	networkmanager_domtrans(devicekit_power_t)
+')
+
+optional_policy(`
 	policykit_domtrans_auth(devicekit_power_t)
 	policykit_read_lib(devicekit_power_t)
 	policykit_read_reload(devicekit_power_t)
 ')
 
 optional_policy(`
+	readahead_domtrans(devicekit_power_t)
+')
+
+optional_policy(`
 	udev_read_db(devicekit_power_t)
 ')
 
 optional_policy(`
+	usbmuxd_stream_connect(devicekit_power_t)
+')
+
+optional_policy(`
 	vbetool_domtrans(devicekit_power_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dhcp.fc refpolicy/policy/modules/contrib/dhcp.fc
--- refpolicy/policy/modules/contrib/dhcp.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dhcp.fc	2012-09-28 19:41:58.847019583 +0200
@@ -1,8 +1,8 @@
-/etc/rc\.d/init\.d/dhcpd	--	gen_context(system_u:object_r:dhcpd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/dhcpd(6)?	--	gen_context(system_u:object_r:dhcpd_initrc_exec_t,s0)
 
 /usr/sbin/dhcpd.*		--	gen_context(system_u:object_r:dhcpd_exec_t,s0)
 
 /var/lib/dhcpd(/.*)?			gen_context(system_u:object_r:dhcpd_state_t,s0)
 /var/lib/dhcp(3)?/dhcpd\.leases.* --	gen_context(system_u:object_r:dhcpd_state_t,s0)
 
-/var/run/dhcpd\.pid		--	gen_context(system_u:object_r:dhcpd_var_run_t,s0)
+/var/run/dhcpd(6)?\.pid		--	gen_context(system_u:object_r:dhcpd_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dhcp.if refpolicy/policy/modules/contrib/dhcp.if
--- refpolicy/policy/modules/contrib/dhcp.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/dhcp.if	2012-09-28 19:41:58.866019574 +0200
@@ -1,8 +1,8 @@
-## <summary>Dynamic host configuration protocol (DHCP) server</summary>
+## <summary>Dynamic host configuration protocol server.</summary>
 
 ########################################
 ## <summary>
-##	Transition to dhcpd.
+##	Execute a domain transition to run dhcpd.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -21,8 +21,8 @@
 
 ########################################
 ## <summary>
-##	Set the attributes of the DCHP
-##	server state files.
+##	Set attributes of dhcpd server
+##	state files.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -60,8 +60,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate 
-##	an dhcp environment
+##	All of the rules required to
+##	administrate an dhcpd environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -70,14 +70,14 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the dhcp domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
 #
 interface(`dhcpd_admin',`
 	gen_require(`
-		type dhcpd_t; type dhcpd_tmp_t;	type dhcpd_state_t;
+		type dhcpd_t, dhcpd_tmp_t, dhcpd_state_t;
 		type dhcpd_var_run_t, dhcpd_initrc_exec_t;
 	')
 
@@ -92,6 +92,7 @@
 	files_list_tmp($1)
 	admin_pattern($1, dhcpd_tmp_t)
 
+	files_list_var_lib($1)
 	admin_pattern($1, dhcpd_state_t)
 
 	files_list_pids($1)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dhcp.te refpolicy/policy/modules/contrib/dhcp.te
--- refpolicy/policy/modules/contrib/dhcp.te	2012-07-25 20:33:04.000000000 +0200
+++ refpolicy/policy/modules/contrib/dhcp.te	2012-09-28 19:41:58.880019571 +0200
@@ -1,4 +1,4 @@
-policy_module(dhcp, 1.10.0)
+policy_module(dhcp, 1.10.1)
 
 ########################################
 #
@@ -6,9 +6,10 @@
 #
 
 ## <desc>
-## <p>
-## Allow DHCP daemon to use LDAP backends
-## </p>
+##	<p>
+##	Determine whether DHCP daemon
+##	can use LDAP backends.
+##	</p>
 ## </desc>
 gen_tunable(dhcpd_use_ldap, false)
 
@@ -33,30 +34,26 @@
 # Local policy
 #
 
-allow dhcpd_t self:capability { net_raw sys_resource };
+allow dhcpd_t self:capability { chown dac_override sys_chroot net_raw setgid setuid sys_resource };
 dontaudit dhcpd_t self:capability { net_admin sys_tty_config };
-allow dhcpd_t self:process signal_perms;
+allow dhcpd_t self:process { getcap setcap signal_perms };
 allow dhcpd_t self:fifo_file rw_fifo_file_perms;
-allow dhcpd_t self:unix_dgram_socket create_socket_perms;
-allow dhcpd_t self:unix_stream_socket create_socket_perms;
-allow dhcpd_t self:tcp_socket create_stream_socket_perms;
-allow dhcpd_t self:udp_socket create_socket_perms;
-# Allow dhcpd_t to use packet sockets
+allow dhcpd_t self:tcp_socket { accept listen };
 allow dhcpd_t self:packet_socket create_socket_perms;
 allow dhcpd_t self:rawip_socket create_socket_perms;
 
-can_exec(dhcpd_t, dhcpd_exec_t)
-
 manage_files_pattern(dhcpd_t, dhcpd_state_t, dhcpd_state_t)
 sysnet_dhcp_state_filetrans(dhcpd_t, dhcpd_state_t, file)
 
 manage_dirs_pattern(dhcpd_t, dhcpd_tmp_t, dhcpd_tmp_t)
 manage_files_pattern(dhcpd_t, dhcpd_tmp_t, dhcpd_tmp_t)
-files_tmp_filetrans(dhcpd_t, dhcpd_tmp_t, { file dir })
+files_tmp_filetrans(dhcpd_t, dhcpd_tmp_t, { dir file })
 
 manage_files_pattern(dhcpd_t, dhcpd_var_run_t, dhcpd_var_run_t)
 files_pid_filetrans(dhcpd_t, dhcpd_var_run_t, file)
 
+can_exec(dhcpd_t, dhcpd_exec_t)
+
 kernel_read_system_state(dhcpd_t)
 kernel_read_kernel_sysctls(dhcpd_t)
 kernel_read_network_state(dhcpd_t)
@@ -73,16 +70,21 @@
 corenet_udp_sendrecv_all_ports(dhcpd_t)
 corenet_tcp_bind_generic_node(dhcpd_t)
 corenet_udp_bind_generic_node(dhcpd_t)
+
+corenet_sendrecv_dhcpd_server_packets(dhcpd_t)
 corenet_tcp_bind_dhcpd_port(dhcpd_t)
 corenet_udp_bind_dhcpd_port(dhcpd_t)
-corenet_udp_bind_pxe_port(dhcpd_t)
-corenet_tcp_connect_all_ports(dhcpd_t)
-corenet_sendrecv_dhcpd_server_packets(dhcpd_t)
+
 corenet_sendrecv_pxe_server_packets(dhcpd_t)
+corenet_udp_bind_pxe_port(dhcpd_t)
+
 corenet_sendrecv_all_client_packets(dhcpd_t)
-# Needed to detect open number of interfaces (common/discover.c::begin_iface_scan)
+corenet_tcp_connect_all_ports(dhcpd_t)
+
 corenet_udp_bind_all_unreserved_ports(dhcpd_t)
 
+corecmd_exec_bin(dhcpd_t)
+
 dev_read_sysfs(dhcpd_t)
 dev_read_rand(dhcpd_t)
 dev_read_urand(dhcpd_t)
@@ -90,11 +92,8 @@
 fs_getattr_all_fs(dhcpd_t)
 fs_search_auto_mountpoints(dhcpd_t)
 
-corecmd_exec_bin(dhcpd_t)
-
 domain_use_interactive_fds(dhcpd_t)
 
-files_read_etc_files(dhcpd_t)
 files_read_usr_files(dhcpd_t)
 files_read_etc_runtime_files(dhcpd_t)
 files_search_var_lib(dhcpd_t)
@@ -110,16 +109,11 @@
 userdom_dontaudit_use_unpriv_user_fds(dhcpd_t)
 userdom_dontaudit_search_user_home_dirs(dhcpd_t)
 
-ifdef(`distro_gentoo',`
-	allow dhcpd_t self:capability { chown dac_override setgid setuid sys_chroot };
-')
-
 tunable_policy(`dhcpd_use_ldap',`
 	sysnet_use_ldap(dhcpd_t)
 ')
 
 optional_policy(`
-	# used for dynamic DNS
 	bind_read_dnssec_keys(dhcpd_t)
 ')
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dictd.fc refpolicy/policy/modules/contrib/dictd.fc
--- refpolicy/policy/modules/contrib/dictd.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dictd.fc	2012-09-28 19:42:23.325020141 +0200
@@ -1,9 +1,9 @@
-/etc/rc\.d/init\.d/dictd --	gen_context(system_u:object_r:dictd_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/dictd	--	gen_context(system_u:object_r:dictd_initrc_exec_t,s0)
 
 /etc/dictd\.conf	--	gen_context(system_u:object_r:dictd_etc_t,s0)
 
-/usr/sbin/dictd		--	gen_context(system_u:object_r:dictd_exec_t,s0)
+/usr/sbin/dictd	--	gen_context(system_u:object_r:dictd_exec_t,s0)
 
-/var/lib/dictd(/.*)?		gen_context(system_u:object_r:dictd_var_lib_t,s0)
+/var/lib/dictd(/.*)?	gen_context(system_u:object_r:dictd_var_lib_t,s0)
 
 /var/run/dictd\.pid	--	gen_context(system_u:object_r:dictd_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dictd.if refpolicy/policy/modules/contrib/dictd.if
--- refpolicy/policy/modules/contrib/dictd.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/dictd.if	2012-09-28 19:42:23.325020142 +0200
@@ -1,4 +1,4 @@
-## <summary>Dictionary daemon</summary>
+## <summary>Dictionary daemon.</summary>
 
 ########################################
 ## <summary>
@@ -17,8 +17,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate 
-##	an dictd environment
+##	All of the rules required to
+##	administrate an dictd environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -27,7 +27,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the dictd domain.
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <rolecap/>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dictd.te refpolicy/policy/modules/contrib/dictd.te
--- refpolicy/policy/modules/contrib/dictd.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dictd.te	2012-09-28 19:42:23.325020142 +0200
@@ -1,4 +1,4 @@
-policy_module(dictd, 1.7.0)
+policy_module(dictd, 1.7.1)
 
 ########################################
 #
@@ -29,12 +29,10 @@
 allow dictd_t self:capability { setuid setgid };
 dontaudit dictd_t self:capability sys_tty_config;
 allow dictd_t self:process { signal_perms setpgid };
-allow dictd_t self:unix_stream_socket create_stream_socket_perms;
-allow dictd_t self:tcp_socket create_stream_socket_perms;
-allow dictd_t self:udp_socket create_socket_perms;
+allow dictd_t self:unix_stream_socket { accept listen };
+allow dictd_t self:tcp_socket { accept listen };
 
 allow dictd_t dictd_etc_t:file read_file_perms;
-files_search_etc(dictd_t)
 
 allow dictd_t dictd_var_lib_t:dir list_dir_perms;
 allow dictd_t dictd_var_lib_t:file read_file_perms;
@@ -48,48 +46,33 @@
 corenet_all_recvfrom_unlabeled(dictd_t)
 corenet_all_recvfrom_netlabel(dictd_t)
 corenet_tcp_sendrecv_generic_if(dictd_t)
-corenet_raw_sendrecv_generic_if(dictd_t)
-corenet_udp_sendrecv_generic_if(dictd_t)
 corenet_tcp_sendrecv_generic_node(dictd_t)
-corenet_udp_sendrecv_generic_node(dictd_t)
-corenet_raw_sendrecv_generic_node(dictd_t)
-corenet_tcp_sendrecv_all_ports(dictd_t)
-corenet_udp_sendrecv_all_ports(dictd_t)
 corenet_tcp_bind_generic_node(dictd_t)
-corenet_tcp_bind_dict_port(dictd_t)
+
 corenet_sendrecv_dict_server_packets(dictd_t)
+corenet_tcp_bind_dict_port(dictd_t)
+corenet_tcp_sendrecv_dict_port(dictd_t)
 
 dev_read_sysfs(dictd_t)
 
-fs_getattr_xattr_fs(dictd_t)
-fs_search_auto_mountpoints(dictd_t)
-
 domain_use_interactive_fds(dictd_t)
 
-files_read_etc_files(dictd_t)
 files_read_etc_runtime_files(dictd_t)
 files_read_usr_files(dictd_t)
 files_search_var_lib(dictd_t)
-# for checking for nscd
-files_dontaudit_search_pids(dictd_t)
+
+fs_getattr_xattr_fs(dictd_t)
+fs_search_auto_mountpoints(dictd_t)
+
+auth_use_nsswitch(dictd_t)
 
 logging_send_syslog_msg(dictd_t)
 
 miscfiles_read_localization(dictd_t)
 
-sysnet_read_config(dictd_t)
-
 userdom_dontaudit_use_unpriv_user_fds(dictd_t)
 
 optional_policy(`
-	nis_use_ypbind(dictd_t)
-')
-
-optional_policy(`
-	nscd_socket_use(dictd_t)
-')
-
-optional_policy(`
 	seutil_sigchld_newrole(dictd_t)
 ')
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/distcc.fc refpolicy/policy/modules/contrib/distcc.fc
--- refpolicy/policy/modules/contrib/distcc.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/distcc.fc	2012-09-28 19:42:41.553020562 +0200
@@ -1,2 +1,7 @@
+/etc/rc\.d/init\.d/distccd	--	gen_context(system_u:object_r:distccd_initrc_exec_t,s0)
 
 /usr/bin/distccd	--	gen_context(system_u:object_r:distccd_exec_t,s0)
+
+/var/log/distccd.*	--	gen_context(system_u:object_r:distccd_log_t,s0)
+
+/var/run/distccd\.pid	--	gen_context(system_u:object_r:distccd_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/distcc.if refpolicy/policy/modules/contrib/distcc.if
--- refpolicy/policy/modules/contrib/distcc.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/distcc.if	2012-09-28 19:42:41.553020562 +0200
@@ -1 +1,42 @@
-## <summary>Distributed compiler daemon</summary>
+## <summary>Distributed compiler daemon.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an distcc environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`distcc_admin',`
+	gen_require(`
+		type distccd_t, distccd_t, distccd_log_t;
+		type disccd_var_run_t, distccd_tmp_t, distccd_initrc_exec_t;
+	')
+
+	allow $1 distccd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, distccd_t)
+
+	init_labeled_script_domtrans($1, distccd_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 distccd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, distccd_log_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, distccd_tmp_t)
+
+	files_search_pids($1)
+	admin_pattern($1, distccd_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/distcc.te refpolicy/policy/modules/contrib/distcc.te
--- refpolicy/policy/modules/contrib/distcc.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/distcc.te	2012-09-28 19:42:41.554020563 +0200
@@ -1,4 +1,4 @@
-policy_module(distcc, 1.8.0)
+policy_module(distcc, 1.8.2)
 
 ########################################
 #
@@ -9,6 +9,9 @@
 type distccd_exec_t;
 init_daemon_domain(distccd_t, distccd_exec_t)
 
+type distccd_initrc_exec_t;
+init_script_file(distccd_initrc_exec_t)
+
 type distccd_log_t;
 logging_log_file(distccd_log_t)
 
@@ -27,11 +30,11 @@
 dontaudit distccd_t self:capability sys_tty_config;
 allow distccd_t self:process { signal_perms setsched };
 allow distccd_t self:fifo_file rw_fifo_file_perms;
-allow distccd_t self:netlink_route_socket r_netlink_socket_perms;
-allow distccd_t self:tcp_socket create_stream_socket_perms;
-allow distccd_t self:udp_socket create_socket_perms;
+allow distccd_t self:tcp_socket { accept listen };
 
-allow distccd_t distccd_log_t:file manage_file_perms;
+allow distccd_t distccd_log_t:file append_file_perms;
+allow distccd_t distccd_log_t:file create_file_perms;
+allow distccd_t distccd_log_t:file setattr_file_perms;
 logging_log_filetrans(distccd_t, distccd_log_t, file)
 
 manage_dirs_pattern(distccd_t, distccd_tmp_t, distccd_tmp_t)
@@ -47,14 +50,12 @@
 corenet_all_recvfrom_unlabeled(distccd_t)
 corenet_all_recvfrom_netlabel(distccd_t)
 corenet_tcp_sendrecv_generic_if(distccd_t)
-corenet_udp_sendrecv_generic_if(distccd_t)
 corenet_tcp_sendrecv_generic_node(distccd_t)
-corenet_udp_sendrecv_generic_node(distccd_t)
-corenet_tcp_sendrecv_all_ports(distccd_t)
-corenet_udp_sendrecv_all_ports(distccd_t)
 corenet_tcp_bind_generic_node(distccd_t)
-corenet_tcp_bind_distccd_port(distccd_t)
+
 corenet_sendrecv_distccd_server_packets(distccd_t)
+corenet_tcp_bind_distccd_port(distccd_t)
+corenet_tcp_sendrecv_distccd_port(distccd_t)
 
 dev_read_sysfs(distccd_t)
 
@@ -62,29 +63,23 @@
 fs_search_auto_mountpoints(distccd_t)
 
 corecmd_exec_bin(distccd_t)
-corecmd_read_bin_symlinks(distccd_t)
 
 domain_use_interactive_fds(distccd_t)
 
-files_read_etc_files(distccd_t)
 files_read_etc_runtime_files(distccd_t)
 
+auth_use_nsswitch(distccd_t)
+
 libs_exec_lib_files(distccd_t)
 
 logging_send_syslog_msg(distccd_t)
 
 miscfiles_read_localization(distccd_t)
 
-sysnet_read_config(distccd_t)
-
 userdom_dontaudit_use_unpriv_user_fds(distccd_t)
 userdom_dontaudit_search_user_home_dirs(distccd_t)
 
 optional_policy(`
-	nis_use_ypbind(distccd_t)
-')
-
-optional_policy(`
 	seutil_sigchld_newrole(distccd_t)
 ')
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/djbdns.fc refpolicy/policy/modules/contrib/djbdns.fc
--- refpolicy/policy/modules/contrib/djbdns.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/djbdns.fc	2012-09-28 19:43:04.223021089 +0200
@@ -1,9 +1,7 @@
-
-/usr/bin/axfrdns		--	gen_context(system_u:object_r:djbdns_axfrdns_exec_t,s0)
+/usr/bin/axfrdns	--	gen_context(system_u:object_r:djbdns_axfrdns_exec_t,s0)
 /usr/bin/dnscache	--	gen_context(system_u:object_r:djbdns_dnscache_exec_t,s0)
-/usr/bin/tinydns		--	gen_context(system_u:object_r:djbdns_tinydns_exec_t,s0)
-
-/var/axfrdns/root(/.*)?		gen_context(system_u:object_r:djbdns_axfrdns_conf_t,s0)
-/var/dnscache/root(/.*)?		gen_context(system_u:object_r:djbdns_dnscache_conf_t,s0)
-/var/tinydns/root(/.*)?		gen_context(system_u:object_r:djbdns_tinydns_conf_t,s0)
+/usr/bin/tinydns	--	gen_context(system_u:object_r:djbdns_tinydns_exec_t,s0)
 
+/var/axfrdns/root(/.*)?	gen_context(system_u:object_r:djbdns_axfrdns_conf_t,s0)
+/var/dnscache/root(/.*)?	gen_context(system_u:object_r:djbdns_dnscache_conf_t,s0)
+/var/tinydns/root(/.*)?	gen_context(system_u:object_r:djbdns_tinydns_conf_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/djbdns.if refpolicy/policy/modules/contrib/djbdns.if
--- refpolicy/policy/modules/contrib/djbdns.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/djbdns.if	2012-09-28 19:43:04.242021088 +0200
@@ -1,61 +1,49 @@
-## <summary>small and secure DNS daemon</summary>
+## <summary>Small and secure DNS daemon.</summary>
 
-########################################
+#######################################
 ## <summary>
-##	Create a set of derived types for djbdns
-##	components that are directly supervised by daemontools.
+##	The template to define a djbdns domain.
 ## </summary>
-## <param name="prefix">
+## <param name="domain_prefix">
 ##	<summary>
-##	The prefix to be used for deriving type names.
+##	Domain prefix to be used.
 ##	</summary>
 ## </param>
 #
 template(`djbdns_daemontools_domain_template',`
+	gen_require(`
+		attribute djbdns_domain;
+	')
 
-	type djbdns_$1_t;
-	type djbdns_$1_exec_t;
-	type djbdns_$1_conf_t;
-	files_config_file(djbdns_$1_conf_t)
+	########################################
+	#
+	# Declarations
+	#
 
+	type djbdns_$1_t, djbdns_domain;
+	type djbdns_$1_exec_t;
 	domain_type(djbdns_$1_t)
 	domain_entry_file(djbdns_$1_t, djbdns_$1_exec_t)
 	role system_r types djbdns_$1_t;
 
+	type djbdns_$1_conf_t;
+	files_config_file(djbdns_$1_conf_t)
+
+	########################################
+	#
+	# Local policy
+	#
+
 	daemontools_service_domain(djbdns_$1_t, djbdns_$1_exec_t)
 	daemontools_read_svc(djbdns_$1_t)
 
-	allow djbdns_$1_t self:capability { net_bind_service setgid setuid sys_chroot };
-	allow djbdns_$1_t self:process signal;
-	allow djbdns_$1_t self:fifo_file rw_fifo_file_perms;
-	allow djbdns_$1_t self:tcp_socket create_stream_socket_perms;
-	allow djbdns_$1_t self:udp_socket create_socket_perms;
-
 	allow djbdns_$1_t djbdns_$1_conf_t:dir list_dir_perms;
 	allow djbdns_$1_t djbdns_$1_conf_t:file read_file_perms;
-
-	corenet_all_recvfrom_unlabeled(djbdns_$1_t)
-	corenet_all_recvfrom_netlabel(djbdns_$1_t)
-	corenet_tcp_sendrecv_generic_if(djbdns_$1_t)
-	corenet_udp_sendrecv_generic_if(djbdns_$1_t)
-	corenet_tcp_sendrecv_generic_node(djbdns_$1_t)
-	corenet_udp_sendrecv_generic_node(djbdns_$1_t)
-	corenet_tcp_sendrecv_all_ports(djbdns_$1_t)
-	corenet_udp_sendrecv_all_ports(djbdns_$1_t)
-	corenet_tcp_bind_generic_node(djbdns_$1_t)
-	corenet_udp_bind_generic_node(djbdns_$1_t)
-	corenet_tcp_bind_dns_port(djbdns_$1_t)
-	corenet_udp_bind_dns_port(djbdns_$1_t)
-	corenet_udp_bind_generic_port(djbdns_$1_t)
-	corenet_sendrecv_dns_server_packets(djbdns_$1_t)
-	corenet_sendrecv_generic_server_packets(djbdns_$1_t)
-
-	files_search_var(djbdns_$1_t)
 ')
 
 #####################################
 ## <summary>
-##	Allow search the djbdns-tinydns key ring.
+##	Search djbdns-tinydns key ring.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -73,7 +61,7 @@
 
 #####################################
 ## <summary>
-##	Allow link to the djbdns-tinydns key ring.
+##	Link djbdns-tinydns key ring.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/djbdns.te refpolicy/policy/modules/contrib/djbdns.te
--- refpolicy/policy/modules/contrib/djbdns.te	2012-09-28 19:56:54.105040255 +0200
+++ refpolicy/policy/modules/contrib/djbdns.te	2012-09-28 19:47:20.900027018 +0200
@@ -1,51 +1,64 @@
-policy_module(djbdns, 1.5.0)
+policy_module(djbdns, 1.5.2)
 
 ########################################
 #
 # Declarations
 #
 
-type djbdns_axfrdns_t;
-type djbdns_axfrdns_exec_t;
-domain_type(djbdns_axfrdns_t)
-domain_entry_file(djbdns_axfrdns_t, djbdns_axfrdns_exec_t)
-role system_r types djbdns_axfrdns_t;
+attribute djbdns_domain;
 
-type djbdns_axfrdns_conf_t;
-files_config_file(djbdns_axfrdns_conf_t)
+djbdns_daemontools_domain_template(axfrdns)
+ucspitcp_service_domain(djbdns_axfrdns_t, djbdns_axfrdns_exec_t)
 
 djbdns_daemontools_domain_template(dnscache)
-
 djbdns_daemontools_domain_template(tinydns)
 
 ########################################
 #
-# Local policy for axfrdns component
+# Common local policy
 #
 
-daemontools_ipc_domain(djbdns_axfrdns_t)
-daemontools_read_svc(djbdns_axfrdns_t)
-
-allow djbdns_axfrdns_t self:capability { setuid setgid sys_chroot };
-
-allow djbdns_axfrdns_t djbdns_axfrdns_conf_t:dir list_dir_perms;
-allow djbdns_axfrdns_t djbdns_axfrdns_conf_t:file read_file_perms;
-
-allow djbdns_axfrdns_t djbdns_tinydns_t:dir list_dir_perms;
-allow djbdns_axfrdns_t djbdns_tinydns_t:file read_file_perms;
+allow djbdns_domain self:capability { net_bind_service setgid setuid sys_chroot };
+allow djbdns_domain self:process signal;
+allow djbdns_domain self:fifo_file rw_fifo_file_perms;
+allow djbdns_domain self:tcp_socket create_stream_socket_perms;
+allow djbdns_domain self:udp_socket create_socket_perms;
+
+corenet_all_recvfrom_unlabeled(djbdns_domain)
+corenet_all_recvfrom_netlabel(djbdns_domain)
+corenet_tcp_sendrecv_generic_if(djbdns_domain)
+corenet_udp_sendrecv_generic_if(djbdns_domain)
+corenet_tcp_sendrecv_generic_node(djbdns_domain)
+corenet_udp_sendrecv_generic_node(djbdns_domain)
+corenet_tcp_sendrecv_all_ports(djbdns_domain)
+corenet_udp_sendrecv_all_ports(djbdns_domain)
+corenet_tcp_bind_generic_node(djbdns_domain)
+corenet_udp_bind_generic_node(djbdns_domain)
+
+corenet_sendrecv_dns_server_packets(djbdns_domain)
+corenet_tcp_bind_dns_port(djbdns_domain)
+corenet_udp_bind_dns_port(djbdns_domain)
+
+corenet_sendrecv_dns_client_packets(djbdns_domain)
+corenet_tcp_connect_dns_port(djbdns_domain)
+
+corenet_sendrecv_generic_server_packets(djbdns_domain)
+corenet_tcp_bind_generic_port(djbdns_domain)
+corenet_udp_bind_generic_port(djbdns_domain)
 
-allow djbdns_axfrdns_t djbdns_tinydns_conf_t:dir list_dir_perms;
-allow djbdns_axfrdns_t djbdns_tinydns_conf_t:file read_file_perms;
+files_search_var(djbdns_domain)
 
-files_search_var(djbdns_axfrdns_t)
+########################################
+#
+# axfrdns local policy
+#
 
-optional_policy(`
-	ucspitcp_service_domain(djbdns_axfrdns_t, djbdns_axfrdns_exec_t)
-')
+allow djbdns_axfrdns_t { djbdns_tinydns_t djbdns_tinydns_conf_t }:dir list_dir_perms;
+allow djbdns_axfrdns_t { djbdns_tinydns_t djbdns_tinydns_conf_t }:file read_file_perms;
 
 ########################################
 #
-# Local policy for tinydns
+# tinydns local policy
 #
 
 init_dontaudit_use_script_fds(djbdns_tinydns_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dkim.fc refpolicy/policy/modules/contrib/dkim.fc
--- refpolicy/policy/modules/contrib/dkim.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dkim.fc	2012-09-28 19:47:52.183027735 +0200
@@ -1,14 +1,17 @@
 /etc/mail/dkim-milter/keys(/.*)?	gen_context(system_u:object_r:dkim_milter_private_key_t,s0)
-/etc/opendkim/keys(/.*)?		gen_context(system_u:object_r:dkim_milter_private_key_t,s0)
+/etc/opendkim/keys(/.*)?	gen_context(system_u:object_r:dkim_milter_private_key_t,s0)
 
-/usr/sbin/dkim-filter		--	gen_context(system_u:object_r:dkim_milter_exec_t,s0)
-/usr/sbin/opendkim		--	gen_context(system_u:object_r:dkim_milter_exec_t,s0)
+/etc/rc\.d/init\.d/((opendkim)|(dkim-milter))	--	gen_context(system_u:object_r:dkim_milter_initrc_exec_t,s0)
 
-/var/db/dkim(/.*)?			gen_context(system_u:object_r:dkim_milter_private_key_t,s0)
+/usr/sbin/dkim-filter	--	gen_context(system_u:object_r:dkim_milter_exec_t,s0)
+/usr/sbin/opendkim	--	gen_context(system_u:object_r:dkim_milter_exec_t,s0)
 
-/var/run/dkim-filter(/.*)?		gen_context(system_u:object_r:dkim_milter_data_t,s0)
-/var/run/dkim-milter(/.*)?		gen_context(system_u:object_r:dkim_milter_data_t,s0)
+/var/db/dkim(/.*)?	gen_context(system_u:object_r:dkim_milter_private_key_t,s0)
+
+/var/run/dkim-filter(/.*)?	gen_context(system_u:object_r:dkim_milter_data_t,s0)
+/var/run/dkim-milter(/.*)?	gen_context(system_u:object_r:dkim_milter_data_t,s0)
 /var/run/dkim-milter\.pid	--	gen_context(system_u:object_r:dkim_milter_data_t,s0)
-/var/run/opendkim(/.*)?			gen_context(system_u:object_r:dkim_milter_data_t,s0)
 
-/var/spool/opendkim(/.*)?		gen_context(system_u:object_r:dkim_milter_data_t,s0)
+/var/run/opendkim(/.*)?	gen_context(system_u:object_r:dkim_milter_data_t,s0)
+
+/var/spool/opendkim(/.*)?	gen_context(system_u:object_r:dkim_milter_data_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dkim.if refpolicy/policy/modules/contrib/dkim.if
--- refpolicy/policy/modules/contrib/dkim.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dkim.if	2012-09-28 19:47:52.184027736 +0200
@@ -1 +1,39 @@
 ## <summary>DomainKeys Identified Mail milter.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an dkim environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`dkim_admin',`
+	gen_require(`
+		type dkim_milter_t, dkim_milter_initrc_exec_t, dkim_milter_private_key_t;
+		type dkim_milter_data_t;
+	')
+
+	allow $1 dkim_milter_t:process { ptrace signal_perms };
+	ps_process_pattern($1, dkim_milter_t)
+
+	init_labeled_script_domtrans($1, dkim_milter_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 dkim_milter_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_etc($1)
+	admin_pattern($1, dkim_milter_private_key_t)
+
+	files_search_pids($1)
+	admin_pattern($1, dkim_milter_data_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dkim.te refpolicy/policy/modules/contrib/dkim.te
--- refpolicy/policy/modules/contrib/dkim.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dkim.te	2012-09-28 19:47:52.184027736 +0200
@@ -1,4 +1,4 @@
-policy_module(dkim, 1.1.0)
+policy_module(dkim, 1.1.1)
 
 ########################################
 #
@@ -7,7 +7,9 @@
 
 milter_template(dkim)
 
-# Type for the private key of dkim-filter
+type dkim_milter_initrc_exec_t;
+init_script_file(dkim_milter_initrc_exec_t)
+
 type dkim_milter_private_key_t;
 files_type(dkim_milter_private_key_t)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dmidecode.fc refpolicy/policy/modules/contrib/dmidecode.fc
--- refpolicy/policy/modules/contrib/dmidecode.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dmidecode.fc	2012-09-28 19:48:09.257028131 +0200
@@ -1,4 +1,4 @@
-
+/usr/sbin/biosdecode	--	gen_context(system_u:object_r:dmidecode_exec_t,s0)
 /usr/sbin/dmidecode	--	gen_context(system_u:object_r:dmidecode_exec_t,s0)
 /usr/sbin/ownership	--	gen_context(system_u:object_r:dmidecode_exec_t,s0)
 /usr/sbin/vpddecode	--	gen_context(system_u:object_r:dmidecode_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dmidecode.if refpolicy/policy/modules/contrib/dmidecode.if
--- refpolicy/policy/modules/contrib/dmidecode.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dmidecode.if	2012-09-28 19:48:09.257028131 +0200
@@ -15,18 +15,15 @@
 		type dmidecode_t, dmidecode_exec_t;
 	')
 
-	domain_auto_trans($1, dmidecode_exec_t, dmidecode_t)
-
-	allow $1 dmidecode_t:fd use;
-	allow dmidecode_t $1:fd use;
-	allow dmidecode_t $1:fifo_file rw_file_perms;
-	allow dmidecode_t $1:process sigchld;
+	corecmd_search_bin($1)
+	domtrans_pattern($1, dmidecode_exec_t, dmidecode_t)
 ')
 
 ########################################
 ## <summary>
-##	Execute dmidecode in the dmidecode domain, and
-##	allow the specified role the dmidecode domain.
+##	Execute dmidecode in the dmidecode
+##	domain, and allow the specified
+##	role the dmidecode domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -42,9 +39,9 @@
 #
 interface(`dmidecode_run',`
 	gen_require(`
-		type dmidecode_t;
+		attribute_role dmidecode_roles;
 	')
 
 	dmidecode_domtrans($1)
-	role $2 types dmidecode_t;
+	roleattribute $2 dmidecode_roles;
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dmidecode.te refpolicy/policy/modules/contrib/dmidecode.te
--- refpolicy/policy/modules/contrib/dmidecode.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dmidecode.te	2012-09-28 19:48:09.257028131 +0200
@@ -1,14 +1,17 @@
-policy_module(dmidecode, 1.4.0)
+policy_module(dmidecode, 1.4.1)
 
 ########################################
 #
 # Declarations
 #
 
+attribute_role dmidecode_roles;
+roleattribute system_r dmidecode_roles;
+
 type dmidecode_t;
 type dmidecode_exec_t;
 application_domain(dmidecode_t, dmidecode_exec_t)
-role system_r types dmidecode_t;
+role dmidecode_roles types dmidecode_t;
 
 ########################################
 #
@@ -18,7 +21,6 @@
 allow dmidecode_t self:capability sys_rawio;
 
 dev_read_sysfs(dmidecode_t)
-# Allow dmidecode to read /dev/mem
 dev_read_raw_memory(dmidecode_t)
 
 mls_file_read_all_levels(dmidecode_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dovecot.fc refpolicy/policy/modules/contrib/dovecot.fc
--- refpolicy/policy/modules/contrib/dovecot.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dovecot.fc	2012-09-27 20:03:30.749126498 +0200
@@ -2,7 +2,7 @@
 #
 # /etc
 #
-/etc/dovecot(/.*)?*			gen_context(system_u:object_r:dovecot_etc_t,s0)
+/etc/dovecot(/.*)?			gen_context(system_u:object_r:dovecot_etc_t,s0)
 /etc/dovecot\.conf.*			gen_context(system_u:object_r:dovecot_etc_t,s0)
 /etc/dovecot\.passwd.*			gen_context(system_u:object_r:dovecot_passwd_t,s0)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dovecot.te refpolicy/policy/modules/contrib/dovecot.te
--- refpolicy/policy/modules/contrib/dovecot.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/dovecot.te	2012-09-27 20:03:30.749126498 +0200
@@ -1,4 +1,4 @@
-policy_module(dovecot, 1.14.0)
+policy_module(dovecot, 1.14.3)
 
 ########################################
 #
@@ -58,6 +58,7 @@
 
 allow dovecot_t self:capability { dac_override dac_read_search chown kill net_bind_service setgid setuid sys_chroot };
 dontaudit dovecot_t self:capability sys_tty_config;
+allow dovecot_t self:capability2 block_suspend;
 allow dovecot_t self:process { setrlimit signal_perms getcap setcap };
 allow dovecot_t self:fifo_file rw_fifo_file_perms;
 allow dovecot_t self:tcp_socket create_stream_socket_perms;
@@ -224,6 +225,8 @@
 
 seutil_dontaudit_search_config(dovecot_auth_t)
 
+sysnet_use_ldap(dovecot_auth_t)
+
 optional_policy(`
 	kerberos_use(dovecot_auth_t)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/drbd.fc refpolicy/policy/modules/contrib/drbd.fc
--- refpolicy/policy/modules/contrib/drbd.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/drbd.fc	2012-09-27 20:03:30.749126498 +0200
@@ -0,0 +1,13 @@
+/etc/rc\.d/init\.d/drbd	--	gen_context(system_u:object_r:drbd_initrc_exec_t,s0)
+
+/sbin/drbdadm	--	gen_context(system_u:object_r:drbd_exec_t,s0)
+/sbin/drbdsetup	--	gen_context(system_u:object_r:drbd_exec_t,s0)
+
+/usr/lib/ocf/resource.\d/linbit/drbd	--	gen_context(system_u:object_r:drbd_exec_t,s0)
+
+/usr/sbin/drbdadm	--	gen_context(system_u:object_r:drbd_exec_t,s0)
+/usr/sbin/drbdsetup	--	gen_context(system_u:object_r:drbd_exec_t,s0)
+
+/var/lib/drbd(/.*)?	gen_context(system_u:object_r:drbd_var_lib_t,s0)
+
+/var/lock/subsys/drbd	--	gen_context(system_u:object_r:drbd_lock_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/drbd.if refpolicy/policy/modules/contrib/drbd.if
--- refpolicy/policy/modules/contrib/drbd.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/drbd.if	2012-09-27 20:03:30.749126498 +0200
@@ -0,0 +1,59 @@
+## <summary>Mirrors a block device over the network to another machine.</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition to
+##	run drbd.
+## </summary>
+## <param name="domain">
+## <summary>
+##	Domain allowed to transition.
+## </summary>
+## </param>
+#
+interface(`drbd_domtrans',`
+	gen_require(`
+		type drbd_t, drbd_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, drbd_exec_t, drbd_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an drbd environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`drbd_admin',`
+	gen_require(`
+		type drbd_t, drbd_initrc_exec_t, drbd_lock_t;
+		type drbd_var_lib_t;
+	')
+
+	allow $1 drbd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, drbd_t)
+
+	init_labeled_script_domtrans($1, drbd_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 drbd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_locks($1)
+	admin_pattern($1, drbd_lock_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, drbd_var_lib_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/drbd.te refpolicy/policy/modules/contrib/drbd.te
--- refpolicy/policy/modules/contrib/drbd.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/drbd.te	2012-09-27 20:03:30.749126498 +0200
@@ -0,0 +1,55 @@
+policy_module(drbd, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type drbd_t;
+type drbd_exec_t;
+init_daemon_domain(drbd_t, drbd_exec_t)
+
+type drbd_initrc_exec_t;
+init_script_file(drbd_initrc_exec_t)
+
+type drbd_var_lib_t;
+files_type(drbd_var_lib_t)
+
+type drbd_lock_t;
+files_lock_file(drbd_lock_t)
+
+########################################
+#
+# Local policy
+#
+
+allow drbd_t self:capability { kill net_admin };
+dontaudit drbd_t self:capability sys_tty_config;
+allow drbd_t self:fifo_file rw_fifo_file_perms;
+allow drbd_t self:unix_stream_socket create_stream_socket_perms;
+allow drbd_t self:netlink_socket create_socket_perms;
+allow drbd_t self:netlink_route_socket rw_netlink_socket_perms;
+
+manage_dirs_pattern(drbd_t, drbd_var_lib_t, drbd_var_lib_t)
+manage_files_pattern(drbd_t, drbd_var_lib_t, drbd_var_lib_t)
+manage_lnk_files_pattern(drbd_t, drbd_var_lib_t, drbd_var_lib_t)
+files_var_lib_filetrans(drbd_t, drbd_var_lib_t, dir)
+
+manage_files_pattern(drbd_t, drbd_lock_t, drbd_lock_t)
+files_lock_filetrans(drbd_t, drbd_lock_t, file)
+
+can_exec(drbd_t, drbd_exec_t)
+
+kernel_read_system_state(drbd_t)
+
+dev_read_rand(drbd_t)
+dev_read_sysfs(drbd_t)
+dev_read_urand(drbd_t)
+
+files_read_etc_files(drbd_t)
+
+storage_raw_read_fixed_disk(drbd_t)
+
+miscfiles_read_localization(drbd_t)
+
+sysnet_dns_name_resolve(drbd_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dspam.fc refpolicy/policy/modules/contrib/dspam.fc
--- refpolicy/policy/modules/contrib/dspam.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/dspam.fc	2012-09-24 21:19:41.307583015 +0200
@@ -0,0 +1,12 @@
+/etc/rc\.d/init\.d/dspam	--	gen_context(system_u:object_r:dspam_initrc_exec_t,s0)
+
+/usr/bin/dspam	--	gen_context(system_u:object_r:dspam_exec_t,s0)
+
+/usr/share/dspam-web/dspam\.cgi	--	gen_context(system_u:object_r:httpd_dspam_script_exec_t,s0)
+
+/var/lib/dspam(/.*)?	gen_context(system_u:object_r:dspam_var_lib_t,s0)
+/var/lib/dspam/data(/.*)?	gen_context(system_u:object_r:httpd_dspam_rw_content_t,s0)
+
+/var/log/dspam(/.*)?	gen_context(system_u:object_r:dspam_log_t,s0)
+
+/var/run/dspam(/.*)?	gen_context(system_u:object_r:dspam_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dspam.if refpolicy/policy/modules/contrib/dspam.if
--- refpolicy/policy/modules/contrib/dspam.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/dspam.if	2012-09-24 21:19:41.307583015 +0200
@@ -0,0 +1,42 @@
+## <summary>Content-based spam filter designed for multi-user enterprise systems.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an dspam environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`dspam_admin',`
+	gen_require(`
+		type dspam_t, dspam_initrc_exec_t, dspam_log_t;
+		type dspam_var_lib_t, dspam_var_run_t;
+	')
+
+	allow $1 dspam_t:process { ptrace signal_perms };
+	ps_process_pattern($1, dspam_t)
+
+	init_labeled_script_domtrans($1, dspam_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 dspam_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, dspam_log_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, dspam_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, dspam_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/dspam.te refpolicy/policy/modules/contrib/dspam.te
--- refpolicy/policy/modules/contrib/dspam.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/dspam.te	2012-09-24 21:19:41.307583015 +0200
@@ -0,0 +1,85 @@
+policy_module(dspam, 1.0.1)
+
+########################################
+#
+# Declarations
+#
+
+type dspam_t;
+type dspam_exec_t;
+init_daemon_domain(dspam_t, dspam_exec_t)
+
+type dspam_initrc_exec_t;
+init_script_file(dspam_initrc_exec_t)
+
+type dspam_log_t;
+logging_log_file(dspam_log_t)
+
+type dspam_var_lib_t;
+files_type(dspam_var_lib_t)
+
+type dspam_var_run_t;
+files_pid_file(dspam_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow dspam_t self:capability net_admin;
+allow dspam_t self:process signal;
+allow dspam_t self:fifo_file rw_fifo_file_perms;
+allow dspam_t self:unix_stream_socket { accept listen };
+
+manage_dirs_pattern(dspam_t, dspam_log_t, dspam_log_t)
+append_files_pattern(dspam_t, dspam_log_t, dspam_log_t)
+create_files_pattern(dspam_t, dspam_log_t, dspam_log_t)
+setattr_files_pattern(dspam_t, dspam_log_t, dspam_log_t)
+logging_log_filetrans(dspam_t, dspam_log_t, dir)
+
+manage_dirs_pattern(dspam_t, dspam_var_lib_t, dspam_var_lib_t)
+manage_files_pattern(dspam_t, dspam_var_lib_t, dspam_var_lib_t)
+files_var_lib_filetrans(dspam_t, dspam_var_lib_t, dir)
+
+manage_dirs_pattern(dspam_t, dspam_var_run_t, dspam_var_run_t)
+manage_files_pattern(dspam_t, dspam_var_run_t, dspam_var_run_t)
+files_pid_filetrans(dspam_t, dspam_var_run_t, dir)
+
+corenet_all_recvfrom_unlabeled(dspam_t)
+corenet_all_recvfrom_netlabel(dspam_t)
+corenet_tcp_sendrecv_generic_if(dspam_t)
+corenet_tcp_sendrecv_generic_node(dspam_t)
+corenet_tcp_bind_generic_node(dspam_t)
+
+corenet_sendrecv_spamd_client_packets(dspam_t)
+corenet_tcp_connect_spamd_port(dspam_t)
+corenet_tcp_sendrecv_spamd_port(dspam_t)
+
+auth_use_nsswitch(dspam_t)
+
+logging_send_syslog_msg(dspam_t)
+
+miscfiles_read_localization(dspam_t)
+
+optional_policy(`
+	apache_content_template(dspam)
+
+	list_dirs_pattern(dspam_t, httpd_dspam_content_t, httpd_dspam_content_t)
+	manage_dirs_pattern(dspam_t, httpd_dspam_rw_content_t, httpd_dspam_rw_content_t)
+	manage_files_pattern(dspam_t, httpd_dspam_rw_content_t, httpd_dspam_rw_content_t)
+')
+
+optional_policy(`
+	mysql_stream_connect(dspam_t)
+	mysql_rw_db_sockets(dspam_t)
+	mysql_read_config(dspam_t)
+
+	mysql_tcp_connect(dspam_t)
+')
+
+optional_policy(`
+	postgresql_stream_connect(dspam_t)
+	postgresql_unpriv_client(dspam_t)
+
+	postgresql_tcp_connect(dspam_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/evolution.te refpolicy/policy/modules/contrib/evolution.te
--- refpolicy/policy/modules/contrib/evolution.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/evolution.te	2012-09-27 20:03:30.750126498 +0200
@@ -1,4 +1,4 @@
-policy_module(evolution, 2.3.0)
+policy_module(evolution, 2.3.1)
 
 ########################################
 #
@@ -283,7 +283,7 @@
 
 optional_policy(`
 	dbus_system_bus_client(evolution_t)
-	dbus_session_bus_client(evolution_t)
+	dbus_all_session_bus_client(evolution_t)
 ')
 
 optional_policy(`
@@ -383,7 +383,7 @@
 ')
 
 optional_policy(`
-	dbus_session_bus_client(evolution_alarm_t)
+	dbus_all_session_bus_client(evolution_alarm_t)
 ')
 
 optional_policy(`
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/fcoe.fc refpolicy/policy/modules/contrib/fcoe.fc
--- refpolicy/policy/modules/contrib/fcoe.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/fcoe.fc	2012-09-24 21:20:43.449583138 +0200
@@ -0,0 +1,6 @@
+/etc/rc\.d/init\.d/fcoe	--	gen_context(system_u:object_r:fcoemon_initrc_exec_t,s0)
+
+/usr/sbin/fcoemon	--	gen_context(system_u:object_r:fcoemon_exec_t,s0)
+
+/var/run/fcm(/.*)?	gen_context(system_u:object_r:fcoemon_var_run_t,s0)
+/var/run/fcoemon\.pid	--	gen_context(system_u:object_r:fcoemon_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/fcoe.if refpolicy/policy/modules/contrib/fcoe.if
--- refpolicy/policy/modules/contrib/fcoe.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/fcoe.if	2012-09-24 21:20:43.449583138 +0200
@@ -0,0 +1,54 @@
+## <summary>Fibre Channel over Ethernet utilities.</summary>
+
+#######################################
+## <summary>
+##	Send to fcoemon with a unix dgram socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`fcoe_dgram_send_fcoemon',`
+	gen_require(`
+		type fcoemon_t, fcoemon_var_run_t;
+	')
+
+	files_search_pids($1)
+	dgram_send_pattern($1, fcoemon_var_run_t, fcoemon_var_run_t, fcoemon_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an fcoemon environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`fcoe_admin',`
+	gen_require(`
+		type fcoemon_t, fcoemon_initrc_exec_t, fcoemon_var_run_t;
+	')
+
+	allow $1 fcoemon_t:process { ptrace signal_perms };
+	ps_process_pattern($1, fcoemon_t)
+
+	init_labeled_script_domtrans($1, fcoemon_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 fcoemon_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_pids($1)
+	admin_pattern($1, fcoemon_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/fcoe.te refpolicy/policy/modules/contrib/fcoe.te
--- refpolicy/policy/modules/contrib/fcoe.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/fcoe.te	2012-09-24 21:20:43.449583138 +0200
@@ -0,0 +1,44 @@
+policy_module(fcoe, 1.0.1)
+
+########################################
+#
+# Declarations
+#
+
+type fcoemon_t;
+type fcoemon_exec_t;
+init_daemon_domain(fcoemon_t, fcoemon_exec_t)
+
+type fcoemon_initrc_exec_t;
+init_script_file(fcoemon_initrc_exec_t)
+
+type fcoemon_var_run_t;
+files_pid_file(fcoemon_var_run_t)
+
+########################################
+#
+# Monitor local policy
+#
+
+allow fcoemon_t self:capability { dac_override kill net_admin };
+allow fcoemon_t self:fifo_file rw_fifo_file_perms;
+allow fcoemon_t self:unix_stream_socket { accept listen };
+allow fcoemon_t self:netlink_socket create_socket_perms;
+allow fcoemon_t self:netlink_route_socket create_netlink_socket_perms;
+
+manage_dirs_pattern(fcoemon_t, fcoemon_var_run_t, fcoemon_var_run_t)
+manage_files_pattern(fcoemon_t, fcoemon_var_run_t, fcoemon_var_run_t)
+manage_sock_files_pattern(fcoemon_t, fcoemon_var_run_t, fcoemon_var_run_t)
+files_pid_filetrans(fcoemon_t, fcoemon_var_run_t, { dir file })
+
+files_read_etc_files(fcoemon_t)
+
+dev_read_sysfs(fcoemon_t)
+
+logging_send_syslog_msg(fcoemon_t)
+
+miscfiles_read_localization(fcoemon_t)
+
+optional_policy(`
+	lldpad_dgram_send(fcoemon_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/git.if refpolicy/policy/modules/contrib/git.if
--- refpolicy/policy/modules/contrib/git.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/git.if	2012-09-27 20:03:30.750126498 +0200
@@ -48,3 +48,33 @@
 		can_exec($2, gitd_exec_t)
 	')
 ')
+
+########################################
+## <summary>
+##	Read generic system content files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`git_read_generic_sys_content_files',`
+	gen_require(`
+		type git_sys_content_t;
+	')
+
+	list_dirs_pattern($1, git_sys_content_t, git_sys_content_t)
+	read_files_pattern($1, git_sys_content_t, git_sys_content_t)
+	files_search_var_lib($1)
+
+	tunable_policy(`git_system_use_cifs',`
+		fs_list_cifs($1)
+		fs_read_cifs_files($1)
+	')
+
+	tunable_policy(`git_system_use_nfs',`
+		fs_list_nfs($1)
+		fs_read_nfs_files($1)
+	')
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/git.te refpolicy/policy/modules/contrib/git.te
--- refpolicy/policy/modules/contrib/git.te	2012-07-25 20:33:04.000000000 +0200
+++ refpolicy/policy/modules/contrib/git.te	2012-09-27 20:03:30.750126498 +0200
@@ -1,4 +1,4 @@
-policy_module(git, 1.2.0)
+policy_module(git, 1.2.1)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/gitosis.fc refpolicy/policy/modules/contrib/gitosis.fc
--- refpolicy/policy/modules/contrib/gitosis.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/gitosis.fc	2012-09-08 19:05:36.701559689 +0200
@@ -6,4 +6,4 @@
 /usr/bin/gl-auth-command		--	gen_context(system_u:object_r:gitosis_exec_t,s0)
 
 /var/lib/gitosis(/.*)?				gen_context(system_u:object_r:gitosis_var_lib_t,s0)
-/var/lib/gitolite(/.*)?				gen_context(system_u:object_r:gitosis_var_lib_t,s0)
+/var/lib/gitolite(3)?(/.*)?			gen_context(system_u:object_r:gitosis_var_lib_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/gitosis.te refpolicy/policy/modules/contrib/gitosis.te
--- refpolicy/policy/modules/contrib/gitosis.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/gitosis.te	2012-09-08 19:05:42.839559699 +0200
@@ -1,4 +1,4 @@
-policy_module(gitosis, 1.3.0)
+policy_module(gitosis, 1.3.1)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/gpg.if refpolicy/policy/modules/contrib/gpg.if
--- refpolicy/policy/modules/contrib/gpg.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/gpg.if	2012-09-27 20:03:30.750126498 +0200
@@ -103,6 +103,25 @@
 	can_exec($1, gpg_exec_t)
 ')
 
+######################################
+## <summary>
+##	Execute gpg in the gpg web domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`gpg_domtrans_web',`
+	gen_require(`
+		type gpg_web_t, gpg_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, gpg_exec_t, gpg_web_t)
+')
+
 ########################################
 ## <summary>
 ##	Send generic signals to user gpg processes.
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/gpg.te refpolicy/policy/modules/contrib/gpg.te
--- refpolicy/policy/modules/contrib/gpg.te	2012-09-28 19:56:53.981040253 +0200
+++ refpolicy/policy/modules/contrib/gpg.te	2012-09-27 20:03:30.751126498 +0200
@@ -1,4 +1,4 @@
-policy_module(gpg, 2.6.0)
+policy_module(gpg, 2.6.3)
 
 ########################################
 #
@@ -55,6 +55,11 @@
 type gpg_pinentry_tmpfs_t;
 userdom_user_tmpfs_file(gpg_pinentry_tmpfs_t)
 
+type gpg_web_t;
+domain_type(gpg_web_t)
+domain_entry_file(gpg_web_t, gpg_exec_t)
+role system_r types gpg_web_t;
+
 ########################################
 #
 # GPG local policy
@@ -223,6 +228,7 @@
 corecmd_search_bin(gpg_agent_t)
 corecmd_exec_shell(gpg_agent_t)
 
+dev_read_rand(gpg_agent_t)
 dev_read_urand(gpg_agent_t)
 
 domain_use_interactive_fds(gpg_agent_t)
@@ -335,7 +341,7 @@
 ')
 
 optional_policy(`
-	dbus_session_bus_client(gpg_pinentry_t)
+	dbus_all_session_bus_client(gpg_pinentry_t)
 	dbus_system_bus_client(gpg_pinentry_t)
 ')
 
@@ -356,3 +362,23 @@
 optional_policy(`
 	xserver_user_x_domain_template(gpg_pinentry, gpg_pinentry_t, gpg_pinentry_tmpfs_t)
 ')
+
+#############################
+#
+# Web local policy
+#
+
+allow gpg_web_t self:process setrlimit;
+
+dev_read_rand(gpg_web_t)
+dev_read_urand(gpg_web_t)
+
+can_exec(gpg_web_t, gpg_exec_t)
+
+files_read_usr_files(gpg_web_t)
+
+miscfiles_read_localization(gpg_web_t)
+
+optional_policy(`
+	apache_manage_sys_rw_content(gpg_web_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/hadoop.fc refpolicy/policy/modules/contrib/hadoop.fc
--- refpolicy/policy/modules/contrib/hadoop.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/hadoop.fc	2012-08-09 17:44:03.801882165 +0200
@@ -1,12 +1,5 @@
 /etc/hadoop.*							gen_context(system_u:object_r:hadoop_etc_t,s0)
 
-/etc/init\.d/hadoop-(.*-)?datanode			--	gen_context(system_u:object_r:hadoop_datanode_initrc_exec_t,s0)
-/etc/init\.d/hadoop-(.*-)?jobtracker			--	gen_context(system_u:object_r:hadoop_jobtracker_initrc_exec_t,s0)
-/etc/init\.d/hadoop-(.*-)?namenode			--	gen_context(system_u:object_r:hadoop_namenode_initrc_exec_t,s0)
-/etc/init\.d/hadoop-(.*-)?secondarynamenode		--	gen_context(system_u:object_r:hadoop_secondarynamenode_initrc_exec_t,s0)
-/etc/init\.d/hadoop-(.*-)?tasktracker			--	gen_context(system_u:object_r:hadoop_tasktracker_initrc_exec_t,s0)
-/etc/init\.d/zookeeper					--	gen_context(system_u:object_r:zookeeper_server_initrc_exec_t,s0)
-
 /etc/rc\.d/init\.d/hadoop-(.*-)?datanode		--	gen_context(system_u:object_r:hadoop_datanode_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/hadoop-(.*-)?jobtracker		--	gen_context(system_u:object_r:hadoop_jobtracker_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/hadoop-(.*-)?namenode		--	gen_context(system_u:object_r:hadoop_namenode_initrc_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/hal.fc refpolicy/policy/modules/contrib/hal.fc
--- refpolicy/policy/modules/contrib/hal.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/hal.fc	2012-09-28 19:41:35.399019034 +0200
@@ -19,12 +19,10 @@
 /var/lib/hal(/.*)?				gen_context(system_u:object_r:hald_var_lib_t,s0)
 
 /var/log/pm(/.*)?				gen_context(system_u:object_r:hald_log_t,s0)
-/var/log/pm-.*\.log.*				gen_context(system_u:object_r:hald_log_t,s0)
 
 /var/run/hald(/.*)?				gen_context(system_u:object_r:hald_var_run_t,s0)
 /var/run/haldaemon\.pid	--	 		gen_context(system_u:object_r:hald_var_run_t,s0)
 /var/run/pm(/.*)?				gen_context(system_u:object_r:hald_var_run_t,s0)
-/var/run/pm-utils(/.*)?				gen_context(system_u:object_r:hald_var_run_t,s0)
 /var/run/synce.*	 			gen_context(system_u:object_r:hald_var_run_t,s0)
 /var/run/vbe.*	 	--			gen_context(system_u:object_r:hald_var_run_t,s0)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/hal.if refpolicy/policy/modules/contrib/hal.if
--- refpolicy/policy/modules/contrib/hal.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/hal.if	2012-09-28 19:41:35.409019031 +0200
@@ -316,7 +316,6 @@
 
 	# log files for hald
 	manage_files_pattern($1, hald_log_t, hald_log_t)
-	logging_log_filetrans($1, hald_log_t, file)
 ')
 
 ########################################
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/hal.te refpolicy/policy/modules/contrib/hal.te
--- refpolicy/policy/modules/contrib/hal.te	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/hal.te	2012-09-28 19:41:35.409019031 +0200
@@ -1,4 +1,4 @@
-policy_module(hal, 1.14.0)
+policy_module(hal, 1.14.1)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/inetd.fc refpolicy/policy/modules/contrib/inetd.fc
--- refpolicy/policy/modules/contrib/inetd.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/inetd.fc	2012-07-28 18:51:36.802314860 +0200
@@ -1,7 +1,7 @@
+/usr/lib/pysieved/pysieved.*\.py -- gen_context(system_u:object_r:inetd_child_exec_t,s0)
 
 /usr/sbin/identd	--	gen_context(system_u:object_r:inetd_child_exec_t,s0)
 /usr/sbin/in\..*d	--	gen_context(system_u:object_r:inetd_child_exec_t,s0)
-/usr/local/lib/pysieved/pysieved.*\.py -- gen_context(system_u:object_r:inetd_child_exec_t,s0)
 
 /usr/sbin/inetd		--	gen_context(system_u:object_r:inetd_exec_t,s0)
 /usr/sbin/rlinetd	--	gen_context(system_u:object_r:inetd_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/kerberos.if refpolicy/policy/modules/contrib/kerberos.if
--- refpolicy/policy/modules/contrib/kerberos.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/kerberos.if	2012-09-27 20:03:30.751126498 +0200
@@ -296,6 +296,35 @@
 
 ########################################
 ## <summary>
+##	Create objects in generic temporary
+##	directories with host rcache type.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="object_class">
+##	<summary>
+##	Class of the object being created.
+##	</summary>
+## </param>
+## <param name="name" optional="true">
+##	<summary>
+##	The name of the object being created.
+##	</summary>
+## </param>
+#
+interface(`kerberos_tmp_filetrans_host_rcache',`
+	gen_require(`
+		type krb5_host_rcache_t;
+	')
+
+	files_tmp_filetrans($1, krb5_host_rcache_t, $2, $3)
+')
+
+########################################
+## <summary>
 ##	Connect to krb524 service
 ## </summary>
 ## <param name="domain">
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/kerberos.te refpolicy/policy/modules/contrib/kerberos.te
--- refpolicy/policy/modules/contrib/kerberos.te	2012-07-10 14:45:57.000000000 +0200
+++ refpolicy/policy/modules/contrib/kerberos.te	2012-09-27 20:03:30.751126498 +0200
@@ -1,4 +1,4 @@
-policy_module(kerberos, 1.11.0)
+policy_module(kerberos, 1.11.1)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ldap.if refpolicy/policy/modules/contrib/ldap.if
--- refpolicy/policy/modules/contrib/ldap.if	2012-09-28 19:56:54.046040254 +0200
+++ refpolicy/policy/modules/contrib/ldap.if	2012-09-27 20:03:30.751126498 +0200
@@ -74,6 +74,27 @@
 
 ########################################
 ## <summary>
+## 	Connect to ldap over the network.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`ldap_tcp_connect',`
+	gen_require(`
+		type slapd_t;
+	')
+
+	corenet_sendrecv_ldap_client_packets($1)
+	corenet_tcp_connect_ldap_port($1)
+	corenet_tcp_recvfrom_labeled($1, slapd_t)
+	corenet_tcp_sendrecv_ldap_port($1)
+')
+
+########################################
+## <summary>
 ##	All of the rules required to administrate
 ##	an ldap environment
 ## </summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ldap.te refpolicy/policy/modules/contrib/ldap.te
--- refpolicy/policy/modules/contrib/ldap.te	2012-09-28 19:56:54.045040254 +0200
+++ refpolicy/policy/modules/contrib/ldap.te	2012-09-27 20:03:30.751126498 +0200
@@ -1,4 +1,4 @@
-policy_module(ldap, 1.10.0)
+policy_module(ldap, 1.10.1)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/lightsquid.fc refpolicy/policy/modules/contrib/lightsquid.fc
--- refpolicy/policy/modules/contrib/lightsquid.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/lightsquid.fc	2012-09-24 21:06:32.840581325 +0200
@@ -0,0 +1,11 @@
+/etc/cron\.daily/lightsquid	--	gen_context(system_u:object_r:lightsquid_exec_t,s0)
+
+/usr/lib/cgi-bin/lightsquid/.*\.cfg	--	gen_context(system_u:object_r:httpd_lightsquid_content_t,s0)
+/usr/lib/cgi-bin/lightsquid/.*\.cgi	--	gen_context(system_u:object_r:httpd_lightsquid_script_exec_t,s0)
+
+/usr/share/lightsquid/cgi/.*\.cgi	--	gen_context(system_u:object_r:httpd_lightsquid_script_exec_t,s0)
+
+/var/lightsquid(/.*)?	gen_context(system_u:object_r:lightsquid_rw_content_t,s0)
+
+/var/www/html/lightsquid(/.*)?	gen_context(system_u:object_r:httpd_lightsquid_content_t,s0)
+/var/www/html/lightsquid/report(/.*)?	gen_context(system_u:object_r:lightsquid_rw_content_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/lightsquid.if refpolicy/policy/modules/contrib/lightsquid.if
--- refpolicy/policy/modules/contrib/lightsquid.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/lightsquid.if	2012-09-24 21:06:32.840581325 +0200
@@ -0,0 +1,80 @@
+## <summary>Log analyzer for squid proxy.</summary>
+
+########################################
+## <summary>
+##	Execute the lightsquid program in
+##	the lightsquid domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`lightsquid_domtrans',`
+	gen_require(`
+		type lightsquid_t, lightsquid_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, lightsquid_exec_t, lightsquid_t)
+')
+
+########################################
+## <summary>
+##	Execute lightsquid in the
+##	lightsquid domain, and allow the
+##	specified role the lightsquid domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+#
+interface(`lightsquid_run',`
+	gen_require(`
+		attribute_role lightsquid_roles;
+	')
+
+	lightsquid_domtrans($1)
+	roleattribute $2 lightsquid_roles;
+')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an lightsquid environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`lightsquid_admin',`
+	gen_require(`
+		type lightsquid_t, lightsquid_rw_content_t;
+	')
+
+	allow $1 lightsquid_t:process { ptrace signal_perms };
+	ps_process_pattern($1, lightsquid_t)
+
+	lightsquid_run($1, $2)
+
+	files_search_var_lib($1)
+	admin_pattern($1, lightsquid_rw_content_t)
+
+	apache_list_sys_content($1)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/lightsquid.te refpolicy/policy/modules/contrib/lightsquid.te
--- refpolicy/policy/modules/contrib/lightsquid.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/lightsquid.te	2012-09-24 21:06:32.840581325 +0200
@@ -0,0 +1,52 @@
+policy_module(lightsquid, 1.0.2)
+
+########################################
+#
+# Declarations
+#
+
+attribute_role lightsquid_roles;
+roleattribute system_r lightsquid_roles;
+
+type lightsquid_t;
+type lightsquid_exec_t;
+application_domain(lightsquid_t, lightsquid_exec_t)
+role lightsquid_roles types lightsquid_t;
+
+type lightsquid_rw_content_t;
+files_type(lightsquid_rw_content_t)
+
+########################################
+#
+# Local policy
+#
+
+manage_dirs_pattern(lightsquid_t, lightsquid_rw_content_t, lightsquid_rw_content_t)
+manage_files_pattern(lightsquid_t, lightsquid_rw_content_t, lightsquid_rw_content_t)
+manage_lnk_files_pattern(lightsquid_t, lightsquid_rw_content_t, lightsquid_rw_content_t)
+files_var_filetrans(lightsquid_t, lightsquid_rw_content_t, dir)
+
+corecmd_exec_bin(lightsquid_t)
+corecmd_exec_shell(lightsquid_t)
+
+dev_read_urand(lightsquid_t)
+
+files_read_etc_files(lightsquid_t)
+files_read_usr_files(lightsquid_t)
+
+miscfiles_read_localization(lightsquid_t)
+
+squid_read_config(lightsquid_t)
+squid_read_log(lightsquid_t)
+
+optional_policy(`
+	apache_content_template(lightsquid)
+
+	list_dirs_pattern(httpd_lightsquid_script_t, lightsquid_rw_content_t, lightsquid_rw_content_t)
+	read_files_pattern(httpd_lightsquid_script_t, lightsquid_rw_content_t, lightsquid_rw_content_t)
+	read_lnk_files_pattern(httpd_lightsquid_script_t, lightsquid_rw_content_t, lightsquid_rw_content_t)
+')
+
+optional_policy(`
+	cron_system_entry(lightsquid_t, lightsquid_exec_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/lldpad.fc refpolicy/policy/modules/contrib/lldpad.fc
--- refpolicy/policy/modules/contrib/lldpad.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/lldpad.fc	2012-09-24 21:21:45.875583272 +0200
@@ -0,0 +1,7 @@
+/etc/rc\.d/init\.d/lldpad	--	gen_context(system_u:object_r:lldpad_initrc_exec_t,s0)
+
+/usr/sbin/lldpad	--	gen_context(system_u:object_r:lldpad_exec_t,s0)
+
+/var/lib/lldpad(/.*)?	gen_context(system_u:object_r:lldpad_var_lib_t,s0)
+
+/var/run/lldpad.*	gen_context(system_u:object_r:lldpad_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/lldpad.if refpolicy/policy/modules/contrib/lldpad.if
--- refpolicy/policy/modules/contrib/lldpad.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/lldpad.if	2012-09-24 21:21:45.875583272 +0200
@@ -0,0 +1,58 @@
+## <summary>Intel LLDP Agent.</summary>
+
+#######################################
+## <summary>
+##	Send to lldpad with a unix dgram socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`lldpad_dgram_send',`
+	gen_require(`
+		type lldpad_t, lldpad_var_run_t;
+	')
+
+	files_search_pids($1)
+	dgram_send_pattern($1, lldpad_var_run_t, lldpad_var_run_t, lldpad_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an lldpad environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`lldpad_admin',`
+	gen_require(`
+		type lldpad_t, lldpad_initrc_exec_t, lldpad_var_lib_t;
+		type lldpad_var_run_t;
+	')
+
+	allow $1 lldpad_t:process { ptrace signal_perms };
+	ps_process_pattern($1, lldpad_t)
+
+	init_labeled_script_domtrans($1, lldpad_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 lldpad_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_var_lib($1)
+	admin_pattern($1, lldpad_var_lib_t)
+
+	files_search_pids($1)
+	admin_pattern($1, lldpad_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/lldpad.te refpolicy/policy/modules/contrib/lldpad.te
--- refpolicy/policy/modules/contrib/lldpad.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/lldpad.te	2012-09-24 21:21:45.875583272 +0200
@@ -0,0 +1,62 @@
+policy_module(lldpad, 1.0.1)
+
+########################################
+#
+# Declarations
+#
+
+type lldpad_t;
+type lldpad_exec_t;
+init_daemon_domain(lldpad_t, lldpad_exec_t)
+
+type lldpad_initrc_exec_t;
+init_script_file(lldpad_initrc_exec_t)
+
+type lldpad_tmpfs_t;
+files_tmpfs_file(lldpad_tmpfs_t)
+
+type lldpad_var_lib_t;
+files_type(lldpad_var_lib_t)
+
+type lldpad_var_run_t;
+files_pid_file(lldpad_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow lldpad_t self:capability { net_admin net_raw };
+allow lldpad_t self:shm create_shm_perms;
+allow lldpad_t self:fifo_file rw_fifo_file_perms;
+allow lldpad_t self:unix_stream_socket { accept listen };
+allow lldpad_t self:netlink_route_socket create_netlink_socket_perms;
+allow lldpad_t self:packet_socket create_socket_perms;
+allow lldpad_t self:udp_socket create_socket_perms;
+
+manage_files_pattern(lldpad_t, lldpad_tmpfs_t, lldpad_tmpfs_t)
+fs_tmpfs_filetrans(lldpad_t, lldpad_tmpfs_t, file)
+
+manage_dirs_pattern(lldpad_t, lldpad_var_lib_t, lldpad_var_lib_t)
+manage_files_pattern(lldpad_t, lldpad_var_lib_t, lldpad_var_lib_t)
+
+manage_dirs_pattern(lldpad_t, lldpad_var_run_t, lldpad_var_run_t)
+manage_files_pattern(lldpad_t, lldpad_var_run_t, lldpad_var_run_t)
+manage_sock_files_pattern(lldpad_t, lldpad_var_run_t, lldpad_var_run_t)
+files_pid_filetrans(lldpad_t, lldpad_var_run_t, { dir file sock_file })
+
+kernel_read_all_sysctls(lldpad_t)
+kernel_read_network_state(lldpad_t)
+kernel_request_load_module(lldpad_t)
+
+dev_read_sysfs(lldpad_t)
+
+files_read_etc_files(lldpad_t)
+
+logging_send_syslog_msg(lldpad_t)
+
+miscfiles_read_localization(lldpad_t)
+
+optional_policy(`
+	fcoe_dgram_send_fcoemon(lldpad_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/lpd.fc refpolicy/policy/modules/contrib/lpd.fc
--- refpolicy/policy/modules/contrib/lpd.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/lpd.fc	2012-08-09 17:23:42.237833218 +0200
@@ -16,6 +16,8 @@
 /usr/bin/lprm(\.cups)?	--	gen_context(system_u:object_r:lpr_exec_t,s0)
 /usr/bin/lpstat(\.cups)? --	gen_context(system_u:object_r:lpr_exec_t,s0)
 
+/usr/local/linuxprinter/bin/l?lpr -- gen_context(system_u:object_r:lpr_exec_t,s0)
+
 /usr/sbin/accept	--	gen_context(system_u:object_r:lpr_exec_t,s0)
 /usr/sbin/checkpc	--	gen_context(system_u:object_r:checkpc_exec_t,s0)
 /usr/sbin/lpd		--	gen_context(system_u:object_r:lpd_exec_t,s0)
@@ -24,8 +26,6 @@
 /usr/sbin/lpinfo	--	gen_context(system_u:object_r:lpr_exec_t,s0)
 /usr/sbin/lpmove	--	gen_context(system_u:object_r:lpr_exec_t,s0)
 
-/usr/local/linuxprinter/bin/l?lpr -- gen_context(system_u:object_r:lpr_exec_t,s0)
-
 /usr/share/printconf/.* --	gen_context(system_u:object_r:printconf_t,s0)
 
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/lpd.te refpolicy/policy/modules/contrib/lpd.te
--- refpolicy/policy/modules/contrib/lpd.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/lpd.te	2012-09-08 19:09:41.995560209 +0200
@@ -1,4 +1,4 @@
-policy_module(lpd, 1.13.0)
+policy_module(lpd, 1.13.1)
 
 ########################################
 #
@@ -236,6 +236,7 @@
 # Allow lpd to read, rename, and unlink spool files.
 allow lpd_t print_spool_t:file { read_file_perms rename_file_perms delete_file_perms };
 
+kernel_read_crypto_sysctls(lpr_t)
 kernel_read_kernel_sysctls(lpr_t)
 
 corenet_all_recvfrom_unlabeled(lpr_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/mailscanner.fc refpolicy/policy/modules/contrib/mailscanner.fc
--- refpolicy/policy/modules/contrib/mailscanner.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/mailscanner.fc	2012-09-24 21:08:19.189581549 +0200
@@ -0,0 +1,11 @@
+/etc/MailScanner(/.*)?	gen_context(system_u:object_r:mscan_etc_t,s0)
+
+/etc/rc\.d/init\.d/MailScanner	--	gen_context(system_u:object_r:mscan_initrc_exec_t,s0)
+
+/etc/sysconfig/MailScanner	--	gen_context(system_u:object_r:mscan_etc_t,s0)
+
+/etc/sysconfig/update_spamassassin	--	gen_context(system_u:object_r:mscan_etc_t,s0)
+
+/usr/sbin/MailScanner	--	gen_context(system_u:object_r:mscan_exec_t,s0)
+
+/var/run/MailScanner\.pid	--	gen_context(system_u:object_r:mscan_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/mailscanner.if refpolicy/policy/modules/contrib/mailscanner.if
--- refpolicy/policy/modules/contrib/mailscanner.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/mailscanner.if	2012-09-24 21:08:19.189581549 +0200
@@ -0,0 +1,39 @@
+## <summary>E-mail security and anti-spam package for e-mail gateway systems.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an mscan environment
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`mscan_admin',`
+	gen_require(`
+		type mscan_t, mscan_etc_t, mscan_initrc_exec_t;
+		type mscan_var_run_t;
+	')
+
+	allow $1 mscan_t:process { ptrace signal_perms };
+	ps_process_pattern($1, mscan_t)
+
+	init_labeled_script_domtrans($1, mscan_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 mscan_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_etc($1)
+	admin_pattern($1, mscan_etc_t)
+
+	files_search_pids($1
+	admin_pattern($1, mscan_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/mailscanner.te refpolicy/policy/modules/contrib/mailscanner.te
--- refpolicy/policy/modules/contrib/mailscanner.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/mailscanner.te	2012-09-24 21:08:19.189581549 +0200
@@ -0,0 +1,95 @@
+policy_module(mailscanner, 1.0.1)
+
+########################################
+#
+# Declarations
+#
+
+type mscan_t;
+type mscan_exec_t;
+init_daemon_domain(mscan_t, mscan_exec_t)
+
+type mscan_initrc_exec_t;
+init_script_file(mscan_initrc_exec_t)
+
+type mscan_etc_t;
+files_config_file(mscan_etc_t)
+
+type mscan_tmp_t;
+files_tmp_file(mscan_tmp_t)
+
+type mscan_var_run_t;
+files_pid_file(mscan_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow mscan_t self:capability { setuid chown setgid dac_override };
+allow mscan_t self:process signal;
+allow mscan_t self:fifo_file rw_fifo_file_perms;
+
+read_files_pattern(mscan_t, mscan_etc_t, mscan_etc_t)
+
+manage_files_pattern(mscan_t, mscan_var_run_t, mscan_var_run_t)
+files_pid_filetrans(mscan_t, mscan_var_run_t, file)
+
+manage_dirs_pattern(mscan_t, mscan_tmp_t, mscan_tmp_t)
+manage_files_pattern(mscan_t, mscan_tmp_t, mscan_tmp_t)
+files_tmp_filetrans(mscan_t, mscan_tmp_t, { dir file })
+
+can_exec(mscan_t, mscan_exec_t)
+
+kernel_read_system_state(mscan_t)
+
+corecmd_exec_bin(mscan_t)
+corecmd_exec_shell(mscan_t)
+
+corenet_all_recvfrom_netlabel(mscan_t)
+corenet_all_recvfrom_unlabeled(mscan_t)
+corenet_tcp_bind_generic_node(mscan_t)
+corenet_udp_bind_generic_node(mscan_t)
+corenet_tcp_sendrecv_generic_if(mscan_t)
+corenet_udp_sendrecv_generic_if(mscan_t)
+corenet_tcp_sendrecv_generic_node(mscan_t)
+corenet_udp_sendrecv_generic_node(mscan_t)
+
+corenet_sendrecv_trisoap_client_packets(mscan_t)
+corenet_tcp_connect_trisoap_port(mscan_t)
+corenet_tcp_sendrecv_trisoap_port(mscan_t)
+
+corenet_sendrecv_generic_server_packets(mscan_t)
+corenet_udp_bind_generic_port(mscan_t)
+corenet_udp_sendrecv_all_ports(mscan_t)
+
+dev_read_urand(mscan_t)
+
+files_read_usr_files(mscan_t)
+
+fs_getattr_xattr_fs(mscan_t)
+
+auth_dontaudit_read_shadow(mscan_t)
+auth_use_nsswitch(mscan_t)
+
+logging_send_syslog_msg(mscan_t)
+
+miscfiles_read_localization(mscan_t)
+
+optional_policy(`
+	clamav_domtrans_clamscan(mscan_t)
+	clamav_manage_pid_content(mscan_t)
+')
+
+optional_policy(`
+	mta_send_mail(mscan_t)
+	mta_manage_queue(mscan_t)
+')
+
+optional_policy(`
+	procmail_domtrans(mscan_t)
+')
+
+optional_policy(`
+	spamassassin_read_lib_files(mscan_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/mcelog.fc refpolicy/policy/modules/contrib/mcelog.fc
--- refpolicy/policy/modules/contrib/mcelog.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/mcelog.fc	2012-08-08 20:50:37.535868689 +0200
@@ -1 +1,13 @@
+/etc/mcelog(/.*)?		gen_context(system_u:object_r:mcelog_etc_t,s0)
+
+ifdef(`distro_redhat',`
+/etc/mcelog/triggers	-d	gen_context(system_u:object_r:mcelog_etc_t,s0)
+')
+
+/etc/rc\.d/init\.d/mcelog --	gen_context(system_u:object_r:mcelog_initrc_exec_t,s0)
+
 /usr/sbin/mcelog	--	gen_context(system_u:object_r:mcelog_exec_t,s0)
+
+/var/log/mcelog.*	--	gen_context(system_u:object_r:mcelog_log_t,s0)
+/var/run/mcelog\.pid	--	gen_context(system_u:object_r:mcelog_var_run_t,s0)
+/var/run/mcelog-client	-s	gen_context(system_u:object_r:mcelog_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/mcelog.te refpolicy/policy/modules/contrib/mcelog.te
--- refpolicy/policy/modules/contrib/mcelog.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/mcelog.te	2012-09-08 18:01:25.298551468 +0200
@@ -1,14 +1,70 @@
-policy_module(mcelog, 1.1.0)
+policy_module(mcelog, 1.1.1)
 
 ########################################
 #
 # Declarations
 #
 
+## <desc>
+## <p>
+## Allow mcelog to run in client mode.
+## Required to run mcelog in client
+## mode.
+## </p>
+## </desc>
+gen_tunable(mcelog_client, false)
+
+## <desc>
+## <p>
+## Allow mcelog to execute scripts.
+## Required to execute optional triggers
+## and/or local scripts.
+## </p>
+## </desc>
+gen_tunable(mcelog_exec_scripts, false)
+
+## <desc>
+## <p>
+## Allow mcelog to use all the user ttys.
+## Required in foreground mode and to
+## print out usage and version information.
+## </p>
+## </desc>
+gen_tunable(mcelog_foreground, false)
+
+## <desc>
+## <p>
+## Allow mcelog to run a server.
+## Required to enable the optional configurable
+## Unix stream socket server functionality.
+## </p>
+## </desc>
+gen_tunable(mcelog_server, false)
+
+## <desc>
+## <p>
+## Allow mcelog to use syslog.
+## Required to use the configurable
+## syslog option.
+## </p>
+## </desc>
+gen_tunable(mcelog_syslog, false)
+
 type mcelog_t;
 type mcelog_exec_t;
-application_domain(mcelog_t, mcelog_exec_t)
-cron_system_entry(mcelog_t, mcelog_exec_t)
+init_daemon_domain(mcelog_t, mcelog_exec_t)
+
+type mcelog_initrc_exec_t;
+init_script_file(mcelog_initrc_exec_t)
+
+type mcelog_etc_t;
+files_config_file(mcelog_etc_t)
+
+type mcelog_log_t;
+logging_log_file(mcelog_log_t)
+
+type mcelog_var_run_t;
+files_pid_file(mcelog_var_run_t)
 
 ########################################
 #
@@ -16,17 +72,64 @@
 #
 
 allow mcelog_t self:capability sys_admin;
+allow mcelog_t self:unix_stream_socket connected_socket_perms;
+allow mcelog_t mcelog_etc_t:dir list_dir_perms;
+
+read_files_pattern(mcelog_t, mcelog_etc_t, mcelog_etc_t)
+
+# manage a logfile in a generic or private log directory
+manage_dirs_pattern(mcelog_t, mcelog_log_t, mcelog_log_t)
+manage_files_pattern(mcelog_t, mcelog_log_t, mcelog_log_t)
+logging_log_filetrans(mcelog_t, mcelog_log_t, file)
+
+manage_files_pattern(mcelog_t, mcelog_var_run_t, mcelog_var_run_t)
+manage_sock_files_pattern(mcelog_t, mcelog_var_run_t, mcelog_var_run_t)
+files_pid_filetrans(mcelog_t, mcelog_var_run_t, { file sock_file })
 
 kernel_read_system_state(mcelog_t)
 
 dev_read_raw_memory(mcelog_t)
 dev_read_kmsg(mcelog_t)
+dev_rw_sysfs(mcelog_t)
 
 files_read_etc_files(mcelog_t)
 
 # for /dev/mem access
 mls_file_read_all_levels(mcelog_t)
 
-logging_send_syslog_msg(mcelog_t)
+locallogin_use_fds(mcelog_t)
 
 miscfiles_read_localization(mcelog_t)
+
+# needed in client-mode
+tunable_policy(`mcelog_client',`
+	allow mcelog_t self:unix_stream_socket connectto;
+')
+
+# required for executing optional triggers and scripts
+tunable_policy(`mcelog_exec_scripts',`
+	allow mcelog_t self:fifo_file { read getattr write };
+	corecmd_exec_bin(mcelog_t)
+	corecmd_exec_shell(mcelog_t)
+')
+
+# required for optional foreground mode and
+# console output
+tunable_policy(`mcelog_foreground',`
+	userdom_use_user_terminals(mcelog_t)
+')
+
+# required for the optional server functionality
+tunable_policy(`mcelog_server',`
+	allow mcelog_t self:unix_stream_socket { listen accept };
+')
+
+# use syslog functionality (optional, configurable)
+tunable_policy(`mcelog_syslog',`
+	logging_send_syslog_msg(mcelog_t)
+')
+
+# optional support for running it as a cron job
+optional_policy(`
+	cron_system_entry(mcelog_t, mcelog_exec_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/memcached.if refpolicy/policy/modules/contrib/memcached.if
--- refpolicy/policy/modules/contrib/memcached.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/memcached.if	2012-09-27 20:03:30.752126498 +0200
@@ -21,6 +21,26 @@
 
 ########################################
 ## <summary>
+##	Create, read, write, and delete
+##	memcached lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`memcached_manage_pid_files',`
+	gen_require(`
+		type memcached_var_run_t;
+	')
+
+	files_search_pids($1)
+	manage_files_pattern($1, memcached_var_run_t, memcached_var_run_t)
+')
+
+########################################
+## <summary>
 ##	Read memcached PID files.
 ## </summary>
 ## <param name="domain">
@@ -39,6 +59,47 @@
 ')
 
 ########################################
+## <summary>
+##	Connect to memcached with a
+##	unix stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`memcached_stream_connect',`
+	gen_require(`
+		type memcached_t, memcached_var_run_t;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, memcached_var_run_t, memcached_var_run_t, memcached_t)
+')
+
+########################################
+## <summary>
+## 	Connect to memcache over the network.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`memcached_tcp_connect',`
+	gen_require(`
+		type memcached_t;
+	')
+
+	corenet_sendrecv_memcache_client_packets($1)
+	corenet_tcp_connect_memcache_port($1)
+	corenet_tcp_recvfrom_labeled($1, memcached_t)
+	corenet_tcp_sendrecv_memcache_port($1)
+')
+
+########################################
 ## <summary>
 ##	All of the rules required to administrate 
 ##	an memcached environment
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/memcached.te refpolicy/policy/modules/contrib/memcached.te
--- refpolicy/policy/modules/contrib/memcached.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/memcached.te	2012-09-27 20:03:30.752126498 +0200
@@ -1,4 +1,4 @@
-policy_module(memcached, 1.2.0)
+policy_module(memcached, 1.2.2)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/milter.fc refpolicy/policy/modules/contrib/milter.fc
--- refpolicy/policy/modules/contrib/milter.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/milter.fc	2012-09-08 19:12:02.186560511 +0200
@@ -1,15 +1,18 @@
 /usr/sbin/milter-greylist	--	gen_context(system_u:object_r:greylist_milter_exec_t,s0)
 /usr/sbin/milter-regex		--	gen_context(system_u:object_r:regex_milter_exec_t,s0)
 /usr/sbin/spamass-milter	--	gen_context(system_u:object_r:spamass_milter_exec_t,s0)
+/usr/sbin/sqlgrey		--	gen_context(system_u:object_r:greylist_milter_exec_t,s0)
 
 /var/lib/milter-greylist(/.*)?		gen_context(system_u:object_r:greylist_milter_data_t,s0)
 /var/lib/spamass-milter(/.*)?		gen_context(system_u:object_r:spamass_milter_state_t,s0)
+/var/lib/sqlgrey(/.*)?			gen_context(system_u:object_r:greylist_milter_data_t,s0)
 
 /var/run/milter-greylist(/.*)?		gen_context(system_u:object_r:greylist_milter_data_t,s0)
 /var/run/milter-greylist\.pid	--	gen_context(system_u:object_r:greylist_milter_data_t,s0)
 /var/run/spamass(/.*)?			gen_context(system_u:object_r:spamass_milter_data_t,s0)
 /var/run/spamass-milter(/.*)?		gen_context(system_u:object_r:spamass_milter_data_t,s0)
 /var/run/spamass-milter\.pid	--	gen_context(system_u:object_r:spamass_milter_data_t,s0)
+/var/run/sqlgrey\.pid		--	gen_context(system_u:object_r:greylist_milter_data_t,s0)
 
 /var/spool/milter-regex(/.*)?		gen_context(system_u:object_r:regex_milter_data_t,s0)
 /var/spool/postfix/spamass(/.*)?	gen_context(system_u:object_r:spamass_milter_data_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/milter.te refpolicy/policy/modules/contrib/milter.te
--- refpolicy/policy/modules/contrib/milter.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/milter.te	2012-09-08 19:13:42.697560727 +0200
@@ -1,4 +1,4 @@
-policy_module(milter, 1.4.0)
+policy_module(milter, 1.4.2)
 
 ########################################
 #
@@ -38,6 +38,10 @@
 
 kernel_read_kernel_sysctls(greylist_milter_t)
 
+dev_read_rand(greylist_milter_t)
+dev_read_urand(greylist_milter_t)
+
+files_read_etc_files(greylist_milter_t)
 # Allow the milter to read a GeoIP database in /usr/share
 files_read_usr_files(greylist_milter_t)
 # The milter runs from /var/lib/milter-greylist and maintains files there
@@ -46,9 +50,17 @@
 # Look up username for dropping privs
 auth_use_nsswitch(greylist_milter_t)
 
+miscfiles_read_localization(greylist_milter_t)
+
+sysnet_read_config(greylist_milter_t)
+
 # Config is in /etc/mail/greylist.conf
 mta_read_config(greylist_milter_t)
 
+optional_policy(`
+	mysql_stream_connect(greylist_milter_t)
+')
+
 ########################################
 #
 # milter-regex local policy
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/mozilla.te refpolicy/policy/modules/contrib/mozilla.te
--- refpolicy/policy/modules/contrib/mozilla.te	2012-09-28 19:56:54.146040256 +0200
+++ refpolicy/policy/modules/contrib/mozilla.te	2012-09-27 20:03:30.752126498 +0200
@@ -1,4 +1,4 @@
-policy_module(mozilla, 2.6.0)
+policy_module(mozilla, 2.6.1)
 
 ########################################
 #
@@ -287,8 +287,8 @@
 ')
 
 optional_policy(`
-	dbus_session_bus_client(mozilla_t)
 	dbus_system_bus_client(mozilla_t)
+	dbus_all_session_bus_client(mozilla_t)
 
 	optional_policy(`
 		networkmanager_dbus_chat(mozilla_t)
@@ -493,9 +493,9 @@
 ')
 
 optional_policy(`
-	dbus_read_lib_files(mozilla_plugin_t)
-	dbus_session_bus_client(mozilla_plugin_t)
 	dbus_system_bus_client(mozilla_plugin_t)
+	dbus_all_session_bus_client(mozilla_plugin_t)
+	dbus_read_lib_files(mozilla_plugin_t)
 ')
 
 optional_policy(`
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/mta.te refpolicy/policy/modules/contrib/mta.te
--- refpolicy/policy/modules/contrib/mta.te	2012-07-25 20:33:05.000000000 +0200
+++ refpolicy/policy/modules/contrib/mta.te	2012-08-13 21:20:18.579212799 +0200
@@ -214,9 +214,7 @@
 #
 
 allow mailserver_delivery mail_spool_t:dir list_dir_perms;
-create_files_pattern(mailserver_delivery, mail_spool_t, mail_spool_t)
-read_files_pattern(mailserver_delivery, mail_spool_t, mail_spool_t)
-append_files_pattern(mailserver_delivery, mail_spool_t, mail_spool_t)
+manage_files_pattern(mailserver_delivery, mail_spool_t, mail_spool_t)
 create_lnk_files_pattern(mailserver_delivery, mail_spool_t, mail_spool_t)
 read_lnk_files_pattern(mailserver_delivery, mail_spool_t, mail_spool_t)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/mysql.if refpolicy/policy/modules/contrib/mysql.if
--- refpolicy/policy/modules/contrib/mysql.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/mysql.if	2012-08-14 19:31:16.864412676 +0200
@@ -311,6 +311,69 @@
 	search_dirs_pattern($1, mysqld_var_run_t, mysqld_var_run_t)
 ')
 
+#######################################
+## <summary>
+##	Set the attributes of the MySQL run directories
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+#
+interface(`mysql_setattr_run_dirs',`
+	gen_require(`
+		type mysqld_var_run_t;
+	')
+
+	setattr_dirs_pattern($1, mysqld_var_run_t, mysqld_var_run_t)
+')
+
+#######################################
+## <summary>
+##	Create MySQL run directories
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+#
+interface(`mysql_create_run_dirs',`
+	gen_require(`
+		type mysqld_var_run_t;
+	')
+
+	create_dirs_pattern($1, mysqld_var_run_t, mysqld_var_run_t)
+')
+
+#######################################
+## <summary>
+##	Automatically use the MySQL run label for created resources in generic
+##	run locations. This method is deprecated in favor of the
+##	init_daemon_run_dir call.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+## <param name="class">
+## 	<summary>
+##	Type of the resource created for which the automatic file transition
+##	should occur
+##	</summary>
+## </param>
+## <param name="filename" optional="true">
+## 	<summary>
+##	The name of the resource being created
+##	</summary>
+## </param>
+#
+interface(`mysql_generic_run_filetrans_run',`
+	refpolicywarn(`$0($*) has been deprecated.')
+')
+
 ########################################
 ## <summary>
 ##	All of the rules required to administrate an mysql environment
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/mysql.te refpolicy/policy/modules/contrib/mysql.te
--- refpolicy/policy/modules/contrib/mysql.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/mysql.te	2012-08-14 19:31:16.864412676 +0200
@@ -22,6 +22,7 @@
 
 type mysqld_var_run_t;
 files_pid_file(mysqld_var_run_t)
+init_daemon_run_dir(mysqld_var_run_t, "mysqld")
 
 type mysqld_db_t;
 files_type(mysqld_db_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/nagios.te refpolicy/policy/modules/contrib/nagios.te
--- refpolicy/policy/modules/contrib/nagios.te	2012-07-25 20:33:05.000000000 +0200
+++ refpolicy/policy/modules/contrib/nagios.te	2012-08-13 21:20:18.142212781 +0200
@@ -300,7 +300,7 @@
 
 optional_policy(`
 	postfix_stream_connect_master(nagios_mail_plugin_t)
-	posftix_exec_postqueue(nagios_mail_plugin_t)
+	postfix_exec_postqueue(nagios_mail_plugin_t)
 ')
 
 ######################################
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/networkmanager.if refpolicy/policy/modules/contrib/networkmanager.if
--- refpolicy/policy/modules/contrib/networkmanager.if	2012-09-28 19:56:54.123040256 +0200
+++ refpolicy/policy/modules/contrib/networkmanager.if	2012-09-27 20:03:30.752126498 +0200
@@ -175,6 +175,26 @@
 
 ########################################
 ## <summary>
+##	Append NetworkManager log files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`networkmanager_append_log_files',`
+	gen_require(`
+		type NetworkManager_log_t;
+	')
+
+	logging_search_logs($1)
+	allow $1 NetworkManager_log_t:dir list_dir_perms;
+	append_files_pattern($1, NetworkManager_log_t, NetworkManager_log_t)
+')
+
+########################################
+## <summary>
 ##	Read NetworkManager PID files.
 ## </summary>
 ## <param name="domain">
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/networkmanager.te refpolicy/policy/modules/contrib/networkmanager.te
--- refpolicy/policy/modules/contrib/networkmanager.te	2012-09-28 19:56:54.123040256 +0200
+++ refpolicy/policy/modules/contrib/networkmanager.te	2012-09-27 20:03:30.752126498 +0200
@@ -1,4 +1,4 @@
-policy_module(networkmanager, 1.14.0)
+policy_module(networkmanager, 1.14.3)
 
 ########################################
 #
@@ -53,7 +53,7 @@
 
 allow NetworkManager_t wpa_cli_t:unix_dgram_socket sendto;
 
-can_exec(NetworkManager_t, NetworkManager_exec_t)
+can_exec(NetworkManager_t, { NetworkManager_exec_t wpa_cli_exec_t })
 
 manage_files_pattern(NetworkManager_t, NetworkManager_log_t, NetworkManager_log_t)
 logging_log_filetrans(NetworkManager_t, NetworkManager_log_t, file)
@@ -237,6 +237,10 @@
 ')
 
 optional_policy(`
+	polipo_initrc_domtrans(NetworkManager_t)
+')
+
+optional_policy(`
 	ppp_initrc_domtrans(NetworkManager_t)
 	ppp_domtrans(NetworkManager_t)
 	ppp_manage_pid_files(NetworkManager_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/nscd.te refpolicy/policy/modules/contrib/nscd.te
--- refpolicy/policy/modules/contrib/nscd.te	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/nscd.te	2012-08-25 20:15:34.238937386 +0200
@@ -13,6 +13,7 @@
 # ordering problem with loadable modules
 type nscd_var_run_t;
 files_pid_file(nscd_var_run_t)
+init_daemon_run_dir(nscd_var_run_t, "nscd")
 
 # nscd is both the client program and the daemon.
 type nscd_t;
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ntp.fc refpolicy/policy/modules/contrib/ntp.fc
--- refpolicy/policy/modules/contrib/ntp.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/ntp.fc	2012-08-15 10:07:50.063520057 +0200
@@ -2,11 +2,11 @@
 /etc/cron\.(daily|weekly)/ntp-simple -- gen_context(system_u:object_r:ntpd_exec_t,s0)
 /etc/cron\.(daily|weekly)/ntp-server -- gen_context(system_u:object_r:ntpd_exec_t,s0)
 
-/etc/ntpd?\.conf.*		--	gen_context(system_u:object_r:net_conf_t,s0)
+/etc/ntpd?\.conf.*		--	gen_context(system_u:object_r:ntp_conf_t,s0)
 /etc/ntp/crypto(/.*)?			gen_context(system_u:object_r:ntpd_key_t,s0)
 /etc/ntp/data(/.*)?			gen_context(system_u:object_r:ntp_drift_t,s0)
 /etc/ntp/keys			--	gen_context(system_u:object_r:ntpd_key_t,s0)
-/etc/ntp/step-tickers.*		--	gen_context(system_u:object_r:net_conf_t,s0)
+/etc/ntp/step-tickers.*		--	gen_context(system_u:object_r:ntp_conf_t,s0)
 
 /etc/rc\.d/init\.d/ntpd		--	gen_context(system_u:object_r:ntpd_initrc_exec_t,s0)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ntp.if refpolicy/policy/modules/contrib/ntp.if
--- refpolicy/policy/modules/contrib/ntp.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/ntp.if	2012-08-15 10:07:50.063520057 +0200
@@ -132,7 +132,7 @@
 ## </param>
 ## <param name="role">
 ##	<summary>
-##	The role to be allowed to manage the ntp domain.
+##	Role allowed access
 ##	</summary>
 ## </param>
 ## <rolecap/>
@@ -140,11 +140,11 @@
 interface(`ntp_admin',`
 	gen_require(`
 		type ntpd_t, ntpd_tmp_t, ntpd_log_t;
-		type ntpd_key_t, ntpd_var_run_t;
-		type ntpd_initrc_exec_t;
+		type ntpd_key_t, ntpd_var_run_t, ntp_conf_t;
+		type ntpd_initrc_exec_t, ntp_drift_t;
 	')
 
-	allow $1 ntpd_t:process { ptrace signal_perms getattr };
+	allow $1 ntpd_t:process { ptrace signal_perms };
 	ps_process_pattern($1, ntpd_t)
 
 	init_labeled_script_domtrans($1, ntpd_initrc_exec_t)
@@ -152,7 +152,8 @@
 	role_transition $2 ntpd_initrc_exec_t system_r;
 	allow $2 system_r;
 
-	admin_pattern($1, ntpd_key_t)
+	files_list_etc($1)
+	admin_pattern($1, { ntpd_key_t ntp_conf_t ntp_drift_t })
 
 	logging_list_logs($1)
 	admin_pattern($1, ntpd_log_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ntp.te refpolicy/policy/modules/contrib/ntp.te
--- refpolicy/policy/modules/contrib/ntp.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/ntp.te	2012-08-15 10:07:50.063520057 +0200
@@ -1,4 +1,4 @@
-policy_module(ntp, 1.10.0)
+policy_module(ntp, 1.10.1)
 
 ########################################
 #
@@ -15,6 +15,9 @@
 type ntpd_initrc_exec_t;
 init_script_file(ntpd_initrc_exec_t)
 
+type ntp_conf_t;
+files_config_file(ntp_conf_t)
+
 type ntpd_key_t;
 files_type(ntpd_key_t)
 
@@ -54,10 +57,12 @@
 
 can_exec(ntpd_t, ntpd_exec_t)
 
+allow ntpd_t ntp_conf_t:file read_file_perms;
+
 read_files_pattern(ntpd_t, ntpd_key_t, ntpd_key_t)
 read_lnk_files_pattern(ntpd_t, ntpd_key_t, ntpd_key_t)
 
-allow ntpd_t ntpd_log_t:dir setattr;
+allow ntpd_t ntpd_log_t:dir setattr_dir_perms;
 manage_files_pattern(ntpd_t, ntpd_log_t, ntpd_log_t)
 logging_log_filetrans(ntpd_t, ntpd_log_t, { file dir })
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/numad.fc refpolicy/policy/modules/contrib/numad.fc
--- refpolicy/policy/modules/contrib/numad.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/numad.fc	2012-09-24 21:09:43.924581732 +0200
@@ -0,0 +1,7 @@
+/etc/rc\.d/init\.d/numad	--	gen_context(system_u:object_r:numad_initrc_exec_t,s0)
+
+/usr/bin/numad	--	gen_context(system_u:object_r:numad_exec_t,s0)
+
+/var/log/numad\.log.*	--	gen_context(system_u:object_r:numad_log_t,s0)
+
+/var/run/numad\.pid	--	gen_context(system_u:object_r:numad_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/numad.if refpolicy/policy/modules/contrib/numad.if
--- refpolicy/policy/modules/contrib/numad.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/numad.if	2012-09-24 21:09:43.924581732 +0200
@@ -0,0 +1,39 @@
+## <summary>Non-Uniform Memory Alignment Daemon.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an numad environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`numad_admin',`
+	gen_require(`
+		type numad_t, numad_initrc_exec_t, numad_log_t;
+		type numad_var_run_t;
+	')
+
+	allow $1 numad_t:process { ptrace signal_perms };
+	ps_process_pattern($1, numad_t)
+
+	init_labeled_script_domtrans($1, numad_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 numad_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, numad_log_t)
+
+	files_search_pids($1)
+	admin_pattern($1, numad_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/numad.te refpolicy/policy/modules/contrib/numad.te
--- refpolicy/policy/modules/contrib/numad.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/numad.te	2012-09-24 21:09:43.925581732 +0200
@@ -0,0 +1,43 @@
+policy_module(numad, 1.0.2)
+
+########################################
+#
+# Declarations
+#
+
+type numad_t;
+type numad_exec_t;
+init_daemon_domain(numad_t, numad_exec_t)
+
+type numad_initrc_exec_t;
+init_script_file(numad_initrc_exec_t)
+
+type numad_log_t;
+logging_log_file(numad_log_t)
+
+type numad_var_run_t;
+files_pid_file(numad_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow numad_t self:fifo_file rw_fifo_file_perms;
+allow numad_t self:msg { send receive };
+allow numad_t self:msgq create_msgq_perms;
+allow numad_t self:unix_stream_socket create_stream_socket_perms;
+
+allow numad_t numad_log_t:file { append_file_perms create_file_perms setattr_file_perms };
+logging_log_filetrans(numad_t, numad_log_t, file)
+
+manage_files_pattern(numad_t, numad_var_run_t, numad_var_run_t)
+files_pid_filetrans(numad_t, numad_var_run_t, file)
+
+kernel_read_system_state(numad_t)
+
+dev_read_sysfs(numad_t)
+
+files_read_etc_files(numad_t)
+
+miscfiles_read_localization(numad_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/oident.fc refpolicy/policy/modules/contrib/oident.fc
--- refpolicy/policy/modules/contrib/oident.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/oident.fc	2012-08-09 18:46:00.031031071 +0200
@@ -1,4 +1,4 @@
-HOME_DIR/\.oidentd.conf			gen_context(system_u:object_r:oidentd_home_t, s0)
+HOME_DIR/\.oidentd.conf		--	gen_context(system_u:object_r:oidentd_home_t, s0)
 
 /etc/oidentd\.conf		--	gen_context(system_u:object_r:oidentd_config_t, s0)
 /etc/oidentd_masq\.conf		--	gen_context(system_u:object_r:oidentd_config_t, s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/oident.te refpolicy/policy/modules/contrib/oident.te
--- refpolicy/policy/modules/contrib/oident.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/oident.te	2012-08-09 18:45:40.758030300 +0200
@@ -34,6 +34,8 @@
 
 allow oidentd_t oidentd_config_t:file read_file_perms;
 
+allow oidentd_t oidentd_home_t:file read_file_perms;
+
 corenet_all_recvfrom_unlabeled(oidentd_t)
 corenet_all_recvfrom_netlabel(oidentd_t)
 corenet_tcp_sendrecv_generic_if(oidentd_t)
@@ -58,7 +60,7 @@
 
 sysnet_read_config(oidentd_t)
 
-oident_read_user_content(oidentd_t)
+userdom_search_user_home_dirs(oidentd_t)
 
 optional_policy(`
 	nis_use_ypbind(oidentd_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/plymouthd.te refpolicy/policy/modules/contrib/plymouthd.te
--- refpolicy/policy/modules/contrib/plymouthd.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/plymouthd.te	2012-09-08 18:59:27.475558901 +0200
@@ -1,4 +1,4 @@
-policy_module(plymouthd, 1.1.0)
+policy_module(plymouthd, 1.1.1)
 
 ########################################
 #
@@ -60,6 +60,10 @@
 files_read_etc_files(plymouthd_t)
 files_read_usr_files(plymouthd_t)
 
+term_getattr_pty_fs(plymouthd_t)
+term_use_all_terms(plymouthd_t)
+term_use_ptmx(plymouthd_t)
+
 miscfiles_read_localization(plymouthd_t)
 miscfiles_read_fonts(plymouthd_t)
 miscfiles_manage_fonts_cache(plymouthd_t)
@@ -69,6 +73,7 @@
 # Plymouth private policy
 #
 
+allow plymouth_t self:capability2 block_suspend;
 allow plymouth_t self:process signal;
 allow plymouth_t self:fifo_file rw_file_perms;
 allow plymouth_t self:unix_stream_socket create_stream_socket_perms;
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/policykit.fc refpolicy/policy/modules/contrib/policykit.fc
--- refpolicy/policy/modules/contrib/policykit.fc	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/policykit.fc	2012-09-08 19:21:03.900561680 +0200
@@ -1,3 +1,6 @@
+/usr/lib/polkit-1/polkitd		--	gen_context(system_u:object_r:policykit_exec_t,s0)
+/usr/lib/polkit-1/polkit-agent-helper-1	--	gen_context(system_u:object_r:policykit_auth_exec_t,s0)
+
 /usr/lib/policykit/polkit-read-auth-helper --	gen_context(system_u:object_r:policykit_auth_exec_t,s0)
 /usr/lib/policykit/polkit-grant-helper.* --	gen_context(system_u:object_r:policykit_grant_exec_t,s0)
 /usr/lib/policykit/polkit-resolve-exe-helper.* -- gen_context(system_u:object_r:policykit_resolve_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/policykit.te refpolicy/policy/modules/contrib/policykit.te
--- refpolicy/policy/modules/contrib/policykit.te	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/policykit.te	2012-09-27 20:03:30.752126498 +0200
@@ -1,4 +1,4 @@
-policy_module(policykit, 1.2.0)
+policy_module(policykit, 1.2.2)
 
 ########################################
 #
@@ -106,7 +106,7 @@
 
 optional_policy(`
 	dbus_system_bus_client(policykit_auth_t)
-	dbus_session_bus_client(policykit_auth_t)
+	dbus_all_session_bus_client(policykit_auth_t)
 
 	optional_policy(`
 		consolekit_dbus_chat(policykit_auth_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/polipo.fc refpolicy/policy/modules/contrib/polipo.fc
--- refpolicy/policy/modules/contrib/polipo.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/polipo.fc	2012-09-27 20:03:30.753126498 +0200
@@ -0,0 +1,15 @@
+HOME_DIR/\.forbidden	--	gen_context(system_u:object_r:polipo_config_home_t,s0)
+HOME_DIR/\.polipo	--	gen_context(system_u:object_r:polipo_config_home_t,s0)
+HOME_DIR/\.polipo-cache(/.*)?	gen_context(system_u:object_r:polipo_cache_home_t,s0)
+
+/etc/polipo(/.*)?	gen_context(system_u:object_r:polipo_conf_t,s0)
+
+/etc/rc\.d/init\.d/polipo	--	gen_context(system_u:object_r:polipo_initrc_exec_t,s0)
+
+/usr/bin/polipo	--	gen_context(system_u:object_r:polipo_exec_t,s0)
+
+/var/cache/polipo(/.*)?	gen_context(system_u:object_r:polipo_cache_t,s0)
+
+/var/log/polipo.*	--	gen_context(system_u:object_r:polipo_log_t,s0)
+
+/var/run/polipo(/.*)?	gen_context(system_u:object_r:polipo_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/polipo.if refpolicy/policy/modules/contrib/polipo.if
--- refpolicy/policy/modules/contrib/polipo.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/polipo.if	2012-09-27 20:03:30.753126498 +0200
@@ -0,0 +1,118 @@
+## <summary>Lightweight forwarding and caching proxy server.</summary>
+
+########################################
+## <summary>
+##	Role access for Polipo session.
+## </summary>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <param name="domain">
+##	<summary>
+##	User domain for the role.
+##	</summary>
+## </param>
+#
+template(`polipo_role',`
+	gen_require(`
+		type polipo_session_t, polipo_exec_t, polipo_config_home_t;
+		type polipo_cache_home_t;
+	')
+
+	########################################
+	#
+	# Declarations
+	#
+
+	role $1 types polipo_session_t;
+
+	########################################
+	#
+	# Policy
+	#
+
+	manage_dirs_pattern($2, polipo_cache_home_t, polipo_cache_home_t)
+	relabel_dirs_pattern($2, polipo_cache_home_t, polipo_cache_home_t)
+
+	userdom_user_home_dir_filetrans($2, polipo_cache_home_t, dir, ".polipo-cache")
+
+	manage_files_pattern($2, { polipo_cache_home_t polipo_config_home_t }, { polipo_cache_home_t polipo_config_home_t })
+	relabel_files_pattern($2, { polipo_cache_home_t polipo_config_home_t }, { polipo_cache_home_t polipo_config_home_t })
+
+	userdom_user_home_dir_filetrans($2, polipo_config_home_t, file, ".forbidden")
+	userdom_user_home_dir_filetrans($2, polipo_config_home_t, file, ".polipo")
+
+	allow $2 polipo_session_t:process { ptrace signal_perms };
+	ps_process_pattern($2, polipo_session_t)
+
+	tunable_policy(`polipo_session_users',`
+		domtrans_pattern($2, polipo_exec_t, polipo_session_t)
+	',`
+		can_exec($2, polipo_exec_t)
+	')
+')
+
+########################################
+## <summary>
+##	Execute Polipo in the Polipo
+##	system domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`polipo_initrc_domtrans',`
+	gen_require(`
+		type polipo_initrc_exec_t;
+	')
+
+	init_labeled_script_domtrans($1, polipo_initrc_exec_t)
+')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an polipo environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`polipo_admin',`
+	gen_require(`
+		type polipo_system_t, polipo_initrc_exec_t, polipo_cache_t;
+		type polipo_conf_t, polipo_log_t, polipo_var_run_t;
+	')
+
+	allow $1 polipo_system_t:process { ptrace signal_perms };
+	ps_process_pattern($1, polipo_system_t)
+
+	polipo_initrc_domtrans($1)
+	domain_system_change_exemption($1)
+	role_transition $2 polipo_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_var($1)
+	admin_pattern($1, polipo_cache_t)
+
+	files_search_etc($1)
+	admin_pattern($1, polipo_conf_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, polipo_log_t)
+
+	files_search_pids($1)
+	admin_pattern($1, polipo_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/polipo.te refpolicy/policy/modules/contrib/polipo.te
--- refpolicy/policy/modules/contrib/polipo.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/polipo.te	2012-09-27 20:03:30.753126498 +0200
@@ -0,0 +1,167 @@
+policy_module(polipo, 1.0.1)
+
+########################################
+#
+# Declarations
+#
+
+## <desc>
+##	<p>
+##	Determine whether Polipo system
+##	daemon can access CIFS file systems.
+##	</p>
+## </desc>
+gen_tunable(polipo_system_use_cifs, false)
+
+## <desc>
+##	<p>
+##	Determine whether Polipo system
+##	daemon can access NFS file systems.
+##	</p>
+## </desc>
+gen_tunable(polipo_system_use_nfs, false)
+
+## <desc>
+##	<p>
+##	Determine whether calling user domains
+##	can execute Polipo daemon in the
+##	polipo_session_t domain.
+##	</p>
+## </desc>
+gen_tunable(polipo_session_users, false)
+
+## <desc>
+##	<p>
+##	Determine whether Polipo session daemon
+##	can send syslog messages.
+##	</p>
+## </desc>
+gen_tunable(polipo_session_send_syslog_msg, false)
+
+attribute polipo_daemon;
+
+type polipo_system_t, polipo_daemon;
+type polipo_exec_t;
+init_daemon_domain(polipo_system_t, polipo_exec_t)
+
+type polipo_initrc_exec_t;
+init_script_file(polipo_initrc_exec_t)
+
+type polipo_conf_t;
+files_config_file(polipo_conf_t)
+
+type polipo_cache_t;
+files_type(polipo_cache_t)
+
+type polipo_log_t;
+logging_log_file(polipo_log_t)
+
+type polipo_var_run_t;
+files_pid_file(polipo_var_run_t)
+
+type polipo_session_t, polipo_daemon;
+userdom_user_application_domain(polipo_session_t, polipo_exec_t)
+
+type polipo_cache_home_t;
+userdom_user_home_content(polipo_cache_home_t)
+
+type polipo_config_home_t;
+userdom_user_home_content(polipo_config_home_t)
+
+########################################
+#
+# Polipo session local policy
+#
+
+allow polipo_session_t polipo_config_home_t:file read_file_perms;
+
+manage_dirs_pattern(polipo_session_t, polipo_cache_home_t, polipo_cache_home_t)
+manage_files_pattern(polipo_session_t, polipo_cache_home_t, polipo_cache_home_t)
+userdom_user_home_dir_filetrans(polipo_session_t, polipo_cache_home_t, dir, ".polipo-cache")
+
+auth_use_nsswitch(polipo_session_t)
+
+userdom_use_user_terminals(polipo_session_t)
+
+tunable_policy(`polipo_session_send_syslog_msg',`
+	logging_send_syslog_msg(polipo_session_t)
+')
+
+tunable_policy(`use_nfs_home_dirs',`
+	fs_read_nfs_files(polipo_session_t)
+',`
+	fs_dontaudit_read_nfs_files(polipo_session_t)
+')
+
+tunable_policy(`use_samba_home_dirs',`
+	fs_read_cifs_files(polipo_session_t)
+',`
+	fs_dontaudit_read_cifs_files(polipo_session_t)
+')
+
+########################################
+#
+# Polipo system local policy
+#
+
+read_files_pattern(polipo_system_t, polipo_conf_t, polipo_conf_t)
+
+manage_files_pattern(polipo_system_t, polipo_cache_t, polipo_cache_t)
+manage_dirs_pattern(polipo_system_t, polipo_cache_t, polipo_cache_t)
+files_var_filetrans(polipo_system_t, polipo_cache_t, dir)
+
+append_files_pattern(polipo_system_t, polipo_log_t, polipo_log_t)
+create_files_pattern(polipo_system_t, polipo_log_t, polipo_log_t)
+setattr_files_pattern(polipo_system_t, polipo_log_t, polipo_log_t)
+logging_log_filetrans(polipo_system_t, polipo_log_t, file)
+
+manage_files_pattern(polipo_system_t, polipo_var_run_t, polipo_var_run_t)
+files_pid_filetrans(polipo_system_t, polipo_var_run_t, file)
+
+auth_use_nsswitch(polipo_system_t)
+
+logging_send_syslog_msg(polipo_system_t)
+
+optional_policy(`
+	cron_system_entry(polipo_system_t, polipo_exec_t)
+')
+
+tunable_policy(`polipo_system_use_cifs',`
+	fs_manage_cifs_files(polipo_system_t)
+',`
+	fs_dontaudit_read_cifs_files(polipo_system_t)
+')
+
+tunable_policy(`polipo_system_use_nfs',`
+	fs_manage_nfs_files(polipo_system_t)
+',`
+	fs_dontaudit_read_nfs_files(polipo_system_t)
+')
+
+########################################
+#
+# Polipo global local policy
+#
+
+allow polipo_daemon self:fifo_file rw_fifo_file_perms;
+allow polipo_daemon self:tcp_socket { listen accept };
+
+corenet_all_recvfrom_unlabeled(polipo_daemon)
+corenet_all_recvfrom_netlabel(polipo_daemon)
+corenet_tcp_sendrecv_generic_if(polipo_daemon)
+corenet_tcp_sendrecv_generic_node(polipo_daemon)
+corenet_tcp_bind_generic_node(polipo_daemon)
+
+corenet_sendrecv_http_client_packets(polipo_daemon)
+corenet_tcp_sendrecv_http_port(polipo_daemon)
+corenet_tcp_connect_http_port(polipo_daemon)
+
+corenet_sendrecv_http_cache_server_packets(polipo_daemon)
+corenet_tcp_sendrecv_http_cache_port(polipo_daemon)
+corenet_tcp_bind_http_cache_port(polipo_daemon)
+
+files_read_usr_files(polipo_daemon)
+
+fs_search_auto_mountpoints(polipo_daemon)
+
+miscfiles_read_localization(polipo_daemon)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/postfix.fc refpolicy/policy/modules/contrib/postfix.fc
--- refpolicy/policy/modules/contrib/postfix.fc	2012-05-04 16:21:45.000000000 +0200
+++ refpolicy/policy/modules/contrib/postfix.fc	2012-08-13 21:19:14.127210215 +0200
@@ -1,6 +1,5 @@
 # postfix
 /etc/postfix(/.*)?		gen_context(system_u:object_r:postfix_etc_t,s0)
-ifdef(`distro_redhat', `
 /usr/libexec/postfix/.*	--	gen_context(system_u:object_r:postfix_exec_t,s0)
 /usr/libexec/postfix/cleanup --	gen_context(system_u:object_r:postfix_cleanup_exec_t,s0)
 /usr/libexec/postfix/lmtp --	gen_context(system_u:object_r:postfix_smtp_exec_t,s0)
@@ -15,7 +14,6 @@
 /usr/libexec/postfix/bounce --	gen_context(system_u:object_r:postfix_bounce_exec_t,s0)
 /usr/libexec/postfix/pipe --	gen_context(system_u:object_r:postfix_pipe_exec_t,s0)
 /usr/libexec/postfix/virtual --	gen_context(system_u:object_r:postfix_virtual_exec_t,s0)
-', `
 /usr/lib/postfix/.*	--	gen_context(system_u:object_r:postfix_exec_t,s0)
 /usr/lib/postfix/cleanup --	gen_context(system_u:object_r:postfix_cleanup_exec_t,s0)
 /usr/lib/postfix/local	--	gen_context(system_u:object_r:postfix_local_exec_t,s0)
@@ -29,7 +27,7 @@
 /usr/lib/postfix/bounce	--	gen_context(system_u:object_r:postfix_bounce_exec_t,s0)
 /usr/lib/postfix/pipe	--	gen_context(system_u:object_r:postfix_pipe_exec_t,s0)
 /usr/lib/postfix/virtual --	gen_context(system_u:object_r:postfix_virtual_exec_t,s0)
-')
+
 /etc/postfix/postfix-script.* -- gen_context(system_u:object_r:postfix_exec_t,s0)
 /etc/postfix/prng_exch	--	gen_context(system_u:object_r:postfix_prng_t,s0)
 /usr/sbin/postcat	--	gen_context(system_u:object_r:postfix_master_exec_t,s0)
@@ -46,7 +44,7 @@
 
 /var/spool/postfix(/.*)?	gen_context(system_u:object_r:postfix_spool_t,s0)
 /var/spool/postfix/maildrop(/.*)? gen_context(system_u:object_r:postfix_spool_maildrop_t,s0)
-/var/spool/postfix/pid/.*	gen_context(system_u:object_r:postfix_var_run_t,s0)
+/var/spool/postfix/pid(/.*)?	gen_context(system_u:object_r:postfix_var_run_t,s0)
 /var/spool/postfix/private(/.*)? gen_context(system_u:object_r:postfix_private_t,s0)
 /var/spool/postfix/public(/.*)? gen_context(system_u:object_r:postfix_public_t,s0)
 /var/spool/postfix/bounce(/.*)? gen_context(system_u:object_r:postfix_spool_bounce_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/postfix.if refpolicy/policy/modules/contrib/postfix.if
--- refpolicy/policy/modules/contrib/postfix.if	2012-05-04 15:15:21.000000000 +0200
+++ refpolicy/policy/modules/contrib/postfix.if	2012-08-13 21:20:18.156212781 +0200
@@ -56,7 +56,7 @@
 
 	allow postfix_$1_t postfix_spool_t:dir list_dir_perms;
 
-	allow postfix_$1_t postfix_var_run_t:file manage_file_perms;
+	manage_files_pattern(postfix_$1_t, postfix_var_run_t, postfix_var_run_t)	
 	files_pid_filetrans(postfix_$1_t, postfix_var_run_t, file)
 
 	kernel_read_system_state(postfix_$1_t)
@@ -454,7 +454,8 @@
 
 #######################################
 ## <summary>
-##	Execute the master postqueue in the caller domain.
+##	Execute the master postqueue in the caller domain. (Deprecated)
+##	Please use postfix_exec_postqueue instead.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -463,6 +464,21 @@
 ## </param>
 #
 interface(`posftix_exec_postqueue',`
+	refpolicywarn(`$0($*) has been deprecated.')
+	postfix_exec_postqueue($1)
+')
+
+#######################################
+## <summary>
+##	Execute the master postqueue in the caller domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`postfix_exec_postqueue',`
 	gen_require(`
 		type postfix_postqueue_exec_t;
 	')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/postfix.te refpolicy/policy/modules/contrib/postfix.te
--- refpolicy/policy/modules/contrib/postfix.te	2012-07-25 20:33:05.000000000 +0200
+++ refpolicy/policy/modules/contrib/postfix.te	2012-09-08 19:00:04.715558982 +0200
@@ -1,4 +1,4 @@
-policy_module(postfix, 1.14.0)
+policy_module(postfix, 1.14.2)
 
 ########################################
 #
@@ -93,7 +93,8 @@
 #
 
 # chown is to set the correct ownership of queue dirs
-allow postfix_master_t self:capability { chown dac_override kill setgid setuid net_bind_service sys_tty_config };
+allow postfix_master_t self:capability { chown dac_override kill setgid setuid net_bind_service sys_tty_config fowner };
+allow postfix_master_t self:capability2 block_suspend;
 allow postfix_master_t self:fifo_file rw_fifo_file_perms;
 allow postfix_master_t self:tcp_socket create_stream_socket_perms;
 allow postfix_master_t self:udp_socket create_socket_perms;
@@ -112,15 +113,19 @@
 
 allow postfix_master_t postfix_postqueue_exec_t:file getattr;
 
+create_dirs_pattern(postfix_master_t, postfix_spool_t, postfix_private_t)
 manage_fifo_files_pattern(postfix_master_t, postfix_private_t, postfix_private_t)
 manage_sock_files_pattern(postfix_master_t, postfix_private_t, postfix_private_t)
+setattr_dirs_pattern(postfix_master_t, postfix_private_t, postfix_private_t)
 
 domtrans_pattern(postfix_master_t, postfix_postqueue_exec_t, postfix_postqueue_t)
 
 allow postfix_master_t postfix_prng_t:file rw_file_perms;
 
+create_dirs_pattern(postfix_master_t, postfix_spool_t, postfix_public_t)
 manage_fifo_files_pattern(postfix_master_t, postfix_public_t, postfix_public_t)
 manage_sock_files_pattern(postfix_master_t, postfix_public_t, postfix_public_t)
+setattr_dirs_pattern(postfix_master_t, postfix_public_t, postfix_public_t)
 
 domtrans_pattern(postfix_master_t, postfix_showq_exec_t, postfix_showq_t)
 
@@ -128,6 +133,13 @@
 manage_dirs_pattern(postfix_master_t, postfix_spool_t, postfix_spool_t)
 manage_files_pattern(postfix_master_t, postfix_spool_t, postfix_spool_t)
 files_spool_filetrans(postfix_master_t, postfix_spool_t, dir)
+# Initial seed of postfix queues
+filetrans_pattern(postfix_master_t, postfix_spool_t, postfix_private_t, dir, "private")
+filetrans_pattern(postfix_master_t, postfix_spool_t, postfix_public_t, dir, "public")
+filetrans_pattern(postfix_master_t, postfix_spool_t, postfix_spool_bounce_t, dir, "bounce")
+filetrans_pattern(postfix_master_t, postfix_spool_t, postfix_spool_maildrop_t, dir, "maildrop")
+filetrans_pattern(postfix_master_t, postfix_spool_t, postfix_var_run_t, dir, "pid")
+filetrans_pattern(postfix_master_t, postfix_spool_t, postfix_spool_flush_t, dir, "flush")
 
 allow postfix_master_t postfix_spool_bounce_t:dir manage_dir_perms;
 allow postfix_master_t postfix_spool_bounce_t:file getattr;
@@ -136,10 +148,14 @@
 manage_files_pattern(postfix_master_t, postfix_spool_flush_t, postfix_spool_flush_t)
 manage_lnk_files_pattern(postfix_master_t, postfix_spool_flush_t, postfix_spool_flush_t)
 
+create_dirs_pattern(postfix_master_t, postfix_spool_t, postfix_spool_maildrop_t)
 delete_files_pattern(postfix_master_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
 rename_files_pattern(postfix_master_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
 setattr_dirs_pattern(postfix_master_t, postfix_spool_maildrop_t, postfix_spool_maildrop_t)
 
+create_dirs_pattern(postfix_master_t, postfix_spool_t, postfix_var_run_t)
+setattr_dirs_pattern(postfix_master_t, postfix_var_run_t, postfix_var_run_t)
+
 kernel_read_all_sysctls(postfix_master_t)
 
 corenet_all_recvfrom_unlabeled(postfix_master_t)
@@ -264,6 +280,7 @@
 # Postfix local local policy
 #
 
+allow postfix_local_t self:capability chown;
 allow postfix_local_t self:fifo_file rw_fifo_file_perms;
 allow postfix_local_t self:process { setsched setrlimit };
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/pulseaudio.te refpolicy/policy/modules/contrib/pulseaudio.te
--- refpolicy/policy/modules/contrib/pulseaudio.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/pulseaudio.te	2012-09-27 20:03:30.753126498 +0200
@@ -1,4 +1,4 @@
-policy_module(pulseaudio, 1.5.0)
+policy_module(pulseaudio, 1.5.1)
 
 ########################################
 #
@@ -104,8 +104,8 @@
 optional_policy(`
 	dbus_system_domain(pulseaudio_t, pulseaudio_exec_t)
 	dbus_system_bus_client(pulseaudio_t)
-	dbus_session_bus_client(pulseaudio_t)
-	dbus_connect_session_bus(pulseaudio_t)
+	dbus_all_session_bus_client(pulseaudio_t)
+	dbus_connect_all_session_bus(pulseaudio_t)
 
 	optional_policy(`
 		consolekit_dbus_chat(pulseaudio_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/puppet.if refpolicy/policy/modules/contrib/puppet.if
--- refpolicy/policy/modules/contrib/puppet.if	2012-09-28 19:56:54.172040257 +0200
+++ refpolicy/policy/modules/contrib/puppet.if	2012-09-27 20:03:30.753126498 +0200
@@ -88,6 +88,25 @@
 
 ################################################
 ## <summary>
+##	Read Puppet lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`puppet_read_lib_files',`
+	gen_require(`
+		type puppet_var_lib_t;
+	')
+
+	read_files_pattern($1, puppet_var_lib_t, puppet_var_lib_t)
+	files_search_var_lib($1)
+')
+
+################################################
+## <summary>
 ##	Read / Write to Puppet temp files.  Puppet uses
 ##	some system binaries (groupadd, etc) that run in
 ##	a non-puppet domain and redirects output into temp
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/puppet.te refpolicy/policy/modules/contrib/puppet.te
--- refpolicy/policy/modules/contrib/puppet.te	2012-09-28 19:56:54.042040254 +0200
+++ refpolicy/policy/modules/contrib/puppet.te	2012-09-27 20:03:30.753126498 +0200
@@ -1,4 +1,4 @@
-policy_module(puppet, 1.3.0)
+policy_module(puppet, 1.3.1)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/qemu.te refpolicy/policy/modules/contrib/qemu.te
--- refpolicy/policy/modules/contrib/qemu.te	2012-09-28 19:56:54.021040253 +0200
+++ refpolicy/policy/modules/contrib/qemu.te	2012-09-08 18:02:15.972551573 +0200
@@ -1,4 +1,4 @@
-policy_module(qemu, 1.7.0)
+policy_module(qemu, 1.7.1)
 
 ########################################
 #
@@ -17,7 +17,7 @@
 ## Allow qemu to use cifs/Samba file systems
 ## </p>
 ## </desc>
-gen_tunable(qemu_use_cifs, true)
+gen_tunable(qemu_use_cifs, false)
 
 ## <desc>
 ## <p>
@@ -31,14 +31,14 @@
 ## Allow qemu to use nfs file systems
 ## </p>
 ## </desc>
-gen_tunable(qemu_use_nfs, true)
+gen_tunable(qemu_use_nfs, false)
 
 ## <desc>
 ## <p>
 ## Allow qemu to use usb devices
 ## </p>
 ## </desc>
-gen_tunable(qemu_use_usb, true)
+gen_tunable(qemu_use_usb, false)
 
 type qemu_exec_t;
 virt_domain_template(qemu)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/quantum.fc refpolicy/policy/modules/contrib/quantum.fc
--- refpolicy/policy/modules/contrib/quantum.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/quantum.fc	2012-09-24 21:23:18.479583470 +0200
@@ -0,0 +1,10 @@
+/etc/rc\.d/init\.d/quantum.*	--	gen_context(system_u:object_r:quantum_initrc_exec_t,s0)
+
+/usr/bin/quantum-server	--	gen_context(system_u:object_r:quantum_exec_t,s0)
+/usr/bin/quantum-openvswitch-agent	--	gen_context(system_u:object_r:quantum_exec_t,s0)
+/usr/bin/quantum-linuxbridge-agent	--	gen_context(system_u:object_r:quantum_exec_t,s0)
+/usr/bin/quantum-ryu-agent	--	gen_context(system_u:object_r:quantum_exec_t,s0)
+
+/var/lib/quantum(/.*)?	gen_context(system_u:object_r:quantum_var_lib_t,s0)
+
+/var/log/quantum(/.*)?	gen_context(system_u:object_r:quantum_log_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/quantum.if refpolicy/policy/modules/contrib/quantum.if
--- refpolicy/policy/modules/contrib/quantum.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/quantum.if	2012-09-24 21:23:18.479583470 +0200
@@ -0,0 +1,42 @@
+## <summary>Virtual network service for Openstack.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an quantum environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`quantum_admin',`
+	gen_require(`
+		type quantum_t, quantum_initrc_exec_t, quantum_log_t;
+		type quantum_var_lib_t, quantum_tmp_t;
+	')
+
+	allow $1 quantum_t:process { ptrace signal_perms };
+	ps_process_pattern($1, quantum_t)
+
+	init_labeled_script_domtrans($1, quantum_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 quantum_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, quantum_log_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, quantum_var_lib_t)
+
+	files_search_tmp($1)
+	admin_pattern($1, quantum_tmp_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/quantum.te refpolicy/policy/modules/contrib/quantum.te
--- refpolicy/policy/modules/contrib/quantum.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/quantum.te	2012-09-24 21:23:18.479583470 +0200
@@ -0,0 +1,97 @@
+policy_module(quantum, 1.0.1)
+
+########################################
+#
+# Declarations
+#
+
+type quantum_t;
+type quantum_exec_t;
+init_daemon_domain(quantum_t, quantum_exec_t)
+
+type quantum_initrc_exec_t;
+init_script_file(quantum_initrc_exec_t)
+
+type quantum_log_t;
+logging_log_file(quantum_log_t)
+
+type quantum_tmp_t;
+files_tmp_file(quantum_tmp_t)
+
+type quantum_var_lib_t;
+files_type(quantum_var_lib_t)
+
+########################################
+#
+# Local policy
+#
+
+allow quantum_t self:capability { setgid setuid sys_resource };
+allow quantum_t self:process { setsched setrlimit };
+allow quantum_t self:fifo_file rw_fifo_file_perms;
+allow quantum_t self:key manage_key_perms;
+allow quantum_t self:tcp_socket { accept listen };
+allow quantum_t self:unix_stream_socket { accept listen };
+
+manage_dirs_pattern(quantum_t, quantum_log_t, quantum_log_t)
+append_files_pattern(quantum_t, quantum_log_t, quantum_log_t)
+create_files_pattern(quantum_t, quantum_log_t, quantum_log_t)
+setattr_files_pattern(quantum_t, quantum_log_t, quantum_log_t)
+logging_log_filetrans(quantum_t, quantum_log_t, dir)
+
+manage_files_pattern(quantum_t, quantum_tmp_t, quantum_tmp_t)
+files_tmp_filetrans(quantum_t, quantum_tmp_t, file)
+
+manage_dirs_pattern(quantum_t, quantum_var_lib_t, quantum_var_lib_t)
+manage_files_pattern(quantum_t, quantum_var_lib_t, quantum_var_lib_t)
+files_var_lib_filetrans(quantum_t, quantum_var_lib_t, dir)
+
+can_exec(quantum_t, quantum_tmp_t)
+
+kernel_read_kernel_sysctls(quantum_t)
+kernel_read_system_state(quantum_t)
+
+corecmd_exec_shell(quantum_t)
+corecmd_exec_bin(quantum_t)
+
+corenet_all_recvfrom_unlabeled(quantum_t)
+corenet_all_recvfrom_netlabel(quantum_t)
+corenet_tcp_sendrecv_generic_if(quantum_t)
+corenet_tcp_sendrecv_generic_node(quantum_t)
+corenet_tcp_sendrecv_all_ports(quantum_t)
+corenet_tcp_bind_generic_node(quantum_t)
+
+dev_list_sysfs(quantum_t)
+dev_read_urand(quantum_t)
+
+files_read_usr_files(quantum_t)
+
+auth_use_nsswitch(quantum_t)
+
+libs_exec_ldconfig(quantum_t)
+
+logging_send_audit_msgs(quantum_t)
+logging_send_syslog_msg(quantum_t)
+
+miscfiles_read_localization(quantum_t)
+
+sysnet_domtrans_ifconfig(quantum_t)
+
+optional_policy(`
+	brctl_domtrans(quantum_t)
+')
+
+optional_policy(`
+	mysql_stream_connect(quantum_t)
+	mysql_rw_db_sockets(quantum_t)
+	mysql_read_config(quantum_t)
+
+	mysql_tcp_connect(quantum_t)
+')
+
+optional_policy(`
+	postgresql_stream_connect(quantum_t)
+	postgresql_unpriv_client(quantum_t)
+
+	postgresql_tcp_connect(quantum_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/quota.te refpolicy/policy/modules/contrib/quota.te
--- refpolicy/policy/modules/contrib/quota.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/quota.te	2012-09-08 18:12:05.332552821 +0200
@@ -1,4 +1,4 @@
-policy_module(quota, 1.5.0)
+policy_module(quota, 1.5.1)
 
 ########################################
 #
@@ -35,6 +35,7 @@
 files_var_filetrans(quota_t, quota_db_t, file)
 files_spool_filetrans(quota_t, quota_db_t, file)
 
+kernel_request_load_module(quota_t)
 kernel_list_proc(quota_t)
 kernel_read_proc_symlinks(quota_t)
 kernel_read_kernel_sysctls(quota_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/raid.fc refpolicy/policy/modules/contrib/raid.fc
--- refpolicy/policy/modules/contrib/raid.fc	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/raid.fc	2012-09-27 20:03:30.754126498 +0200
@@ -1,6 +1,16 @@
-/dev/.mdadm.map		--	gen_context(system_u:object_r:mdadm_map_t,s0)
+/dev/\.mdadm\.map	--	gen_context(system_u:object_r:mdadm_var_run_t,s0)
+/dev/md/.*	--	gen_context(system_u:object_r:mdadm_var_run_t,s0)
 
-/sbin/mdadm		--	gen_context(system_u:object_r:mdadm_exec_t,s0)
-/sbin/mdmpd		--	gen_context(system_u:object_r:mdadm_exec_t,s0)
+/etc/rc\.d/init\.d/mdmonitor	--	gen_context(system_u:object_r:mdadm_initrc_exec_t,s0)
 
-/var/run/mdadm(/.*)?		gen_context(system_u:object_r:mdadm_var_run_t,s0)
+/sbin/mdadm	--	gen_context(system_u:object_r:mdadm_exec_t,s0)
+/sbin/mdmon	--	gen_context(system_u:object_r:mdadm_exec_t,s0)
+/sbin/mdmpd	--	gen_context(system_u:object_r:mdadm_exec_t,s0)
+/sbin/raid-check	--	gen_context(system_u:object_r:mdadm_exec_t,s0)
+
+/usr/sbin/mdadm	--	gen_context(system_u:object_r:mdadm_exec_t,s0)
+/usr/sbin/mdmon	--	gen_context(system_u:object_r:mdadm_exec_t,s0)
+/usr/sbin/mdmpd	--	gen_context(system_u:object_r:mdadm_exec_t,s0)
+/usr/sbin/raid-check	--	gen_context(system_u:object_r:mdadm_exec_t,s0)
+
+/var/run/mdadm(/.*)?	gen_context(system_u:object_r:mdadm_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/raid.if refpolicy/policy/modules/contrib/raid.if
--- refpolicy/policy/modules/contrib/raid.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/raid.if	2012-09-27 20:03:30.754126498 +0200
@@ -1,8 +1,9 @@
-## <summary>RAID array management tools</summary>
+## <summary>RAID array management tools.</summary>
 
 ########################################
 ## <summary>
-##	Execute software raid tools in the mdadm domain.
+##	Execute software raid tools in
+##	the mdadm domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -21,18 +22,18 @@
 
 ######################################
 ## <summary>
-##	Execute a domain transition to mdadm_t for the
-##	specified role, allowing it to use the mdadm_t
-##	domain
+##	Execute mdadm in the mdadm
+##	domain, and allow the specified
+##	role the mdadm domain.
 ## </summary>
 ## <param name="role">
 ##	<summary>
-##	Role allowed to access mdadm_t domain
+##	Role allowed access.
 ##	</summary>
 ## </param>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed to transition to mdadm_t
+##	Domain allowed to transition.
 ##	</summary>
 ## </param>
 #
@@ -41,22 +42,15 @@
 		type mdadm_t;
 	')
 
-	role $1 types mdadm_t;
 	raid_domtrans_mdadm($2)
+	role $1 types mdadm_t;
 ')
 
 ########################################
 ## <summary>
-##	Create, read, write, and delete the mdadm pid files.
+##	Create, read, write, and delete
+##	mdadm pid files.
 ## </summary>
-## <desc>
-##	<p>
-##	Create, read, write, and delete the mdadm pid files.
-##	</p>
-##	<p>
-##	Added for use in the init module.
-##	</p>
-## </desc>
 ## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
@@ -68,8 +62,39 @@
 		type mdadm_var_run_t;
 	')
 
-	# FIXME: maybe should have a type_transition.  not
-	# clear what this is doing, from the original
-	# mdadm policy
 	allow $1 mdadm_var_run_t:file manage_file_perms;
 ')
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an mdadm environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`raid_admin_mdadm',`
+	gen_require(`
+		type mdadm_t, mdadm_initrc_exec_t, mdadm_var_run_t;
+	')
+
+	allow $1 mdadm_t:process { ptrace signal_perms };
+	ps_process_pattern($1, mdadm_t)
+
+	init_labeled_script_domtrans($1, mdadm_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 mdadm_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_pids($1)
+	admin_pattern($1, mdadm_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/raid.te refpolicy/policy/modules/contrib/raid.te
--- refpolicy/policy/modules/contrib/raid.te	2012-07-25 20:33:05.000000000 +0200
+++ refpolicy/policy/modules/contrib/raid.te	2012-09-27 20:03:30.754126498 +0200
@@ -1,4 +1,4 @@
-policy_module(raid, 1.12.0)
+policy_module(raid, 1.12.3)
 
 ########################################
 #
@@ -8,13 +8,13 @@
 type mdadm_t;
 type mdadm_exec_t;
 init_daemon_domain(mdadm_t, mdadm_exec_t)
-role system_r types mdadm_t;
 
-type mdadm_map_t;
-files_type(mdadm_map_t)
+type mdadm_initrc_exec_t;
+init_script_file(mdadm_initrc_exec_t)
 
-type mdadm_var_run_t;
+type mdadm_var_run_t alias mdadm_map_t;
 files_pid_file(mdadm_var_run_t)
+dev_associate(mdadm_var_run_t)
 
 ########################################
 #
@@ -23,22 +23,23 @@
 
 allow mdadm_t self:capability { dac_override sys_admin ipc_lock };
 dontaudit mdadm_t self:capability sys_tty_config;
-allow mdadm_t self:process { sigchld sigkill sigstop signull signal };
+allow mdadm_t self:process { getsched setsched signal_perms };
 allow mdadm_t self:fifo_file rw_fifo_file_perms;
+allow mdadm_t self:netlink_kobject_uevent_socket create_socket_perms;
 
-# create .mdadm files in /dev
-allow mdadm_t mdadm_map_t:file manage_file_perms;
-dev_filetrans(mdadm_t, mdadm_map_t, file)
-
+manage_dirs_pattern(mdadm_t, mdadm_var_run_t, mdadm_var_run_t)
 manage_files_pattern(mdadm_t, mdadm_var_run_t, mdadm_var_run_t)
-files_pid_filetrans(mdadm_t, mdadm_var_run_t, file)
+manage_lnk_files_pattern(mdadm_t, mdadm_var_run_t, mdadm_var_run_t)
+manage_sock_files_pattern(mdadm_t, mdadm_var_run_t, mdadm_var_run_t)
+dev_filetrans(mdadm_t, mdadm_var_run_t, file)
+files_pid_filetrans(mdadm_t, mdadm_var_run_t, { dir file })
 
+kernel_getattr_core_if(mdadm_t)
 kernel_read_system_state(mdadm_t)
 kernel_read_kernel_sysctls(mdadm_t)
+kernel_request_load_module(mdadm_t)
 kernel_rw_software_raid_state(mdadm_t)
-kernel_getattr_core_if(mdadm_t)
 
-# Helper program access
 corecmd_exec_bin(mdadm_t)
 corecmd_exec_shell(mdadm_t)
 
@@ -46,9 +47,6 @@
 # Ignore attempts to read every device file
 dev_dontaudit_getattr_all_blk_files(mdadm_t)
 dev_dontaudit_getattr_all_chr_files(mdadm_t)
-dev_dontaudit_getattr_generic_files(mdadm_t)
-dev_dontaudit_getattr_generic_chr_files(mdadm_t)
-dev_dontaudit_getattr_generic_blk_files(mdadm_t)
 dev_read_realtime_clock(mdadm_t)
 # unfortunately needed for DMI decoding:
 dev_read_raw_memory(mdadm_t)
@@ -59,16 +57,17 @@
 files_read_etc_runtime_files(mdadm_t)
 files_dontaudit_getattr_all_files(mdadm_t)
 
-fs_search_auto_mountpoints(mdadm_t)
+fs_list_auto_mountpoints(mdadm_t)
+fs_list_hugetlbfs(mdadm_t)
 fs_dontaudit_list_tmpfs(mdadm_t)
 
 mls_file_read_all_levels(mdadm_t)
 mls_file_write_all_levels(mdadm_t)
 
-# RAID block device access
-storage_manage_fixed_disk(mdadm_t)
 storage_dev_filetrans_fixed_disk(mdadm_t)
+storage_manage_fixed_disk(mdadm_t)
 storage_read_scsi_generic(mdadm_t)
+storage_write_scsi_generic(mdadm_t)
 
 term_dontaudit_list_ptys(mdadm_t)
 term_dontaudit_use_unallocated_ttys(mdadm_t)
@@ -83,20 +82,22 @@
 userdom_dontaudit_search_user_home_content(mdadm_t)
 userdom_dontaudit_use_user_terminals(mdadm_t)
 
-mta_send_mail(mdadm_t)
+optional_policy(`
+	cron_system_entry(mdadm_t, mdadm_exec_t)
+')
 
 optional_policy(`
 	gpm_dontaudit_getattr_gpmctl(mdadm_t)
 ')
 
 optional_policy(`
-	seutil_sigchld_newrole(mdadm_t)
+	mta_send_mail(mdadm_t)
 ')
 
 optional_policy(`
-	udev_read_db(mdadm_t)
+	seutil_sigchld_newrole(mdadm_t)
 ')
 
 optional_policy(`
-	unconfined_domain(mdadm_t)
+	udev_read_db(mdadm_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/readahead.if refpolicy/policy/modules/contrib/readahead.if
--- refpolicy/policy/modules/contrib/readahead.if	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/readahead.if	2012-09-28 19:41:35.412019034 +0200
@@ -1 +1,21 @@
-## <summary>Readahead, read files into page cache for improved performance</summary>
+## <summary>Readahead, read files into page cache for improved performance.</summary>
+
+########################################
+## <summary>
+##	Execute a domain transition
+##	to run readahead.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`readahead_domtrans',`
+	gen_require(`
+		type readahead_t, readahead_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, readahead_exec_t, readahead_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/readahead.te refpolicy/policy/modules/contrib/readahead.te
--- refpolicy/policy/modules/contrib/readahead.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/readahead.te	2012-09-28 19:41:35.413019034 +0200
@@ -1,4 +1,4 @@
-policy_module(readahead, 1.12.0)
+policy_module(readahead, 1.12.1)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/rhcs.if refpolicy/policy/modules/contrib/rhcs.if
--- refpolicy/policy/modules/contrib/rhcs.if	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/rhcs.if	2012-09-27 20:03:30.754126498 +0200
@@ -13,7 +13,7 @@
 #
 template(`rhcs_domain_template',`
 	gen_require(`
-		attribute cluster_domain;
+		attribute cluster_domain, cluster_pid, cluster_tmpfs;
 	')
 
 	##############################
@@ -25,13 +25,13 @@
 	type $1_exec_t;
 	init_daemon_domain($1_t, $1_exec_t)
 
-	type $1_tmpfs_t;
+	type $1_tmpfs_t, cluster_tmpfs;
 	files_tmpfs_file($1_tmpfs_t)
 
 	type $1_var_log_t;
 	logging_log_file($1_var_log_t)
 
-	type $1_var_run_t;
+	type $1_var_run_t, cluster_pid;
 	files_pid_file($1_var_run_t)
 
 	##############################
@@ -75,6 +75,25 @@
 
 #####################################
 ## <summary>
+##	Get attributes of fenced
+##	executable files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_getattr_fenced_exec_files',`
+	gen_require(`
+		type fenced_exec_t;
+	')
+
+	allow $1 fenced_exec_t:file getattr_file_perms;
+')
+
+#####################################
+## <summary>
 ##	Connect to dlm_controld over a unix domain
 ##	stream socket.
 ## </summary>
@@ -154,6 +173,26 @@
 	manage_files_pattern($1, fenced_tmpfs_t, fenced_tmpfs_t)
 ')
 
+####################################
+## <summary>
+##	Connect to all cluster domains
+##	over a unix domain stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_stream_connect_cluster',`
+	gen_require(`
+		attribute cluster_domain, cluster_pid;
+	')
+
+	files_search_pids($1)
+	stream_connect_pattern($1, cluster_pid, cluster_pid, cluster_domain)
+')
+
 ######################################
 ## <summary>
 ##	Connect to fenced over an unix domain stream socket.
@@ -293,6 +332,47 @@
 	stream_connect_pattern($1, groupd_var_run_t, groupd_var_run_t, groupd_t)
 ')
 
+########################################
+## <summary>
+##	Read and write all cluster domains
+##	shared memory.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_rw_cluster_shm',`
+	gen_require(`
+		attribute cluster_domain, cluster_tmpfs;
+	')
+
+	allow $1 cluster_domain:shm { rw_shm_perms destroy };
+
+	fs_search_tmpfs($1)
+	manage_files_pattern($1, cluster_tmpfs, cluster_tmpfs)
+')
+
+####################################
+## <summary>
+##	Read and write all cluster
+##	domains semaphores.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rhcs_rw_cluster_semaphores',`
+	gen_require(`
+		attribute cluster_domain;
+	')
+
+	allow $1 cluster_domain:sem { rw_sem_perms destroy };
+')
+
 #####################################
 ## <summary>
 ##	Allow read and write access to groupd semaphores.
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/rhcs.te refpolicy/policy/modules/contrib/rhcs.te
--- refpolicy/policy/modules/contrib/rhcs.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/rhcs.te	2012-09-27 20:03:30.754126498 +0200
@@ -1,4 +1,4 @@
-policy_module(rhcs, 1.1.0)
+policy_module(rhcs, 1.1.2)
 
 ########################################
 #
@@ -13,6 +13,8 @@
 gen_tunable(fenced_can_network_connect, false)
 
 attribute cluster_domain;
+attribute cluster_tmpfs;
+attribute cluster_pid;
 
 rhcs_domain_template(dlm_controld)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/rpc.te refpolicy/policy/modules/contrib/rpc.te
--- refpolicy/policy/modules/contrib/rpc.te	2012-09-28 19:56:54.041040254 +0200
+++ refpolicy/policy/modules/contrib/rpc.te	2012-09-08 19:00:27.127559027 +0200
@@ -1,4 +1,4 @@
-policy_module(rpc, 1.14.0)
+policy_module(rpc, 1.14.2)
 
 ########################################
 #
@@ -10,7 +10,7 @@
 ## Allow gssd to read temp directory.  For access to kerberos tgt.
 ## </p>
 ## </desc>
-gen_tunable(allow_gssd_read_tmp, true)
+gen_tunable(allow_gssd_read_tmp, false)
 
 ## <desc>
 ## <p>
@@ -59,6 +59,7 @@
 #
 
 allow rpcd_t self:capability { sys_admin chown dac_override setgid setuid };
+allow rpcd_t self:capability2 block_suspend;
 allow rpcd_t self:process { getcap setcap };
 allow rpcd_t self:fifo_file rw_fifo_file_perms;
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/rpcbind.if refpolicy/policy/modules/contrib/rpcbind.if
--- refpolicy/policy/modules/contrib/rpcbind.if	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/rpcbind.if	2012-09-27 20:03:30.754126498 +0200
@@ -117,6 +117,24 @@
 
 ########################################
 ## <summary>
+##	Send null signals to rpcbind.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rpcbind_signull',`
+	gen_require(`
+		type rpcbind_t;
+	')
+
+	allow $1 rpcbind_t:process signull;
+')
+
+########################################
+## <summary>
 ##	All of the rules required to administrate
 ##	an rpcbind environment
 ## </summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/rpcbind.te refpolicy/policy/modules/contrib/rpcbind.te
--- refpolicy/policy/modules/contrib/rpcbind.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/rpcbind.te	2012-09-27 20:03:30.754126498 +0200
@@ -1,4 +1,4 @@
-policy_module(rpcbind, 1.5.0)
+policy_module(rpcbind, 1.5.1)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/rpm.fc refpolicy/policy/modules/contrib/rpm.fc
--- refpolicy/policy/modules/contrib/rpm.fc	2012-06-26 16:05:01.000000000 +0200
+++ refpolicy/policy/modules/contrib/rpm.fc	2012-09-27 20:03:30.755126498 +0200
@@ -36,7 +36,6 @@
 /var/lib/rpm(/.*)?			gen_context(system_u:object_r:rpm_var_lib_t,s0)
 /var/lib/yum(/.*)?			gen_context(system_u:object_r:rpm_var_lib_t,s0)
 
-/var/log/rpmpkgs.*		--	gen_context(system_u:object_r:rpm_log_t,s0)
 /var/log/yum\.log.*		--	gen_context(system_u:object_r:rpm_log_t,s0)
 
 /var/run/yum.*			--	gen_context(system_u:object_r:rpm_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/rsync.if refpolicy/policy/modules/contrib/rsync.if
--- refpolicy/policy/modules/contrib/rsync.if	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/rsync.if	2012-09-27 20:03:30.755126498 +0200
@@ -141,3 +141,52 @@
 	allow $1 rsync_etc_t:file read_file_perms;
 	files_search_etc($1)
 ')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	rsync config files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`rsync_manage_config_files',`
+	gen_require(`
+		type rsync_etc_t;
+	')
+
+	manage_files_pattern($1, rsync_etc_t, rsync_etc_t)
+	files_search_etc($1)
+')
+
+########################################
+## <summary>
+##	Create objects in etc directories
+##	with rsync etc type.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="object_class">
+##	<summary>
+##	Class of the object being created.
+##	</summary>
+## </param>
+## <param name="name" optional="true">
+##	<summary>
+##	The name of the object being created.
+##	</summary>
+## </param>
+#
+interface(`rsync_etc_filetrans_config',`
+	gen_require(`
+		type rsync_etc_t;
+	')
+
+	files_etc_filetrans($1, rsync_etc_t, $2, $3)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/rsync.te refpolicy/policy/modules/contrib/rsync.te
--- refpolicy/policy/modules/contrib/rsync.te	2012-07-25 20:33:05.000000000 +0200
+++ refpolicy/policy/modules/contrib/rsync.te	2012-09-27 20:03:30.755126498 +0200
@@ -1,4 +1,4 @@
-policy_module(rsync, 1.12.0)
+policy_module(rsync, 1.12.1)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/rtkit.fc refpolicy/policy/modules/contrib/rtkit.fc
--- refpolicy/policy/modules/contrib/rtkit.fc	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/rtkit.fc	2012-09-27 20:03:30.755126498 +0200
@@ -1 +1,5 @@
 /usr/libexec/rtkit-daemon	--	gen_context(system_u:object_r:rtkit_daemon_exec_t,s0)
+
+ifdef(`distro_debian',`
+/usr/lib/rtkit/rtkit-daemon	--	gen_context(system_u:object_r:rtkit_daemon_exec_t,s0)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/rtkit.te refpolicy/policy/modules/contrib/rtkit.te
--- refpolicy/policy/modules/contrib/rtkit.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/rtkit.te	2012-09-27 20:03:30.755126498 +0200
@@ -1,4 +1,4 @@
-policy_module(rtkit, 1.1.0)
+policy_module(rtkit, 1.1.1)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/samba.if refpolicy/policy/modules/contrib/samba.if
--- refpolicy/policy/modules/contrib/samba.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/samba.if	2012-09-27 20:03:30.755126498 +0200
@@ -42,6 +42,27 @@
 
 ########################################
 ## <summary>
+##	Connect to nmbd with a unix domain
+##	stream socket.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`samba_stream_connect_nmbd',`
+	gen_require(`
+		type samba_var_t, nmbd_t, nmbd_var_run_t;
+	')
+
+	files_search_pids($1)
+	allow $1 samba_var_t:dir search_dir_perms;
+	stream_connect_pattern($1, nmbd_var_run_t, nmbd_var_run_t, nmbd_t)
+')
+
+########################################
+## <summary>
 ##	Execute samba server in the samba domain.
 ## </summary>
 ## <param name="domain">
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/samba.te refpolicy/policy/modules/contrib/samba.te
--- refpolicy/policy/modules/contrib/samba.te	2012-07-25 20:33:05.000000000 +0200
+++ refpolicy/policy/modules/contrib/samba.te	2012-09-27 20:03:30.756126498 +0200
@@ -1,4 +1,4 @@
-policy_module(samba, 1.15.0)
+policy_module(samba, 1.15.1)
 
 #################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/sanlock.te refpolicy/policy/modules/contrib/sanlock.te
--- refpolicy/policy/modules/contrib/sanlock.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/sanlock.te	2012-09-08 19:23:26.744561966 +0200
@@ -1,4 +1,4 @@
-policy_module(sanlock, 1.0.0)
+policy_module(sanlock, 1.0.1)
 
 ########################################
 #
@@ -44,7 +44,7 @@
 #
 # sanlock local policy
 #
-allow sanlock_t self:capability { sys_nice ipc_lock };
+allow sanlock_t self:capability { chown dac_override ipc_lock kill setgid setuid sys_nice sys_resource };
 allow sanlock_t self:process { setsched signull };
 allow sanlock_t self:fifo_file rw_fifo_file_perms;
 allow sanlock_t self:unix_stream_socket create_stream_socket_perms;
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/sasl.te refpolicy/policy/modules/contrib/sasl.te
--- refpolicy/policy/modules/contrib/sasl.te	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/sasl.te	2012-09-08 18:09:45.176552520 +0200
@@ -1,4 +1,4 @@
-policy_module(sasl, 1.14.0)
+policy_module(sasl, 1.14.1)
 
 ########################################
 #
@@ -99,6 +99,7 @@
 optional_policy(`
 	mysql_search_db(saslauthd_t)
 	mysql_stream_connect(saslauthd_t)
+	mysql_tcp_connect(saslauthd_t)
 ')
 
 optional_policy(`
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/sblim.fc refpolicy/policy/modules/contrib/sblim.fc
--- refpolicy/policy/modules/contrib/sblim.fc	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/sblim.fc	2012-09-27 20:03:30.756126498 +0200
@@ -1,5 +1,7 @@
+/etc/rc\.d/init\.d/gatherer	--	gen_context(system_u:object_r:sblim_initrc_exec_t,s0)
+
 /usr/sbin/gatherd	--	gen_context(system_u:object_r:sblim_gatherd_exec_t,s0)
 
 /usr/sbin/reposd	--	gen_context(system_u:object_r:sblim_reposd_exec_t,s0)
 
-/var/run/gather(/.*)?		gen_context(system_u:object_r:sblim_var_run_t,s0)
+/var/run/gather(/.*)?	gen_context(system_u:object_r:sblim_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/sblim.if refpolicy/policy/modules/contrib/sblim.if
--- refpolicy/policy/modules/contrib/sblim.if	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/sblim.if	2012-09-27 20:03:30.756126498 +0200
@@ -1,8 +1,8 @@
-## <summary> policy for SBLIM Gatherer </summary>
+## <summary>Standards Based Linux Instrumentation for Manageability.</summary>
 
 ########################################
 ## <summary>
-##	Transition to gatherd.
+##	Execute gatherd in the gatherd domain.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -40,8 +40,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an gatherd environment
+##	All of the rules required to
+##	administrate an sblim environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -57,16 +57,17 @@
 #
 interface(`sblim_admin',`
 	gen_require(`
-		type sblim_gatherd_t;
-		type sblim_reposd_t;
+		type sblim_gatherd_t, sblim_initrc_exec_t, sblim_reposd_t;
 		type sblim_var_run_t;
 	')
 
-	allow $1 sblim_gatherd_t:process signal_perms;
-	ps_process_pattern($1, sblim_gatherd_t)
+	allow $1 { sblim_gatherd_t sblim_reposd_t }:process { ptrace signal_perms };
+	ps_process_pattern($1, { sblim_gatherd_t sblim_reposd_t })
 
-	allow $1 sblim_reposd_t:process signal_perms;
-	ps_process_pattern($1, sblim_reposd_t)
+	init_labeled_script_domtrans($1, sblim_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 sblim_initrc_exec_t system_r;
+	allow $2 system_r;
 
 	files_search_pids($1)
 	admin_pattern($1, sblim_var_run_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/sblim.te refpolicy/policy/modules/contrib/sblim.te
--- refpolicy/policy/modules/contrib/sblim.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/sblim.te	2012-09-27 20:03:30.756126498 +0200
@@ -1,4 +1,4 @@
-policy_module(sblim, 1.0.0)
+policy_module(sblim, 1.0.1)
 
 ########################################
 #
@@ -15,6 +15,9 @@
 type sblim_reposd_exec_t;
 init_daemon_domain(sblim_reposd_t, sblim_reposd_exec_t)
 
+type sblim_initrc_exec_t;
+init_script_file(sblim_initrc_exec_t)
+
 type sblim_var_run_t;
 files_pid_file(sblim_var_run_t)
 
@@ -25,7 +28,9 @@
 allow sblim_gatherd_t self:capability dac_override;
 allow sblim_gatherd_t self:process signal;
 allow sblim_gatherd_t self:fifo_file rw_fifo_file_perms;
-allow sblim_gatherd_t self:unix_stream_socket create_stream_socket_perms;
+allow sblim_gatherd_t self:unix_stream_socket { accept listen };
+
+domtrans_pattern(sblim_gatherd_t, sblim_reposd_exec_t, sblim_reposd_t)
 
 kernel_read_fs_sysctls(sblim_gatherd_t)
 kernel_read_kernel_sysctls(sblim_gatherd_t)
@@ -33,6 +38,7 @@
 corecmd_exec_bin(sblim_gatherd_t)
 corecmd_exec_shell(sblim_gatherd_t)
 
+corenet_sendrecv_repository_client_packets(sblim_gatherd_t)
 corenet_tcp_connect_repository_port(sblim_gatherd_t)
 
 dev_read_rand(sblim_gatherd_t)
@@ -42,12 +48,12 @@
 
 fs_getattr_all_fs(sblim_gatherd_t)
 
+init_read_utmp(sblim_gatherd_t)
+
 sysnet_dns_name_resolve(sblim_gatherd_t)
 
 term_getattr_pty_fs(sblim_gatherd_t)
 
-init_read_utmp(sblim_gatherd_t)
-
 userdom_signull_unpriv_users(sblim_gatherd_t)
 
 optional_policy(`
@@ -63,6 +69,7 @@
 ')
 
 optional_policy(`
+	virt_getattr_virtd_exec_files(sblim_gatherd_t)
 	virt_stream_connect(sblim_gatherd_t)
 ')
 
@@ -76,9 +83,7 @@
 # sblim_reposd local policy
 #
 
-domtrans_pattern(sblim_gatherd_t, sblim_reposd_exec_t, sblim_reposd_t)
-
-corenet_tcp_bind_all_nodes(sblim_reposd_t)
+corenet_sendrecv_repository_server_packets(sblim_reposd_t)
 corenet_tcp_bind_repository_port(sblim_reposd_t)
 
 ######################################
@@ -95,6 +100,13 @@
 kernel_read_network_state(sblim_domain)
 kernel_read_system_state(sblim_domain)
 
+corenet_all_recvfrom_unlabeled(sblim_domain)
+corenet_all_recvfrom_netlabel(sblim_domain)
+corenet_tcp_sendrecv_generic_if(sblim_domain)
+corenet_tcp_sendrecv_generic_node(sblim_domain)
+corenet_tcp_bind_generic_node(sblim_domain)
+corenet_tcp_sendrecv_repository_port(sblim_domain)
+
 dev_read_sysfs(sblim_domain)
 
 logging_send_syslog_msg(sblim_domain)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/sensord.fc refpolicy/policy/modules/contrib/sensord.fc
--- refpolicy/policy/modules/contrib/sensord.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/sensord.fc	2012-09-08 18:06:09.089552067 +0200
@@ -0,0 +1,5 @@
+/etc/rc\.d/init\.d/sensord	--	gen_context(system_u:object_r:sensord_initrc_exec_t,s0)
+
+/usr/sbin/sensord	--	gen_context(system_u:object_r:sensord_exec_t,s0)
+
+/var/run/sensord\.pid	--	gen_context(system_u:object_r:sensord_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/sensord.if refpolicy/policy/modules/contrib/sensord.if
--- refpolicy/policy/modules/contrib/sensord.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/sensord.if	2012-09-08 18:06:09.089552067 +0200
@@ -0,0 +1,35 @@
+## <summary>Sensor information logging daemon.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an sensord environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`sensord_admin',`
+	gen_require(`
+		type sensord_t, sensord_initrc_exec_t, sensord_var_run_t;
+	')
+
+	allow $1 sensord_t:process { ptrace signal_perms };
+	ps_process_pattern($1, sensord_t)
+
+	init_labeled_script_domtrans($1, sensord_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 sensord_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_pids($1)
+	admin_pattern($1, sensord_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/sensord.te refpolicy/policy/modules/contrib/sensord.te
--- refpolicy/policy/modules/contrib/sensord.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/sensord.te	2012-09-08 18:06:09.090552067 +0200
@@ -0,0 +1,35 @@
+policy_module(sensord, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type sensord_t;
+type sensord_exec_t;
+init_daemon_domain(sensord_t, sensord_exec_t)
+
+type sensord_initrc_exec_t;
+init_script_file(sensord_initrc_exec_t)
+
+type sensord_var_run_t;
+files_pid_file(sensord_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow sensord_t self:fifo_file rw_fifo_file_perms;
+allow sensord_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_files_pattern(sensord_t, sensord_var_run_t, sensord_var_run_t)
+files_pid_filetrans(sensord_t, sensord_var_run_t, file)
+
+dev_read_sysfs(sensord_t)
+
+files_read_etc_files(sensord_t)
+
+logging_send_syslog_msg(sensord_t)
+
+miscfiles_read_localization(sensord_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/slpd.fc refpolicy/policy/modules/contrib/slpd.fc
--- refpolicy/policy/modules/contrib/slpd.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/slpd.fc	2012-09-24 21:10:42.272581857 +0200
@@ -0,0 +1,7 @@
+/etc/rc\.d/init\.d/slpd	--	gen_context(system_u:object_r:slpd_initrc_exec_t,s0)
+
+/usr/sbin/slpd	--	gen_context(system_u:object_r:slpd_exec_t,s0)
+
+/var/log/slpd\.log.*	--	gen_context(system_u:object_r:slpd_log_t,s0)
+
+/var/run/slpd\.pid	--	gen_context(system_u:object_r:slpd_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/slpd.if refpolicy/policy/modules/contrib/slpd.if
--- refpolicy/policy/modules/contrib/slpd.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/slpd.if	2012-09-24 21:10:42.272581857 +0200
@@ -0,0 +1,39 @@
+## <summary>OpenSLP server daemon to dynamically register services.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an slpd environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`slpd_admin',`
+	gen_require(`
+		type slpd_t, slpd_initrc_exec_t, slpd_log_t;
+		type slpd_var_run_t;
+	')
+
+	allow $1 slpd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, slpd_t)
+
+	init_labeled_script_domtrans($1, slpd_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 slpd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	logging_search_logs($1)
+	admin_pattern($1, slpd_log_t)
+
+	files_search_pids($1)
+	admin_pattern($1, slpd_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/slpd.te refpolicy/policy/modules/contrib/slpd.te
--- refpolicy/policy/modules/contrib/slpd.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/slpd.te	2012-09-24 21:10:42.272581857 +0200
@@ -0,0 +1,51 @@
+policy_module(slpd, 1.0.2)
+
+########################################
+#
+# Declarations
+#
+
+type slpd_t;
+type slpd_exec_t;
+init_daemon_domain(slpd_t, slpd_exec_t)
+
+type slpd_initrc_exec_t;
+init_script_file(slpd_initrc_exec_t)
+
+type slpd_log_t;
+logging_log_file(slpd_log_t)
+
+type slpd_var_run_t;
+files_pid_file(slpd_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow slpd_t self:capability { kill setgid setuid };
+allow slpd_t self:process signal;
+allow slpd_t self:fifo_file rw_fifo_file_perms;
+allow slpd_t self:tcp_socket { accept listen };
+allow slpd_t self:unix_stream_socket create_stream_socket_perms;
+
+allow slpd_t slpd_log_t:file { append_file_perms create_file_perms setattr_file_perms };
+logging_log_filetrans(slpd_t, slpd_log_t, file)
+
+manage_files_pattern(slpd_t, slpd_var_run_t, slpd_var_run_t)
+files_pid_filetrans(slpd_t, slpd_var_run_t, file)
+
+corenet_all_recvfrom_unlabeled(slpd_t)
+corenet_all_recvfrom_netlabel(slpd_t)
+corenet_tcp_sendrecv_generic_if(slpd_t)
+corenet_udp_sendrecv_generic_if(slpd_t)
+corenet_tcp_sendrecv_generic_node(slpd_t)
+corenet_udp_sendrecv_generic_node(slpd_t)
+corenet_tcp_sendrecv_all_ports(slpd_t)
+corenet_udp_sendrecv_all_ports(slpd_t)
+corenet_tcp_bind_generic_node(slpd_t)
+corenet_udp_bind_generic_node(slpd_t)
+
+auth_use_nsswitch(slpd_t)
+
+miscfiles_read_localization(slpd_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/smartmon.fc refpolicy/policy/modules/contrib/smartmon.fc
--- refpolicy/policy/modules/contrib/smartmon.fc	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/smartmon.fc	2012-09-27 20:03:30.756126498 +0200
@@ -1,5 +1,9 @@
 /etc/rc\.d/init\.d/smartd --	gen_context(system_u:object_r:fsdaemon_initrc_exec_t,s0)
 
+ifdef(`distro_debian',`
+/etc/rc\.d/init\.d/smartmontools --	gen_context(system_u:object_r:fsdaemon_initrc_exec_t,s0)
+')
+
 #
 # /usr
 #
@@ -9,4 +13,4 @@
 # /var
 #
 /var/run/smartd\.pid	--	gen_context(system_u:object_r:fsdaemon_var_run_t,s0)
-
+/var/lib/smartmontools(/.*)?	gen_context(system_u:object_r:fsdaemon_var_lib_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/smartmon.if refpolicy/policy/modules/contrib/smartmon.if
--- refpolicy/policy/modules/contrib/smartmon.if	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/smartmon.if	2012-09-27 20:03:30.757126498 +0200
@@ -37,7 +37,7 @@
 #
 interface(`smartmon_admin',`
 	gen_require(`
-		type fsdaemon_t, fsdaemon_tmp_t, fsdaemon_var_run_t;
+		type fsdaemon_t, fsdaemon_tmp_t, fsdaemon_var_run_t, fsdaemon_var_lib_t;
 		type fsdaemon_initrc_exec_t;
 	')
 
@@ -54,4 +54,7 @@
 
 	files_list_pids($1)
 	admin_pattern($1, fsdaemon_var_run_t)
+
+	files_list_var_lib($1)
+	admin_pattern($1, fsdaemon_var_lib_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/smartmon.te refpolicy/policy/modules/contrib/smartmon.te
--- refpolicy/policy/modules/contrib/smartmon.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/smartmon.te	2012-09-27 20:03:30.757126498 +0200
@@ -1,4 +1,4 @@
-policy_module(smartmon, 1.11.0)
+policy_module(smartmon, 1.11.1)
 
 ########################################
 #
@@ -23,6 +23,9 @@
 type fsdaemon_var_run_t;
 files_pid_file(fsdaemon_var_run_t)
 
+type fsdaemon_var_lib_t;
+files_type(fsdaemon_var_lib_t)
+
 type fsdaemon_tmp_t;
 files_tmp_file(fsdaemon_tmp_t)
 
@@ -51,6 +54,8 @@
 manage_files_pattern(fsdaemon_t, fsdaemon_var_run_t, fsdaemon_var_run_t)
 files_pid_filetrans(fsdaemon_t, fsdaemon_var_run_t, file)
 
+manage_files_pattern(fsdaemon_t, fsdaemon_var_lib_t, fsdaemon_var_lib_t)
+
 kernel_read_kernel_sysctls(fsdaemon_t)
 kernel_read_software_raid_state(fsdaemon_t)
 kernel_read_system_state(fsdaemon_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/snmp.if refpolicy/policy/modules/contrib/snmp.if
--- refpolicy/policy/modules/contrib/snmp.if	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/snmp.if	2012-09-27 20:03:30.757126498 +0200
@@ -21,7 +21,7 @@
 
 ########################################
 ## <summary>
-##	Use snmp over a TCP connection.  (Deprecated)
+##	Connect to snmp over the TCP network.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -30,7 +30,14 @@
 ## </param>
 #
 interface(`snmp_tcp_connect',`
-	refpolicywarn(`$0($*) has been deprecated.')
+	gen_require(`
+		type snmpd_t;
+	')
+
+	corenet_tcp_recvfrom_labeled($1, snmpd_t)
+	corenet_tcp_sendrecv_snmp_port($1)
+	corenet_tcp_connect_snmp_port($1)
+	corenet_sendrecv_snmp_client_packets($1)
 ')
 
 ########################################
@@ -48,6 +55,27 @@
 ')
 
 ########################################
+## <summary>
+##	Create, read, write, and delete
+##	snmp lib files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`snmp_manage_var_lib_files',`
+	gen_require(`
+		type snmpd_var_lib_t;
+	')
+
+	files_search_var_lib($1)
+	allow $1 snmpd_var_lib_t:dir list_dir_perms;
+	manage_files_pattern($1, snmpd_var_lib_t, snmpd_var_lib_t)
+')
+
+########################################
 ## <summary>
 ##	Read snmpd libraries.
 ## </summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/snmp.te refpolicy/policy/modules/contrib/snmp.te
--- refpolicy/policy/modules/contrib/snmp.te	2012-07-25 20:33:05.000000000 +0200
+++ refpolicy/policy/modules/contrib/snmp.te	2012-09-27 20:03:30.757126498 +0200
@@ -1,4 +1,4 @@
-policy_module(snmp, 1.13.0)
+policy_module(snmp, 1.13.1)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/spamassassin.te refpolicy/policy/modules/contrib/spamassassin.te
--- refpolicy/policy/modules/contrib/spamassassin.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/spamassassin.te	2012-09-08 18:02:32.519551601 +0200
@@ -1,4 +1,4 @@
-policy_module(spamassassin, 2.5.0)
+policy_module(spamassassin, 2.5.1)
 
 ########################################
 #
@@ -17,7 +17,7 @@
 ## Allow spamd to read/write user home directories.
 ## </p>
 ## </desc>
-gen_tunable(spamd_enable_home_dirs, true)
+gen_tunable(spamd_enable_home_dirs, false)
 
 type spamassassin_t;
 type spamassassin_exec_t;
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/sssd.te refpolicy/policy/modules/contrib/sssd.te
--- refpolicy/policy/modules/contrib/sssd.te	2012-07-10 14:45:57.000000000 +0200
+++ refpolicy/policy/modules/contrib/sssd.te	2012-09-08 19:00:51.973559070 +0200
@@ -29,6 +29,7 @@
 # sssd local policy
 #
 allow sssd_t self:capability { dac_read_search dac_override kill sys_nice setgid setuid };
+allow sssd_t self:capability2 block_suspend;
 allow sssd_t self:process { setfscreate setsched sigkill signal getsched };
 allow sssd_t self:fifo_file rw_file_perms;
 allow sssd_t self:unix_stream_socket { create_stream_socket_perms connectto };
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/svnserve.fc refpolicy/policy/modules/contrib/svnserve.fc
--- refpolicy/policy/modules/contrib/svnserve.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/svnserve.fc	2012-09-24 21:24:46.727583659 +0200
@@ -0,0 +1,8 @@
+/etc/rc\.d/init\.d/svnserve	--	gen_context(system_u:object_r:svnserve_initrc_exec_t,s0)
+
+/usr/bin/svnserve	--	gen_context(system_u:object_r:svnserve_exec_t,s0)
+
+/var/lib/subversion/repo(/.*)?	gen_context(system_u:object_r:svnserve_content_t,s0)
+
+/var/run/svnserve(/.*)?	gen_context(system_u:object_r:svnserve_var_run_t,s0)
+/var/run/svnserve\.pid	--	gen_context(system_u:object_r:svnserve_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/svnserve.if refpolicy/policy/modules/contrib/svnserve.if
--- refpolicy/policy/modules/contrib/svnserve.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/svnserve.if	2012-09-24 21:24:46.727583659 +0200
@@ -0,0 +1,35 @@
+## <summary>Server for the svn repository access method.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an svnserve environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`svnserve_admin',`
+	gen_require(`
+		type svnserve_t, svnserve_initrc_exec_t, svnserve_var_run_t;
+	')
+
+	allow $1 svnserve_t:process { ptrace signal_perms };
+	ps_process_pattern($1, svnserve_t)
+
+	init_labeled_script_domtrans($1, svnserve_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 svnserve_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_pids($1)
+	admin_pattern($1, httpd_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/svnserve.te refpolicy/policy/modules/contrib/svnserve.te
--- refpolicy/policy/modules/contrib/svnserve.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/svnserve.te	2012-09-24 21:24:46.727583659 +0200
@@ -0,0 +1,58 @@
+policy_module(svnserve, 1.0.1)
+
+########################################
+#
+# Declarations
+#
+
+type svnserve_t;
+type svnserve_exec_t;
+init_daemon_domain(svnserve_t, svnserve_exec_t)
+
+type svnserve_initrc_exec_t;
+init_script_file(svnserve_initrc_exec_t)
+
+type svnserve_content_t;
+files_type(svnserve_content_t)
+
+type svnserve_var_run_t;
+files_pid_file(svnserve_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow svnserve_t self:fifo_file rw_fifo_file_perms;
+allow svnserve_t self:unix_stream_socket { listen accept };
+
+manage_dirs_pattern(svnserve_t, svnserve_content_t, svnserve_content_t)
+manage_files_pattern(svnserve_t, svnserve_content_t, svnserve_content_t)
+
+manage_dirs_pattern(svnserve_t, svnserve_var_run_t, svnserve_var_run_t)
+manage_files_pattern(svnserve_t, svnserve_var_run_t, svnserve_var_run_t)
+files_pid_filetrans(svnserve_t, svnserve_var_run_t, { dir file })
+
+files_read_etc_files(svnserve_t)
+files_read_usr_files(svnserve_t)
+
+corenet_all_recvfrom_unlabeled(svnserve_t)
+corenet_all_recvfrom_netlabel(svnserve_t)
+corenet_tcp_sendrecv_generic_if(svnserve_t)
+corenet_udp_sendrecv_generic_if(svnserve_t)
+corenet_tcp_sendrecv_generic_node(svnserve_t)
+corenet_udp_sendrecv_generic_node(svnserve_t)
+corenet_tcp_bind_generic_node(svnserve_t)
+corenet_udp_bind_generic_node(svnserve_t)
+
+corenet_sendrecv_svn_server_packets(svnserve_t)
+corenet_tcp_bind_svn_port(svnserve_t)
+corenet_tcp_sendrecv_svn_port(svnserve_t)
+corenet_udp_bind_svn_port(svnserve_t)
+corenet_udp_sendrecv_svn_port(svnserve_t)
+
+logging_send_syslog_msg(svnserve_t)
+
+miscfiles_read_localization(svnserve_t)
+
+sysnet_dns_name_resolve(svnserve_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/systemtap.fc refpolicy/policy/modules/contrib/systemtap.fc
--- refpolicy/policy/modules/contrib/systemtap.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/systemtap.fc	2012-09-08 18:51:23.395557869 +0200
@@ -0,0 +1,11 @@
+/etc/stap-server(/.*)?	--	gen_context(system_u:object_r:stapserver_conf_t,s0)
+
+/etc/rc\.d/init\.d/stap-server	--	gen_context(system_u:object_r:stapserver_initrc_exec_t,s0)
+
+/usr/bin/stap-server	--	gen_context(system_u:object_r:stapserver_exec_t,s0)
+
+/var/lib/stap-server(/.*)?	gen_context(system_u:object_r:stapserver_var_lib_t,s0)
+
+/var/log/stap-server(/.*)?	gen_context(system_u:object_r:stapserver_log_t,s0)
+
+/var/run/stap-server(/.*)?	gen_context(system_u:object_r:stapserver_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/systemtap.if refpolicy/policy/modules/contrib/systemtap.if
--- refpolicy/policy/modules/contrib/systemtap.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/systemtap.if	2012-09-24 21:12:10.171582041 +0200
@@ -0,0 +1,45 @@
+## <summary>instrumentation system for Linux.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an stapserver environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`stapserver_admin',`
+	gen_require(`
+		type stapserver_t, stapserver_conf_t, stapserver_log_t;
+		type stap_server_var_run_t, stapserver_initrc_exec_t, stapserver_var_lib_t;
+	')
+
+	allow $1 stapserver_t:process { ptrace signal_perms };
+	ps_process_pattern($1, stapserver_t)
+
+	init_labeled_script_domtrans($1, stapserver_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 stapserver_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_etc($1)
+	admin_pattern($1, stapserver_conf_t)
+
+	files_search_var_lib($1)
+	admin_pattern($1, stapserver_var_lib_t)
+
+	logging_search_logs($1)
+	admin_pattern($1, stapserver_log_t)
+
+	files_search_pids($1)
+	admin_pattern($1, stapserver_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/systemtap.te refpolicy/policy/modules/contrib/systemtap.te
--- refpolicy/policy/modules/contrib/systemtap.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/systemtap.te	2012-09-24 21:26:52.187583936 +0200
@@ -0,0 +1,101 @@
+policy_module(systemtap, 1.0.2)
+
+########################################
+#
+# Declarations
+#
+
+type stapserver_t;
+type stapserver_exec_t;
+init_daemon_domain(stapserver_t, stapserver_exec_t)
+
+type stapserver_initrc_exec_t;
+init_script_file(stapserver_initrc_exec_t)
+
+type stapserver_conf_t;
+files_config_file(stapserver_conf_t)
+
+type stapserver_var_lib_t;
+files_type(stapserver_var_lib_t)
+
+type stapserver_log_t;
+logging_log_file(stapserver_log_t)
+
+type stapserver_var_run_t;
+files_pid_file(stapserver_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow stapserver_t self:capability { dac_override kill setuid setgid };
+allow stapserver_t self:process { setrlimit setsched signal };
+allow stapserver_t self:fifo_file rw_fifo_file_perms;
+allow stapserver_t self:key write;
+allow stapserver_t self:unix_stream_socket { accept listen };
+allow stapserver_t self:tcp_socket create_stream_socket_perms;
+
+allow stapserver_t stapserver_conf_t:file read_file_perms;
+
+manage_dirs_pattern(stapserver_t, stapserver_var_lib_t, stapserver_var_lib_t)
+manage_files_pattern(stapserver_t, stapserver_var_lib_t, stapserver_var_lib_t)
+files_var_lib_filetrans(stapserver_t, stapserver_var_lib_t, dir)
+
+manage_dirs_pattern(stapserver_t, stapserver_log_t, stapserver_log_t)
+append_files_pattern(stapserver_t, stapserver_log_t, stapserver_log_t)
+create_files_pattern(stapserver_t, stapserver_log_t, stapserver_log_t)
+setattr_files_pattern(stapserver_t, stapserver_log_t, stapserver_log_t)
+logging_log_filetrans(stapserver_t, stapserver_log_t, dir )
+
+manage_dirs_pattern(stapserver_t, stapserver_var_run_t, stapserver_var_run_t)
+manage_files_pattern(stapserver_t, stapserver_var_run_t, stapserver_var_run_t)
+files_pid_filetrans(stapserver_t, stapserver_var_run_t, dir )
+
+kernel_read_kernel_sysctls(stapserver_t)
+kernel_read_system_state(stapserver_t)
+
+corecmd_exec_bin(stapserver_t)
+corecmd_exec_shell(stapserver_t)
+
+domain_read_all_domains_state(stapserver_t)
+
+dev_read_rand(stapserver_t)
+dev_read_sysfs(stapserver_t)
+dev_read_urand(stapserver_t)
+
+files_list_tmp(stapserver_t)
+files_read_usr_files(stapserver_t)
+files_search_kernel_modules(stapserver_t)
+
+auth_use_nsswitch(stapserver_t)
+
+init_read_utmp(stapserver_t)
+
+logging_send_audit_msgs(stapserver_t)
+logging_send_syslog_msg(stapserver_t)
+
+miscfiles_read_localization(stapserver_t)
+miscfiles_read_hwdata(stapserver_t)
+
+userdom_use_user_terminals(stapserver_t)
+
+optional_policy(`
+	consoletype_exec(stapserver_t)
+')
+
+optional_policy(`
+	dbus_system_bus_client(stapserver_t)
+')
+
+optional_policy(`
+	hostname_exec(stapserver_t)
+')
+
+optional_policy(`
+	plymouthd_exec_plymouth(stapserver_t)
+')
+
+optional_policy(`
+	rpm_exec(stapserver_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/tcsd.fc refpolicy/policy/modules/contrib/tcsd.fc
--- refpolicy/policy/modules/contrib/tcsd.fc	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/tcsd.fc	2012-09-28 19:48:30.185028631 +0200
@@ -1,3 +1,6 @@
 /etc/rc\.d/init\.d/tcsd	--	gen_context(system_u:object_r:tcsd_initrc_exec_t,s0)
-/usr/sbin/tcsd		--	gen_context(system_u:object_r:tcsd_exec_t,s0)
-/var/lib/tpm(/.*)?		gen_context(system_u:object_r:tcsd_var_lib_t,s0)
+/etc/rc\.d/init\.d/trousers	--	gen_context(system_u:object_r:tcsd_initrc_exec_t,s0)
+
+/usr/sbin/tcsd	--	gen_context(system_u:object_r:tcsd_exec_t,s0)
+
+/var/lib/tpm(/.*)?	gen_context(system_u:object_r:tcsd_var_lib_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/tcsd.if refpolicy/policy/modules/contrib/tcsd.if
--- refpolicy/policy/modules/contrib/tcsd.if	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/tcsd.if	2012-09-27 20:03:30.757126498 +0200
@@ -1,4 +1,4 @@
-## <summary>TSS Core Services (TCS) daemon (tcsd) policy</summary>
+## <summary>TSS Core Services daemon.</summary>
 
 ########################################
 ## <summary>
@@ -6,7 +6,7 @@
 ## </summary>
 ## <param name="domain">
 ## <summary>
-##	Domain allowed access.
+##	Domain allowed to transition.
 ## </summary>
 ## </param>
 #
@@ -15,6 +15,7 @@
 		type tcsd_t, tcsd_exec_t;
 	')
 
+	corecmd_search_bin($1)
 	domtrans_pattern($1, tcsd_exec_t, tcsd_t)
 ')
 
@@ -24,7 +25,7 @@
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	The type of the process performing this action.
+##	Domain allowed to transition.
 ##	</summary>
 ## </param>
 #
@@ -57,7 +58,8 @@
 
 ########################################
 ## <summary>
-##	Manage tcsd lib dirs files.
+##	Create, read, write, and delete
+##	tcsd lib directories.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -115,8 +117,8 @@
 
 ########################################
 ## <summary>
-##	All of the rules required to administrate
-##	an tcsd environment
+##	All of the rules required to
+##	administrate an tcsd environment.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -132,9 +134,7 @@
 #
 interface(`tcsd_admin',`
 	gen_require(`
-		type tcsd_t;
-		type tcsd_initrc_exec_t;
-		type tcsd_var_lib_t;
+		type tcsd_t, tcsd_initrc_exec_t, tcsd_var_lib_t;
 	')
 
 	allow $1 tcsd_t:process { ptrace signal_perms };
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/tcsd.te refpolicy/policy/modules/contrib/tcsd.te
--- refpolicy/policy/modules/contrib/tcsd.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/tcsd.te	2012-09-27 20:03:30.757126498 +0200
@@ -1,4 +1,4 @@
-policy_module(tcsd, 1.0.0)
+policy_module(tcsd, 1.0.1)
 
 ########################################
 #
@@ -7,7 +7,6 @@
 
 type tcsd_t;
 type tcsd_exec_t;
-domain_type(tcsd_t)
 init_daemon_domain(tcsd_t, tcsd_exec_t)
 
 type tcsd_initrc_exec_t;
@@ -18,27 +17,29 @@
 
 ########################################
 #
-# tcsd local policy
+# Local policy
 #
 
 allow tcsd_t self:capability { dac_override setuid };
 allow tcsd_t self:process { signal sigkill };
-allow tcsd_t self:tcp_socket create_stream_socket_perms;
+allow tcsd_t self:tcp_socket { accept listen };
 
 manage_dirs_pattern(tcsd_t, tcsd_var_lib_t, tcsd_var_lib_t)
 manage_files_pattern(tcsd_t, tcsd_var_lib_t, tcsd_var_lib_t)
-files_var_lib_filetrans(tcsd_t, tcsd_var_lib_t, { file dir })
+files_var_lib_filetrans(tcsd_t, tcsd_var_lib_t, dir)
 
-# Accept connections on the TCS port over loopback.
 corenet_all_recvfrom_unlabeled(tcsd_t)
+corenet_all_recvfrom_netlabel(tcsd_t)
+corenet_tcp_sendrecv_generic_if(tcsd_t)
+corenet_tcp_sendrecv_generic_node(tcsd_t)
+corenet_tcp_sendrecv_tcs_port(tcsd_t)
 corenet_tcp_bind_generic_node(tcsd_t)
+corenet_sendrecv_tcs_server_packets(tcsd_t)
 corenet_tcp_bind_tcs_port(tcsd_t)
 
 dev_read_urand(tcsd_t)
-# Access /dev/tpm0.
 dev_rw_tpm(tcsd_t)
 
-files_read_etc_files(tcsd_t)
 files_read_usr_files(tcsd_t)
 
 auth_use_nsswitch(tcsd_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/telepathy.fc refpolicy/policy/modules/contrib/telepathy.fc
--- refpolicy/policy/modules/contrib/telepathy.fc	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/telepathy.fc	2012-09-24 21:32:21.081584613 +0200
@@ -14,5 +14,20 @@
 /usr/libexec/telepathy-logger		--	gen_context(system_u:object_r:telepathy_logger_exec_t,s0)
 /usr/libexec/telepathy-salut		--	gen_context(system_u:object_r:telepathy_salut_exec_t, s0)
 /usr/libexec/telepathy-sofiasip		--	gen_context(system_u:object_r:telepathy_sofiasip_exec_t, s0)
+/usr/libexec/telepathy-rakia		--	gen_context(system_u:object_r:telepathy_sofiasip_exec_t,s0)
 /usr/libexec/telepathy-stream-engine	--	gen_context(system_u:object_r:telepathy_stream_engine_exec_t, s0)
 /usr/libexec/telepathy-sunshine		--	gen_context(system_u:object_r:telepathy_sunshine_exec_t, s0)
+
+ifdef(`distro_debian',`
+/usr/lib/telepathy/mission-control-5	--	gen_context(system_u:object_r:telepathy_mission_control_exec_t, s0)
+/usr/lib/telepathy/telepathy-butterfly	--	gen_context(system_u:object_r:telepathy_msn_exec_t, s0)
+/usr/lib/telepathy/telepathy-gabble	--	gen_context(system_u:object_r:telepathy_gabble_exec_t, s0)
+/usr/lib/telepathy/telepathy-haze	--	gen_context(system_u:object_r:telepathy_msn_exec_t, s0)
+/usr/lib/telepathy/telepathy-idle	--	gen_context(system_u:object_r:telepathy_idle_exec_t, s0)
+/usr/lib/telepathy/telepathy-logger	--	gen_context(system_u:object_r:telepathy_logger_exec_t,s0)
+/usr/lib/telepathy/telepathy-salut	--	gen_context(system_u:object_r:telepathy_salut_exec_t, s0)
+/usr/lib/telepathy/telepathy-sofiasip	--	gen_context(system_u:object_r:telepathy_sofiasip_exec_t, s0)
+/usr/lib/telepathy/telepathy-rakia	--	gen_context(system_u:object_r:telepathy_sofiasip_exec_t, s0)
+/usr/lib/telepathy/telepathy-stream-engine	--	gen_context(system_u:object_r:telepathy_stream_engine_exec_t, s0)
+/usr/lib/telepathy/telepathy-sunshine	--	gen_context(system_u:object_r:telepathy_sunshine_exec_t, s0)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/telepathy.if refpolicy/policy/modules/contrib/telepathy.if
--- refpolicy/policy/modules/contrib/telepathy.if	2012-07-10 14:44:44.000000000 +0200
+++ refpolicy/policy/modules/contrib/telepathy.if	2012-09-27 20:03:30.758126498 +0200
@@ -44,6 +44,12 @@
 ##	The type of the user domain.
 ##	</summary>
 ## </param>
+## <param name="role_prefix">
+##	<summary>
+##	The prefix of the user role (e.g., user
+##	is the prefix for user_r).
+##	</summary>
+## </param>
 #
 template(`telepathy_role', `
 	gen_require(`
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/telepathy.te refpolicy/policy/modules/contrib/telepathy.te
--- refpolicy/policy/modules/contrib/telepathy.te	2012-07-25 20:33:05.000000000 +0200
+++ refpolicy/policy/modules/contrib/telepathy.te	2012-09-27 20:03:30.758126498 +0200
@@ -1,4 +1,4 @@
-policy_module(telepathy, 1.3.0)
+policy_module(telepathy, 1.3.3)
 
 ########################################
 #
@@ -128,6 +128,7 @@
 dev_read_rand(telepathy_idle_t)
 
 files_read_etc_files(telepathy_idle_t)
+files_read_usr_files(telepathy_idle_t)
 
 tunable_policy(`telepathy_connect_all_ports',`
 	corenet_tcp_connect_all_ports(telepathy_idle_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/telnet.te refpolicy/policy/modules/contrib/telnet.te
--- refpolicy/policy/modules/contrib/telnet.te	2012-09-28 19:56:54.110040255 +0200
+++ refpolicy/policy/modules/contrib/telnet.te	2012-07-26 22:23:04.299973125 +0200
@@ -82,11 +82,13 @@
 
 seutil_read_config(telnetd_t)
 
-remotelogin_domtrans(telnetd_t)
-
 userdom_search_user_home_dirs(telnetd_t)
 userdom_setattr_user_ptys(telnetd_t)
 
+optional_policy(`
+	remotelogin_domtrans(telnetd_t)
+')
+
 tunable_policy(`use_nfs_home_dirs',`
 	fs_search_nfs(telnetd_t)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/tftp.if refpolicy/policy/modules/contrib/tftp.if
--- refpolicy/policy/modules/contrib/tftp.if	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/tftp.if	2012-09-27 20:03:30.758126498 +0200
@@ -40,6 +40,89 @@
 
 ########################################
 ## <summary>
+##	Manage tftp config files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`tftp_manage_config_files',`
+	gen_require(`
+		type tftpd_etc_t;
+	')
+
+	files_search_etc($1)
+ 	manage_files_pattern($1, tftpd_etc_t, tftpd_etc_t)
+')
+
+########################################
+## <summary>
+##	Create objects in etc directories
+##	with tftp etc type.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="object_class">
+##	<summary>
+##	Class of the object being created.
+##	</summary>
+## </param>
+## <param name="name" optional="true">
+##	<summary>
+##	The name of the object being created.
+##	</summary>
+## </param>
+#
+interface(`tftp_etc_filetrans_config',`
+	gen_require(`
+		type tftp_etc_t;
+	')
+
+	files_etc_filetrans($1, tftp_etc_t, $2, $3)
+')
+
+########################################
+## <summary>
+##	Create objects in tftpdir directories
+##	with a private type.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="private_type">
+##	<summary>
+##	Private file type.
+##	</summary>
+## </param>
+## <param name="object_class">
+##	<summary>
+##	Class of the object being created.
+##	</summary>
+## </param>
+## <param name="name" optional="true">
+##	<summary>
+##	The name of the object being created.
+##	</summary>
+## </param>
+#
+interface(`tftp_filetrans_tftpdir',`
+	gen_require(`
+		type tftpdir_rw_t;
+	')
+
+	files_search_var_lib($1)
+	filetrans_pattern($1, tftpdir_rw_t, $2, $3, $4)
+')
+
+########################################
+## <summary>
 ##	All of the rules required to administrate
 ##	an tftp environment
 ## </summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/tftp.te refpolicy/policy/modules/contrib/tftp.te
--- refpolicy/policy/modules/contrib/tftp.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/tftp.te	2012-09-27 20:03:30.758126498 +0200
@@ -1,4 +1,4 @@
-policy_module(tftp, 1.12.0)
+policy_module(tftp, 1.12.1)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/thunderbird.te refpolicy/policy/modules/contrib/thunderbird.te
--- refpolicy/policy/modules/contrib/thunderbird.te	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/thunderbird.te	2012-09-27 20:03:30.758126498 +0200
@@ -1,4 +1,4 @@
-policy_module(thunderbird, 2.3.0)
+policy_module(thunderbird, 2.3.1)
 
 ########################################
 #
@@ -179,7 +179,7 @@
 
 optional_policy(`
 	dbus_system_bus_client(thunderbird_t)
-	dbus_session_bus_client(thunderbird_t)
+	dbus_all_session_bus_client(thunderbird_t)
 ')
 
 optional_policy(`
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/tmpreaper.fc refpolicy/policy/modules/contrib/tmpreaper.fc
--- refpolicy/policy/modules/contrib/tmpreaper.fc	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/tmpreaper.fc	2012-08-09 17:44:28.531883156 +0200
@@ -1,6 +1,6 @@
 ifdef(`distro_debian',`
-/etc/init\.d/mountall-bootclean.sh --	gen_context(system_u:object_r:tmpreaper_exec_t,s0)
-/etc/init\.d/mountnfs-bootclean.sh --	gen_context(system_u:object_r:tmpreaper_exec_t,s0)
+/etc/rc\.d/init\.d/mountall-bootclean.sh --	gen_context(system_u:object_r:tmpreaper_exec_t,s0)
+/etc/rc\.d/init\.d/mountnfs-bootclean.sh --	gen_context(system_u:object_r:tmpreaper_exec_t,s0)
 ')
 
 /usr/sbin/tmpreaper		--	gen_context(system_u:object_r:tmpreaper_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/tor.te refpolicy/policy/modules/contrib/tor.te
--- refpolicy/policy/modules/contrib/tor.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/tor.te	2012-09-08 19:26:11.795562366 +0200
@@ -1,4 +1,4 @@
-policy_module(tor, 1.8.0)
+policy_module(tor, 1.8.2)
 
 ########################################
 #
@@ -35,6 +35,7 @@
 # pid files
 type tor_var_run_t;
 files_pid_file(tor_var_run_t)
+init_daemon_run_dir(tor_var_run_t, "tor")
 
 ########################################
 #
@@ -72,6 +73,7 @@
 manage_sock_files_pattern(tor_t, tor_var_run_t, tor_var_run_t)
 files_pid_filetrans(tor_t, tor_var_run_t, { dir file sock_file })
 
+kernel_read_net_sysctls(tor_t)
 kernel_read_system_state(tor_t)
 
 # networking basics
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ucspitcp.fc refpolicy/policy/modules/contrib/ucspitcp.fc
--- refpolicy/policy/modules/contrib/ucspitcp.fc	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/ucspitcp.fc	2012-09-24 21:28:19.760584123 +0200
@@ -1,3 +1,2 @@
-
 /usr/bin/rblsmtpd	--	gen_context(system_u:object_r:rblsmtpd_exec_t,s0)
 /usr/bin/tcpserver	--	gen_context(system_u:object_r:ucspitcp_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ucspitcp.if refpolicy/policy/modules/contrib/ucspitcp.if
--- refpolicy/policy/modules/contrib/ucspitcp.if	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/ucspitcp.if	2012-09-24 21:29:14.059584229 +0200
@@ -1,9 +1,4 @@
-## <summary>ucspitcp policy</summary>
-## <desc>
-##	<p>
-##	Policy for DJB's ucspi-tcpd
-##	</p>
-## </desc>
+## <summary>UNIX Client-Server Program Interface for TCP</summary>
 
 ########################################
 ## <summary>
@@ -23,7 +18,6 @@
 interface(`ucspitcp_service_domain', `
 	gen_require(`
 		type ucspitcp_t;
-		role system_r;
 	')
 
 	domain_type($1)
@@ -31,8 +25,5 @@
 
 	role system_r types $1;
 
-	domain_auto_trans(ucspitcp_t, $2, $1)
-	allow $1 ucspitcp_t:fd use;
-	allow $1 ucspitcp_t:process sigchld;
-	allow $1 ucspitcp_t:tcp_socket rw_stream_socket_perms;
+	domtrans_pattern(ucspitcp_t, $2, $1)
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/ucspitcp.te refpolicy/policy/modules/contrib/ucspitcp.te
--- refpolicy/policy/modules/contrib/ucspitcp.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/ucspitcp.te	2012-09-24 21:29:33.613584272 +0200
@@ -1,4 +1,4 @@
-policy_module(ucspitcp, 1.3.0)
+policy_module(ucspitcp, 1.3.1)
 
 ########################################
 #
@@ -8,12 +8,10 @@
 type rblsmtpd_t;
 type rblsmtpd_exec_t;
 init_system_domain(rblsmtpd_t, rblsmtpd_exec_t)
-role system_r types rblsmtpd_t;
 
 type ucspitcp_t;
 type ucspitcp_exec_t;
 init_system_domain(ucspitcp_t, ucspitcp_exec_t)
-role system_r types ucspitcp_t;
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/vdagent.fc refpolicy/policy/modules/contrib/vdagent.fc
--- refpolicy/policy/modules/contrib/vdagent.fc	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/vdagent.fc	2012-09-27 20:03:30.758126498 +0200
@@ -4,4 +4,4 @@
 /var/log/spice-vdagentd\.log	--	gen_context(system_u:object_r:vdagent_log_t,s0)
 
 /var/run/spice-vdagentd(/.*)?		gen_context(system_u:object_r:vdagent_var_run_t,s0)
-/var/run/spice-vdagentd.\pid	--	gen_context(system_u:object_r:vdagent_var_run_t,s0)
+/var/run/spice-vdagentd\.pid	--	gen_context(system_u:object_r:vdagent_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/vdagent.te refpolicy/policy/modules/contrib/vdagent.te
--- refpolicy/policy/modules/contrib/vdagent.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/vdagent.te	2012-09-27 20:03:30.758126498 +0200
@@ -1,4 +1,4 @@
-policy_module(vdagent, 1.0.0)
+policy_module(vdagent, 1.0.1)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/vde.fc refpolicy/policy/modules/contrib/vde.fc
--- refpolicy/policy/modules/contrib/vde.fc	2012-09-28 19:56:54.024040254 +0200
+++ refpolicy/policy/modules/contrib/vde.fc	2012-08-09 17:44:46.118883860 +0200
@@ -1,4 +1,4 @@
-/etc/init.d/vde		--	gen_context(system_u:object_r:vde_initrc_exec_t,s0)
+/etc/rc\.d/init\.d/vde	--	gen_context(system_u:object_r:vde_initrc_exec_t,s0)
 /usr/bin/vde_switch	--	gen_context(system_u:object_r:vde_exec_t,s0)
 /usr/sbin/vde_tunctl	--	gen_context(system_u:object_r:vde_exec_t,s0)
 /var/run/vde\.ctl(/.*)?		gen_context(system_u:object_r:vde_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/virt.fc refpolicy/policy/modules/contrib/virt.fc
--- refpolicy/policy/modules/contrib/virt.fc	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/virt.fc	2012-09-28 19:48:46.728029012 +0200
@@ -6,6 +6,7 @@
 /etc/libvirt/[^/]*	--	gen_context(system_u:object_r:virt_etc_t,s0)
 /etc/libvirt/[^/]*	-d	gen_context(system_u:object_r:virt_etc_rw_t,s0)
 /etc/libvirt/.*/.*		gen_context(system_u:object_r:virt_etc_rw_t,s0)
+/etc/rc\.d/init\.d/libvirt-bin --	gen_context(system_u:object_r:virtd_initrc_exec_t,s0)
 /etc/rc\.d/init\.d/libvirtd --	gen_context(system_u:object_r:virtd_initrc_exec_t,s0)
 /etc/xen		-d	gen_context(system_u:object_r:virt_etc_t,s0)
 /etc/xen/[^/]*		--	gen_context(system_u:object_r:virt_etc_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/virt.if refpolicy/policy/modules/contrib/virt.if
--- refpolicy/policy/modules/contrib/virt.if	2012-07-10 14:44:44.000000000 +0200
+++ refpolicy/policy/modules/contrib/virt.if	2012-09-27 20:03:30.759126498 +0200
@@ -118,6 +118,24 @@
 
 #######################################
 ## <summary>
+##	Get attributes of virtd executable files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`virt_getattr_virtd_exec_files',`
+	gen_require(`
+		type virtd_exec_t;
+	')
+
+	allow $1 virtd_exec_t:file getattr_file_perms;
+')
+
+#######################################
+## <summary>
 ##	Connect to virt over an unix domain stream socket.
 ## </summary>
 ## <param name="domain">
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/virt.te refpolicy/policy/modules/contrib/virt.te
--- refpolicy/policy/modules/contrib/virt.te	2012-07-25 20:33:05.000000000 +0200
+++ refpolicy/policy/modules/contrib/virt.te	2012-09-08 18:02:44.581551640 +0200
@@ -1,4 +1,4 @@
-policy_module(virt, 1.5.0)
+policy_module(virt, 1.5.1)
 
 ########################################
 #
@@ -45,7 +45,7 @@
 ## Allow virt to use usb devices
 ## </p>
 ## </desc>
-gen_tunable(virt_use_usb, true)
+gen_tunable(virt_use_usb, false)
 
 virt_domain_template(svirt)
 role system_r types svirt_t;
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/wdmd.fc refpolicy/policy/modules/contrib/wdmd.fc
--- refpolicy/policy/modules/contrib/wdmd.fc	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/wdmd.fc	2012-09-24 21:15:51.030582515 +0200
@@ -0,0 +1,5 @@
+/etc/rc\.d/init\.d/wdmd	--	gen_context(system_u:object_r:wdmd_initrc_exec_t,s0)
+
+/var/run/wdmd(/.*)?	gen_context(system_u:object_r:wdmd_var_run_t,s0)
+
+/usr/sbin/wdmd	--	gen_context(system_u:object_r:wdmd_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/wdmd.if refpolicy/policy/modules/contrib/wdmd.if
--- refpolicy/policy/modules/contrib/wdmd.if	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/wdmd.if	2012-09-24 21:15:51.030582515 +0200
@@ -0,0 +1,35 @@
+## <summary>Watchdog multiplexing daemon.</summary>
+
+########################################
+## <summary>
+##	All of the rules required to
+##	administrate an wdmd environment.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`wdmd_admin',`
+	gen_require(`
+		type wdmd_t, wdmd_initrc_exec_t, wdmd_var_run_t;
+	')
+
+	allow $1 wdmd_t:process { ptrace signal_perms };
+	ps_process_pattern($1, wdmd_t)
+
+	init_labeled_script_domtrans($1, wdmd_initrc_exec_t)
+	domain_system_change_exemption($1)
+	role_transition $2 wdmd_initrc_exec_t system_r;
+	allow $2 system_r;
+
+	files_search_pids($1)
+	admin_pattern($1, wdmd_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/wdmd.te refpolicy/policy/modules/contrib/wdmd.te
--- refpolicy/policy/modules/contrib/wdmd.te	1970-01-01 01:00:00.000000000 +0100
+++ refpolicy/policy/modules/contrib/wdmd.te	2012-09-24 21:15:51.030582515 +0200
@@ -0,0 +1,49 @@
+policy_module(wdmd, 1.0.0)
+
+########################################
+#
+# Declarations
+#
+
+type wdmd_t;
+type wdmd_exec_t;
+init_daemon_domain(wdmd_t, wdmd_exec_t)
+
+type wdmd_initrc_exec_t;
+init_script_file(wdmd_initrc_exec_t)
+
+type wdmd_tmpfs_t;
+files_tmpfs_file(wdmd_tmpfs_t)
+
+type wdmd_var_run_t;
+files_pid_file(wdmd_var_run_t)
+
+########################################
+#
+# Local policy
+#
+
+allow wdmd_t self:capability { chown sys_nice ipc_lock };
+allow wdmd_t self:process { setsched signal };
+allow wdmd_t self:fifo_file rw_fifo_file_perms;
+allow wdmd_t self:unix_stream_socket create_stream_socket_perms;
+
+manage_dirs_pattern(wdmd_t, wdmd_var_run_t, wdmd_var_run_t)
+manage_files_pattern(wdmd_t, wdmd_var_run_t, wdmd_var_run_t)
+manage_sock_files_pattern(wdmd_t, wdmd_var_run_t, wdmd_var_run_t)
+files_pid_filetrans(wdmd_t, wdmd_var_run_t, { file dir sock_file })
+
+manage_dirs_pattern(wdmd_t, wdmd_tmpfs_t, wdmd_tmpfs_t)
+manage_files_pattern(wdmd_t, wdmd_tmpfs_t, wdmd_tmpfs_t)
+fs_tmpfs_filetrans(wdmd_t, wdmd_tmpfs_t, { dir file })
+
+dev_read_watchdog(wdmd_t)
+dev_write_watchdog(wdmd_t)
+
+fs_read_anon_inodefs_files(wdmd_t)
+
+auth_use_nsswitch(wdmd_t)
+
+logging_send_syslog_msg(wdmd_t)
+
+miscfiles_read_localization(wdmd_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/wm.if refpolicy/policy/modules/contrib/wm.if
--- refpolicy/policy/modules/contrib/wm.if	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/wm.if	2012-09-27 20:03:30.759126498 +0200
@@ -79,7 +79,7 @@
 
 	optional_policy(`
 		dbus_system_bus_client($1_wm_t)
-		dbus_session_bus_client($1_wm_t)
+		dbus_session_bus_client($1, $1_wm_t)
 	')
 
 	optional_policy(`
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/wm.te refpolicy/policy/modules/contrib/wm.te
--- refpolicy/policy/modules/contrib/wm.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/wm.te	2012-09-27 20:03:30.759126498 +0200
@@ -1,4 +1,4 @@
-policy_module(wm, 1.2.0)
+policy_module(wm, 1.2.1)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/xen.te refpolicy/policy/modules/contrib/xen.te
--- refpolicy/policy/modules/contrib/xen.te	2012-07-25 20:33:05.000000000 +0200
+++ refpolicy/policy/modules/contrib/xen.te	2012-09-08 18:03:03.462551675 +0200
@@ -1,4 +1,4 @@
-policy_module(xen, 1.12.0)
+policy_module(xen, 1.12.1)
 
 ########################################
 #
@@ -11,7 +11,7 @@
 ## Not required if using dedicated logical volumes for disk images.
 ## </p>
 ## </desc>
-gen_tunable(xend_run_blktap, true)
+gen_tunable(xend_run_blktap, false)
 
 ## <desc>
 ## <p>
@@ -19,7 +19,7 @@
 ## Not required if using paravirt and no vfb.
 ## </p>
 ## </desc>
-gen_tunable(xend_run_qemu, true)
+gen_tunable(xend_run_qemu, false)
 
 ## <desc>
 ## <p>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/xguest.te refpolicy/policy/modules/contrib/xguest.te
--- refpolicy/policy/modules/contrib/xguest.te	2012-05-04 15:16:28.000000000 +0200
+++ refpolicy/policy/modules/contrib/xguest.te	2012-09-08 18:03:21.058551703 +0200
@@ -1,4 +1,4 @@
-policy_module(xguest, 1.1.0)
+policy_module(xguest, 1.1.1)
 
 ########################################
 #
@@ -10,21 +10,21 @@
 ## Allow xguest users to mount removable media
 ## </p>
 ## </desc>
-gen_tunable(xguest_mount_media, true)
+gen_tunable(xguest_mount_media, false)
 
 ## <desc>
 ## <p>
 ## Allow xguest to configure Network Manager
 ## </p>
 ## </desc>
-gen_tunable(xguest_connect_network, true)
+gen_tunable(xguest_connect_network, false)
 
 ## <desc>
 ## <p>
 ## Allow xguest to use blue tooth devices
 ## </p>
 ## </desc>
-gen_tunable(xguest_use_bluetooth, true)
+gen_tunable(xguest_use_bluetooth, false)
 
 role xguest_r;
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/zabbix.if refpolicy/policy/modules/contrib/zabbix.if
--- refpolicy/policy/modules/contrib/zabbix.if	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/zabbix.if	2012-09-27 20:03:30.759126498 +0200
@@ -33,7 +33,7 @@
 		type zabbix_t;
 	')
 
-	corenet_sendrecv_zabbix_agent_client_packets($1)
+	corenet_sendrecv_zabbix_client_packets($1)
 	corenet_tcp_connect_zabbix_port($1)
 	corenet_tcp_recvfrom_labeled($1, zabbix_t)
 	corenet_tcp_sendrecv_zabbix_port($1)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/contrib/zabbix.te refpolicy/policy/modules/contrib/zabbix.te
--- refpolicy/policy/modules/contrib/zabbix.te	2012-05-04 15:15:22.000000000 +0200
+++ refpolicy/policy/modules/contrib/zabbix.te	2012-09-27 20:03:30.759126498 +0200
@@ -1,4 +1,4 @@
-policy_module(zabbix, 1.5.0)
+policy_module(zabbix, 1.5.1)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/kernel/corecommands.fc refpolicy/policy/modules/kernel/corecommands.fc
--- refpolicy/policy/modules/kernel/corecommands.fc	2012-09-28 19:56:54.012040253 +0200
+++ refpolicy/policy/modules/kernel/corecommands.fc	2012-09-28 19:54:11.294036511 +0200
@@ -66,14 +66,17 @@
 /etc/hotplug/hotplug\.functions --	gen_context(system_u:object_r:bin_t,s0)
 /etc/hotplug\.d/default/default.*	gen_context(system_u:object_r:bin_t,s0)
 
-/etc/init\.d/functions		--	gen_context(system_u:object_r:bin_t,s0)
-
 /etc/kde/env(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 /etc/kde/shutdown(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 
 /etc/mail/make			--	gen_context(system_u:object_r:bin_t,s0)
-/etc/mcelog/cache-error-trigger	--	gen_context(system_u:object_r:bin_t,s0)
+
+/etc/mcelog/.*-error-trigger	--	gen_context(system_u:object_r:bin_t,s0)
+/etc/mcelog/.*\.local		--	gen_context(system_u:object_r:bin_t,s0)
+
+ifdef(`distro_redhat',`
 /etc/mcelog/triggers(/.*)?		gen_context(system_u:object_r:bin_t,s0)
+')
 /etc/mgetty\+sendfax/new_fax	--	gen_context(system_u:object_r:bin_t,s0)
 
 /etc/netplug\.d(/.*)? 	 		gen_context(system_u:object_r:bin_t,s0)
@@ -191,6 +194,7 @@
 /usr/bin/scponly		--	gen_context(system_u:object_r:shell_exec_t,s0)
 /usr/bin/tcsh			--	gen_context(system_u:object_r:shell_exec_t,s0)
 
+
 /usr/lib(.*/)?bin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 
 /usr/(.*/)?sbin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
@@ -229,7 +233,7 @@
 /usr/lib/rpm/rpmq		-- 	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/rpm/rpmv		-- 	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/sftp-server		--	gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/vte/gnome-pty-helper	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/vte/gnome-pty-helper 	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/xfce4/exo-1/exo-compose-mail-1 -- gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/xfce4/exo-1/exo-helper-1 --	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/xfce4/panel/migrate	--	gen_context(system_u:object_r:bin_t,s0)
@@ -245,15 +249,15 @@
 /usr/lib/debug/usr/bin(/.*)?	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/debug/usr/sbin(/.*)?	--	gen_context(system_u:object_r:bin_t,s0)
 
-/usr/lib/[^/]*thunderbird[^/]*/thunderbird -- gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/[^/]*thunderbird[^/]*/thunderbird-bin -- gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/[^/]*thunderbird[^/]*/open-browser\.sh -- gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/[^/]*/run-mozilla\.sh --	gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/[^/]*/mozilla-xremote-client -- gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/thunderbird.*/mozilla-xremote-client 		-- gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/nspluginwrapper/i386/linux/npviewer.bin	--	gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/nspluginwrapper/i386/linux/npviewer		--	gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/xulrunner-.*/plugin-container			--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/[^/]*thunderbird[^/]*/thunderbird	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/[^/]*thunderbird[^/]*/thunderbird-bin	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/[^/]*thunderbird[^/]*/open-browser\.sh --	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/[^/]*/run-mozilla\.sh			--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/[^/]*/mozilla-xremote-client		--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/thunderbird.*/mozilla-xremote-client	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/nspluginwrapper/i386/linux/npviewer.bin --	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/nspluginwrapper/i386/linux/npviewer	--	gen_context(system_u:object_r:shell_exec_t,s0)
+/usr/lib/xulrunner-.*/plugin-container		--	gen_context(system_u:object_r:bin_t,s0)
 
 /usr/lib/xen/bin(/.*)?			gen_context(system_u:object_r:bin_t,s0)
 
@@ -263,19 +267,19 @@
 
 /usr/libexec/openssh/sftp-server --	gen_context(system_u:object_r:bin_t,s0)
 
-/usr/local/lib(64)?/ipsec/.*	-- 	gen_context(system_u:object_r:bin_t,s0)
 /usr/local/Brother(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/local/Printer(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/local/linuxprinter/filters(/.*)?	gen_context(system_u:object_r:bin_t,s0)
 
+
 /usr/sbin/scponlyc		--	gen_context(system_u:object_r:shell_exec_t,s0)
 /usr/sbin/sesh			--	gen_context(system_u:object_r:shell_exec_t,s0)
 /usr/sbin/smrsh			--	gen_context(system_u:object_r:shell_exec_t,s0)
 
 /usr/share/ajaxterm/ajaxterm.py.* --	gen_context(system_u:object_r:bin_t,s0)
-/usr/share/ajaxterm/qweb.py.* --	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/ajaxterm/qweb.py.*	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/apr-0/build/[^/]+\.sh --	gen_context(system_u:object_r:bin_t,s0)
-/usr/share/apr-0/build/libtool --	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/apr-0/build/libtool	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/build-1/mkdir.sh	--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/dayplanner/dayplanner --	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/debconf/.+		--	gen_context(system_u:object_r:bin_t,s0)
@@ -285,14 +289,14 @@
 /usr/share/cluster/ocf-shellfuncs --	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/cluster/svclib_nfslock --	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/e16/misc(/.*)?		gen_context(system_u:object_r:bin_t,s0)
-/usr/share/gedit-2/plugins/externaltools/tools(/.*)? gen_context(system_u:object_r:bin_t,s0)
-/usr/share/gitolite/hooks/common/update -- gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gedit-2/plugins/externaltools/tools(/.*)?	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gitolite/hooks/common/update		--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/gitolite/hooks/gitolite-admin/post-update -- gen_context(system_u:object_r:bin_t,s0)
-/usr/share/gnucash/finance-quote-check -- gen_context(system_u:object_r:bin_t,s0)
-/usr/share/gnucash/finance-quote-helper -- gen_context(system_u:object_r:bin_t,s0)
-/usr/share/GNUstep/Makefiles/*\.sh	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gnucash/finance-quote-check		--	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/gnucash/finance-quote-helper		--	gen_context(system_u:object_r:bin_t,s0)
+/usr/share/GNUstep/Makefiles/*\.sh		--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/GNUstep/Makefiles/mkinstalldirs	--	gen_context(system_u:object_r:bin_t,s0)
-/usr/share/hal/device-manager/hal-device-manager -- gen_context(system_u:object_r:bin_t,s0)
+/usr/share/hal/device-manager/hal-device-manager --	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/hal/scripts(/.*)?		gen_context(system_u:object_r:bin_t,s0)
 /usr/share/mc/extfs/.*		--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/Modules/init(/.*)?		gen_context(system_u:object_r:bin_t,s0)
@@ -317,7 +321,9 @@
 /usr/X11R6/lib(64)?/X11/xkb/xkbcomp --	gen_context(system_u:object_r:bin_t,s0)
 
 ifdef(`distro_debian',`
-/usr/lib/ConsoleKit/.*		--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/ConsoleKit/.*	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/gdm3/.*	--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/udisks/.*	--	gen_context(system_u:object_r:bin_t,s0)
 ')
 
 ifdef(`distro_gentoo', `
@@ -385,7 +391,7 @@
 ifdef(`distro_suse', `
 /usr/lib/cron/run-crons		--	gen_context(system_u:object_r:bin_t,s0)
 /usr/lib/samba/classic/.*	--	gen_context(system_u:object_r:bin_t,s0)
-/usr/lib/ssh/.*			--	gen_context(system_u:object_r:bin_t,s0)
+/usr/lib/ssh/.*		--	gen_context(system_u:object_r:bin_t,s0)
 /usr/share/apache2/[^/]*	--	gen_context(system_u:object_r:bin_t,s0)
 ')
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/kernel/corecommands.te refpolicy/policy/modules/kernel/corecommands.te
--- refpolicy/policy/modules/kernel/corecommands.te	2012-07-25 20:33:04.000000000 +0200
+++ refpolicy/policy/modules/kernel/corecommands.te	2012-09-28 19:54:59.287037593 +0200
@@ -1,4 +1,4 @@
-policy_module(corecommands, 1.17.0)
+policy_module(corecommands, 1.17.3)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/kernel/corenetwork.te.in refpolicy/policy/modules/kernel/corenetwork.te.in
--- refpolicy/policy/modules/kernel/corenetwork.te.in	2012-07-25 20:33:05.000000000 +0200
+++ refpolicy/policy/modules/kernel/corenetwork.te.in	2012-09-28 19:51:05.197032195 +0200
@@ -1,4 +1,4 @@
-policy_module(corenetwork, 1.18.0)
+policy_module(corenetwork, 1.18.1)
 
 ########################################
 #
@@ -78,6 +78,7 @@
 network_port(afs_ka, udp,7004,s0)
 network_port(afs_pt, udp,7002,s0)
 network_port(afs_vl, udp,7003,s0)
+network_port(afs3_callback, tcp,7001,s0, udp,7001,s0)
 network_port(agentx, udp,705,s0, tcp,705,s0)
 network_port(amanda, udp,10080-10082,s0, tcp,10080-10083,s0)
 network_port(amavisd_recv, tcp,10024,s0)
@@ -85,19 +86,28 @@
 network_port(amqp, udp,5671-5672,s0, tcp,5671-5672,s0)
 network_port(aol, udp,5190-5193,s0, tcp,5190-5193,s0)
 network_port(apcupsd, tcp,3551,s0, udp,3551,s0)
+network_port(apertus_ldp, tcp,539,s0, udp,539,s0)
+network_port(armtechdaemon, tcp,9292,s0, udp,9292,s0)
 network_port(asterisk, tcp,1720,s0, udp,2427,s0, udp,2727,s0, udp,4569,s0)
 network_port(audit, tcp,60,s0)
 network_port(auth, tcp,113,s0)
 network_port(bgp, tcp,179,s0, udp,179,s0, tcp,2605,s0, udp,2605,s0)
 network_port(boinc, tcp,31416,s0)
+network_port(boinc_client, tcp,1043,s0, udp,1034,s0)
 network_port(biff) # no defined portcon
 network_port(certmaster, tcp,51235,s0)
 network_port(chronyd, udp,323,s0)
 network_port(clamd, tcp,3310,s0)
 network_port(clockspeed, udp,4041,s0)
 network_port(cluster, tcp,5149,s0, udp,5149,s0, tcp,40040,s0, tcp,50006-50008,s0, udp,50006-50008,s0)
+network_port(cma, tcp,1050,s0, udp,1050,s0)
 network_port(cobbler, tcp,25151,s0)
+network_port(commplex_link, tcp,5001,s0, udp,5001,s0)
+network_port(commplex_main, tcp,5000,s0, udp,5000,s0)
 network_port(comsat, udp,512,s0)
+network_port(condor, tcp,9618,s0, udp,9618,s0)
+network_port(couchdb, tcp,5984,s0, udp,5984,s0)
+network_port(ctdb, tcp,4379,s0, udp,4397,s0)
 network_port(cvs, tcp,2401,s0, udp,2401,s0)
 network_port(cyphesis, tcp,6767,s0, tcp,6769,s0, tcp,6780-6799,s0, udp,32771,s0)
 network_port(daap, tcp,3689,s0, udp,3689,s0)
@@ -108,12 +118,16 @@
 network_port(dhcpd, udp,67,s0, udp,547,s0, tcp, 547,s0, udp,548,s0, tcp, 548,s0, tcp,647,s0, udp,647,s0, tcp,847,s0, udp,847,s0, tcp,7911,s0)
 network_port(dict, tcp,2628,s0)
 network_port(distccd, tcp,3632,s0)
-network_port(dns, udp,53,s0, tcp,53,s0)
+network_port(dns, tcp,53,s0, udp,53,s0)
+network_port(efs, tcp,520,s0)
+network_port(embrace_dp_c, tcp,3198,s0, udp,3198,s0)
 network_port(epmap, tcp,135,s0, udp,135,s0)
+network_port(epmd, tcp,4369,s0, udp,4369,s0)
 network_port(fingerd, tcp,79,s0)
 network_port(ftp, tcp,21,s0, tcp,990,s0, udp,990,s0)
 network_port(ftp_data, tcp,20,s0)
 network_port(gatekeeper, udp,1718,s0, udp,1719,s0, tcp,1721,s0, tcp,7000,s0)
+network_port(gds_db, tcp,3050,s0, udp,3050,s0)
 network_port(giftd, tcp,1213,s0)
 network_port(git, tcp,9418,s0, udp,9418,s0)
 network_port(glance_registry, tcp,9191,s0, udp,9191,s0)
@@ -123,13 +137,15 @@
 network_port(hadoop_namenode, tcp,8020,s0)
 network_port(hddtemp, tcp,7634,s0)
 network_port(howl, tcp,5335,s0, udp,5353,s0)
-network_port(hplip, tcp,1782,s0, tcp,2207,s0, tcp,2208,s0, tcp, 8290,s0, tcp,50000,s0, tcp,50002,s0, tcp,8292,s0, tcp,9100,s0, tcp,9101,s0, tcp,9102,s0, tcp,9220,s0, tcp,9221,s0, tcp,9222,s0, tcp,9280,s0, tcp,9281,s0, tcp,9282,s0, tcp,9290,s0, tcp,9291,s0, tcp,9292,s0)
+network_port(hplip, tcp,1782,s0, tcp,2207,s0, tcp,2208,s0, tcp, 8290,s0, tcp,50000,s0, tcp,50002,s0, tcp,8292,s0, tcp,9100,s0, tcp,9101,s0, tcp,9102,s0, tcp,9220,s0, tcp,9221,s0, tcp,9222,s0, tcp,9280,s0, tcp,9281,s0, tcp,9282,s0, tcp,9290,s0, tcp,9291,s0)
 network_port(http, tcp,80,s0, tcp,443,s0, tcp,488,s0, tcp,8008,s0, tcp,8009,s0, tcp,8443,s0) #8443 is mod_nss default port
 network_port(http_cache, tcp,3128,s0, udp,3130,s0, tcp,8080,s0, tcp,8118,s0, tcp,10001-10010,s0) # 8118 is for privoxy
 network_port(i18n_input, tcp,9010,s0)
 network_port(imaze, tcp,5323,s0, udp,5323,s0)
 network_port(inetd_child, tcp,1,s0, udp,1,s0, tcp,7,s0, udp,7,s0, tcp,9,s0, udp,9,s0, tcp,13,s0, udp,13,s0, tcp,19,s0, udp,19,s0, tcp,37,s0, udp,37,s0, tcp,512,s0, tcp,543,s0, tcp,544,s0, tcp,891,s0, udp,891,s0, tcp,892,s0, udp,892,s0, tcp,2105,s0, tcp,5666,s0)
 network_port(innd, tcp,119,s0)
+network_port(interwise, tcp,7778,s0, udp,7778,s0)
+network_port(ionixnetmon, tcp,7410,s0, udp,7410,s0)
 network_port(ipmi, udp,623,s0, udp,664,s0)
 network_port(ipp, tcp,631,s0, udp,631,s0, tcp,8610-8614,s0, udp,8610-8614,s0)
 network_port(ipsecnat, tcp,4500,s0, udp,4500,s0)
@@ -139,12 +155,14 @@
 network_port(isns, tcp,3205,s0, udp,3205,s0)
 network_port(jabber_client, tcp,5222,s0, tcp,5223,s0)
 network_port(jabber_interserver, tcp,5269,s0)
+network_port(jboss_iiop, tcp,3528,s0, udp,3528,s0)
 network_port(kerberos, tcp,88,s0, udp,88,s0, tcp,750,s0, udp,750,s0)
 network_port(kerberos_admin, tcp,464,s0, udp,464,s0, tcp,749,s0)
 network_port(kerberos_master, tcp,4444,s0, udp,4444,s0)
 network_port(kismet, tcp,2501,s0)
 network_port(kprop, tcp,754,s0)
 network_port(ktalkd, udp,517,s0, udp,518,s0)
+network_port(l2tp, tcp,1701,s0, udp,1701,s0)
 network_port(ldap, tcp,389,s0, udp,389,s0, tcp,636,s0, udp,636,s0, tcp,3268,s0)
 network_port(lirc, tcp,8765,s0)
 network_port(lmtp, tcp,24,s0, udp,24,s0)
@@ -155,30 +173,42 @@
 network_port(milter) # no defined portcon
 network_port(mmcc, tcp,5050,s0, udp,5050,s0)
 network_port(monopd, tcp,1234,s0)
+network_port(mountd, tcp,20048,s0, udp,20048,s0)
+network_port(movaz_ssc, tcp,5252,s0, udp,5252,s0)
 network_port(mpd, tcp,6600,s0)
+network_port(msgsrvr, tcp,8787,s0, udp,8787,s0)
 network_port(msnp, tcp,1863,s0, udp,1863,s0)
 network_port(mssql, tcp,1433-1434,s0, udp,1433-1434,s0)
+network_port(ms_streaming, tcp,1755,s0, udp,1755,s0)
 network_port(munin, tcp,4949,s0, udp,4949,s0)
+network_port(mxi, tcp,8005,s0, udp,8005,s0)
 network_port(mysqld, tcp,1186,s0, tcp,3306,s0, tcp,63132-63164,s0)
 network_port(mysqlmanagerd, tcp,2273,s0)
 network_port(nessus, tcp,1241,s0)
 network_port(netport, tcp,3129,s0, udp,3129,s0)
 network_port(netsupport, tcp,5404,s0, udp,5404,s0, tcp,5405,s0, udp,5405,s0)
+network_port(nfs, tcp,2049,s0, udp,2049,s0)
+network_port(nfsrdma, tcp,20049,s0, udp,20049,s0)
 network_port(nmbd, udp,137,s0, udp,138,s0)
 network_port(ntop, tcp,3000-3001,s0, udp,3000-3001,s0)
 network_port(ntp, udp,123,s0)
+network_port(oa_system, tcp,8022,s0, udp,8022,s0)
 network_port(oracledb, tcp, 1521,s0,udp, 1521,s0, tcp,2483,s0,udp,2483,s0, tcp,2484,s0, udp,2484,s0)
 network_port(ocsp, tcp,9080,s0)
+network_port(openhpid, tcp,4743,s0, udp,4743,s0)
 network_port(openvpn, tcp,1194,s0, udp,1194,s0)
+network_port(pdps, tcp,1314,s0, udp,1314,s0)
 network_port(pegasus_http, tcp,5988,s0)
 network_port(pegasus_https, tcp,5989,s0)
 network_port(pgpkeyserver, udp, 11371,s0, tcp,11371,s0)
 network_port(pingd, tcp,9125,s0)
+network_port(pktcable_cops, tcp,2126,s0, udp,2126,s0)
 network_port(pop, tcp,106,s0, tcp,109,s0, tcp,110,s0, tcp,143,s0, tcp,220,s0, tcp,993,s0, tcp,995,s0, tcp,1109,s0)
 network_port(portmap, udp,111,s0, tcp,111,s0)
 network_port(postfix_policyd, tcp,10031,s0)
 network_port(postgresql, tcp,5432,s0)
 network_port(postgrey, tcp,60000,s0)
+network_port(pptp, tcp,1723,s0, udp,1723,s0)
 network_port(prelude, tcp,4690,s0, udp,4690,s0)
 network_port(presence, tcp,5298-5299,s0, udp,5298-5299,s0)
 network_port(printer, tcp,515,s0)
@@ -195,42 +225,54 @@
 network_port(ricci, tcp,11111,s0, udp,11111,s0)
 network_port(ricci_modcluster, tcp,16851,s0, udp,16851,s0)
 network_port(rlogind, tcp,513,s0)
-network_port(rndc, tcp,953,s0)
+network_port(rndc, tcp,953,s0, udp,953,s0)
 network_port(router, udp,520,s0, udp,521,s0, tcp,521,s0)
 network_port(rsh, tcp,514,s0)
 network_port(rsync, tcp,873,s0, udp,873,s0)
+network_port(rtsp, tcp,554,s0, udp,554,s0)
 network_port(rwho, udp,513,s0)
 network_port(sap, tcp,9875,s0, udp,9875,s0)
+network_port(servistaitsm, tcp,3636,s0, udp,3636,s0)
 network_port(sieve, tcp,4190,s0)
 network_port(sip, tcp,5060,s0, udp,5060,s0, tcp,5061,s0, udp,5061,s0)
 network_port(sixxsconfig, tcp,3874,s0, udp,3874,s0)
 network_port(smbd, tcp,137-139,s0, tcp,445,s0)
 network_port(smtp, tcp,25,s0, tcp,465,s0, tcp,587,s0)
-network_port(snmp, udp,161,s0, udp,162,s0, tcp,199,s0, tcp, 1161, s0)
+network_port(snmp, udp,161,s0, udp,162,s0, tcp,199,s0, tcp,1161,s0)
 network_port(socks) # no defined portcon
 network_port(soundd, tcp,8000,s0, tcp,9433,s0, tcp, 16001, s0)
 network_port(spamd, tcp,783,s0)
 network_port(speech, tcp,8036,s0)
 network_port(squid, udp,3401,s0, tcp,3401,s0, udp,4827,s0, tcp,4827,s0) # snmp and htcp
+network_port(ssdp, tcp,1900,s0, udp,1900,s0)
 network_port(ssh, tcp,22,s0)
 network_port(stunnel) # no defined portcon
+network_port(svn, tcp,3690,s0, udp,3690,s0)
 network_port(swat, tcp,901,s0)
+network_port(sype_transport, tcp,9911,s0, udp,9911,s0)
 network_port(syslogd, udp,514,s0)
+network_port(syslog_tls, tcp,6514,s0, udp,6514,s0)
 network_port(tcs, tcp, 30003, s0)
 network_port(telnetd, tcp,23,s0)
 network_port(tftp, udp,69,s0)
-network_port(tor, tcp, 6969, s0, tcp,9001,s0, tcp,9030,s0, tcp,9050,s0, tcp,9051,s0)
+network_port(tor, tcp,6969,s0, tcp,9001,s0, tcp,9030,s0, tcp,9050,s0, tcp,9051,s0)
 network_port(traceroute, udp,64000-64010,s0)
 network_port(transproxy, tcp,8081,s0)
+network_port(trisoap, tcp,10200,s0, udp,10200,s0)
 network_port(ups, tcp,3493,s0)
 network_port(utcpserver) # no defined portcon
 network_port(uucpd, tcp,540,s0)
 network_port(varnishd, tcp,6081-6082,s0)
 network_port(virt, tcp,16509,s0, udp,16509,s0, tcp,16514,s0, udp,16514,s0)
+network_port(virtual_places, tcp,1533,s0, udp,1533,s0)
 network_port(virt_migration, tcp,49152-49216,s0)
 network_port(vnc, tcp,5900,s0)
 network_port(wccp, udp,2048,s0)
-network_port(whois, tcp,43,s0, udp,43,s0, tcp, 4321, s0 , udp, 4321, s0 )
+network_port(websm, tcp,9090,s0, udp,9090,s0)
+network_port(whois, tcp,43,s0, udp,43,s0, tcp,4321,s0, udp,4321,s0)
+network_port(winshadow, tcp,3161,s0, udp,3261,s0)
+network_port(wsdapi, tcp,5357,s0, udp,5357,s0)
+network_port(wsicopy, tcp,3378,s0, udp,3378,s0)
 network_port(xdmcp, udp,177,s0, tcp,177,s0)
 network_port(xen, tcp,8002,s0)
 network_port(xfs, tcp,7100,s0)
@@ -242,6 +284,7 @@
 network_port(zookeeper_election, tcp,3888,s0)
 network_port(zookeeper_leader, tcp,2888,s0)
 network_port(zebra, tcp,2600-2604,s0, tcp,2606,s0, udp,2600-2604,s0, udp,2606,s0)
+network_port(zented, tcp,1229,s0, udp,1229,s0)
 network_port(zope, tcp,8021,s0)
 
 # Defaults for reserved ports.	Earlier portcon entries take precedence;
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/kernel/devices.fc refpolicy/policy/modules/kernel/devices.fc
--- refpolicy/policy/modules/kernel/devices.fc	2012-05-04 15:14:47.000000000 +0200
+++ refpolicy/policy/modules/kernel/devices.fc	2012-09-08 17:52:18.305550319 +0200
@@ -57,8 +57,10 @@
 /dev/lirc[0-9]+		-c	gen_context(system_u:object_r:lirc_device_t,s0)
 /dev/lircm		-c	gen_context(system_u:object_r:mouse_device_t,s0)
 /dev/logibm		-c	gen_context(system_u:object_r:mouse_device_t,s0)
+/dev/loop-control	-c	gen_context(system_u:object_r:loop_control_device_t,s0)
 /dev/lp.*		-c	gen_context(system_u:object_r:printer_device_t,s0)
 /dev/mcelog		-c	gen_context(system_u:object_r:kmsg_device_t,mls_systemhigh)
+/dev/mei		-c	gen_context(system_u:object_r:mei_device_t,s0)
 /dev/mem		-c	gen_context(system_u:object_r:memory_device_t,mls_systemhigh)
 /dev/mergemem		-c	gen_context(system_u:object_r:memory_device_t,mls_systemhigh)
 /dev/mga_vid.*		-c	gen_context(system_u:object_r:xserver_misc_device_t,s0)
@@ -125,8 +127,8 @@
 /dev/vrtpanel		-c	gen_context(system_u:object_r:mouse_device_t,s0)
 /dev/vttuner		-c	gen_context(system_u:object_r:v4l_device_t,s0)
 /dev/vtx.*		-c	gen_context(system_u:object_r:v4l_device_t,s0)
-/dev/watchdog		-c	gen_context(system_u:object_r:watchdog_device_t,s0)
-/dev/winradio.		-c	gen_context(system_u:object_r:v4l_device_t,s0)
+/dev/watchdog.*		-c	gen_context(system_u:object_r:watchdog_device_t,s0)
+/dev/winradio.*		-c	gen_context(system_u:object_r:v4l_device_t,s0)
 /dev/z90crypt		-c	gen_context(system_u:object_r:crypt_device_t,s0)
 /dev/zero		-c	gen_context(system_u:object_r:zero_device_t,s0)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/kernel/devices.te refpolicy/policy/modules/kernel/devices.te
--- refpolicy/policy/modules/kernel/devices.te	2012-07-25 20:33:04.000000000 +0200
+++ refpolicy/policy/modules/kernel/devices.te	2012-09-08 17:52:54.196550377 +0200
@@ -1,4 +1,4 @@
-policy_module(devices, 1.14.0)
+policy_module(devices, 1.14.3)
 
 ########################################
 #
@@ -115,12 +115,18 @@
 type lirc_device_t;
 dev_node(lirc_device_t)
 
+type loop_control_device_t;
+dev_node(loop_control_device_t)
+
 #
 # Type for /dev/mapper/control
 #
 type lvm_control_t;
 dev_node(lvm_control_t)
 
+type mei_device_t;
+dev_node(mei_device_t)
+
 #
 # memory_device_t is the type of /dev/kmem,
 # /dev/mem and /dev/port.
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/kernel/files.fc refpolicy/policy/modules/kernel/files.fc
--- refpolicy/policy/modules/kernel/files.fc	2012-09-28 19:56:54.017040253 +0200
+++ refpolicy/policy/modules/kernel/files.fc	2012-08-29 20:02:12.313673338 +0200
@@ -84,7 +84,7 @@
 
 ifdef(`distro_suse',`
 /etc/defkeymap\.map	--	gen_context(system_u:object_r:etc_runtime_t,s0)
-/etc/init\.d/\.depend.*	--	gen_context(system_u:object_r:etc_runtime_t,s0)
+/etc/rc\.d/init\.d/\.depend.* -- gen_context(system_u:object_r:etc_runtime_t,s0)
 ')
 
 #
@@ -243,6 +243,12 @@
 
 /var/lock(/.*)?			gen_context(system_u:object_r:var_lock_t,s0)
 
+/var/log/lost\+found	-d	gen_context(system_u:object_r:lost_found_t,mls_systemhigh)
+/var/log/lost\+found/.*		<<none>>
+
+/var/log/audit/lost\+found -d	gen_context(system_u:object_r:lost_found_t,mls_systemhigh)
+/var/log/audit/lost\+found/.*	<<none>>
+
 /var/lost\+found	-d	gen_context(system_u:object_r:lost_found_t,mls_systemhigh)
 /var/lost\+found/.*		<<none>>
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/kernel/files.if refpolicy/policy/modules/kernel/files.if
--- refpolicy/policy/modules/kernel/files.if	2012-09-28 19:56:54.135040256 +0200
+++ refpolicy/policy/modules/kernel/files.if	2012-07-28 22:59:11.964346582 +0200
@@ -1430,6 +1430,7 @@
 	seutil_relabelto_bin_policy($1)
 ')
 
+
 #############################################
 ## <summary>
 ##	Manage all configuration directories on filesystem
@@ -1583,43 +1584,43 @@
 
 ########################################
 ## <summary>
-##	Do not audit attempts to set the attributes on all mount points.
+##	Search all mount points.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain to not audit.
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
-interface(`files_dontaudit_setattr_all_mountpoints',`
+interface(`files_search_all_mountpoints',`
 	gen_require(`
 		attribute mountpoint;
 	')
 
-	dontaudit $1 mountpoint:dir setattr;
+	allow $1 mountpoint:dir search_dir_perms;
 ')
 
 ########################################
 ## <summary>
-##	Search all mount points.
+##	Do not audit searching of all mount points.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain allowed access.
+##	Domain to not audit.
 ##	</summary>
 ## </param>
 #
-interface(`files_search_all_mountpoints',`
+interface(`files_dontaudit_search_all_mountpoints',`
 	gen_require(`
 		attribute mountpoint;
 	')
 
-	allow $1 mountpoint:dir search_dir_perms;
+	dontaudit $1 mountpoint:dir search_dir_perms;
 ')
 
 ########################################
 ## <summary>
-##	Do not audit searching of all mount points.
+##	Do not audit listing of all mount points.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -1627,48 +1628,48 @@
 ##	</summary>
 ## </param>
 #
-interface(`files_dontaudit_search_all_mountpoints',`
+interface(`files_dontaudit_list_all_mountpoints',`
 	gen_require(`
 		attribute mountpoint;
 	')
 
-	dontaudit $1 mountpoint:dir search_dir_perms;
+	dontaudit $1 mountpoint:dir list_dir_perms;
 ')
 
 ########################################
 ## <summary>
-##	Do not audit listing of all mount points.
+##	Do not audit write attempts on mount points.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain to not audit.
+##	Domain to ignore write attempts from
 ##	</summary>
 ## </param>
 #
-interface(`files_dontaudit_list_all_mountpoints',`
+interface(`files_dontaudit_write_all_mountpoints',`
 	gen_require(`
 		attribute mountpoint;
 	')
 
-	dontaudit $1 mountpoint:dir list_dir_perms;
+	dontaudit $1 mountpoint:dir write;
 ')
 
 ########################################
 ## <summary>
-##	Do not audit attempts to write to mount points.
+##	Do not audit setattr attempts on mount points.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
-##	Domain to not audit.
+##	Domain to ignore setattr attempts from
 ##	</summary>
 ## </param>
 #
-interface(`files_dontaudit_write_all_mountpoints',`
+interface(`files_dontaudit_setattr_all_mountpoints',`
 	gen_require(`
 		attribute mountpoint;
 	')
 
-	dontaudit $1 mountpoint:dir write;
+	dontaudit $1 mountpoint:dir setattr;
 ')
 
 ########################################
@@ -5607,24 +5608,6 @@
 
 ########################################
 ## <summary>
-##	Set the attributes of the generic lock directories.
-## </summary>
-## <param name="domain">
-##	<summary>
-##	Domain allowed access.
-##	</summary>
-## </param>
-#
-interface(`files_setattr_lock_dirs',`
-	gen_require(`
-		type var_t, var_lock_t;
-	')
-
-	setattr_dirs_pattern($1, var_t, var_lock_t)
-')
-
-########################################
-## <summary>
 ##	Search the locks directory (/var/lock).
 ## </summary>
 ## <param name="domain">
@@ -5703,11 +5686,11 @@
 
 ########################################
 ## <summary>
-## 	Create lock directories
+##	Create lock directories.
 ## </summary>
 ## <param name="domain">
-## 	<summary>
-##	Domain allowed access
+##	<summary>
+##	Domain allowed access.
 ##	</summary>
 ## </param>
 #
@@ -5721,6 +5704,7 @@
 	create_dirs_pattern($1, var_lock_t, var_lock_t)
 ')
 
+
 ########################################
 ## <summary>
 ##	Relabel to and from all lock directory types.
@@ -5766,6 +5750,24 @@
 
 ########################################
 ## <summary>
+##	Set the attributes of generic lock directories
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`files_setattr_lock_dirs',`
+	gen_require(`
+		type var_t, var_lock_t;
+	')
+
+	setattr_dirs_pattern($1, var_t, var_lock_t)
+')
+
+########################################
+## <summary>
 ##	Delete generic lock files.
 ## </summary>
 ## <param name="domain">
@@ -6046,6 +6048,29 @@
 	allow $1 var_run_t:lnk_file read_lnk_file_perms;
 	allow $1 var_run_t:fifo_file write;
 ')
+########################################
+## <summary>
+##	Write dirs in /var/run with the lock file type
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="name" optional="true">
+##	<summary>
+##	Name of the directory that the file transition will work on
+##	</summary>
+## </param>
+#
+interface(`files_pid_filetrans_lock_dir',`
+	gen_require(`
+		type var_t, var_run_t;
+	')
+
+	files_pid_filetrans($1, var_lock_t, dir, $2)
+')
+
 
 ########################################
 ## <summary>
@@ -6110,29 +6135,6 @@
 ')
 
 ########################################
-## <summary>
-## 	Create a generic lock directory within the run directories
-## </summary>
-## <param name="domain">
-## 	<summary>
-##	Domain allowed access
-##	</summary>
-## </param>
-## <param name="name" optional="true">
-##	<summary>
-##	The name of the object being created.
-##	</summary>
-## </param>
-#
-interface(`files_pid_filetrans_lock_dir',`
-	gen_require(`
-		type var_lock_t;
-	')
-
-	files_pid_filetrans($1, var_lock_t, dir, $2)
-')
-
-########################################
 ## <summary>
 ##	Read and write generic process ID files.
 ## </summary>
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/kernel/files.te refpolicy/policy/modules/kernel/files.te
--- refpolicy/policy/modules/kernel/files.te	2012-07-25 20:33:04.000000000 +0200
+++ refpolicy/policy/modules/kernel/files.te	2012-08-29 20:02:26.448673369 +0200
@@ -1,4 +1,4 @@
-policy_module(files, 1.17.0)
+policy_module(files, 1.17.2)
 
 ########################################
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/roles/sysadm.te refpolicy/policy/modules/roles/sysadm.te
--- refpolicy/policy/modules/roles/sysadm.te	2012-09-28 19:56:54.173040257 +0200
+++ refpolicy/policy/modules/roles/sysadm.te	2012-08-27 19:44:19.629302218 +0200
@@ -243,6 +243,10 @@
 ')
 
 optional_policy(`
+	mutt_role(sysadm_r, sysadm_t)
+')
+
+optional_policy(`
 	mysql_stream_connect(sysadm_t)
 ')
 
@@ -439,11 +443,11 @@
 ')
 
 optional_policy(`
-	virt_stream_connect(sysadm_t)
+	vde_role(sysadm_r, sysadm_t)
 ')
 
 optional_policy(`
-	vde_role(sysadm_r, sysadm_t)
+	virt_stream_connect(sysadm_t)
 ')
 
 optional_policy(`
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/services/postgresql.fc refpolicy/policy/modules/services/postgresql.fc
--- refpolicy/policy/modules/services/postgresql.fc	2012-05-10 16:22:40.000000000 +0200
+++ refpolicy/policy/modules/services/postgresql.fc	2012-04-22 14:08:14.677349430 +0200
@@ -2,6 +2,9 @@
 # /etc
 #
 /etc/postgresql(/.*)?			gen_context(system_u:object_r:postgresql_etc_t,s0)
+ifdef(`distro_gentoo',`
+/etc/postgresql-.*(/.*)?		gen_context(system_u:object_r:postgresql_etc_t,s0)
+')
 /etc/rc\.d/init\.d/(se)?postgresql --	gen_context(system_u:object_r:postgresql_initrc_exec_t,s0)
 /etc/sysconfig/pgsql(/.*)? 		gen_context(system_u:object_r:postgresql_etc_t,s0)
 
@@ -13,7 +16,7 @@
 
 /usr/lib/pgsql/test/regress(/.*)?	gen_context(system_u:object_r:postgresql_db_t,s0)
 /usr/lib/pgsql/test/regress/pg_regress -- gen_context(system_u:object_r:postgresql_exec_t,s0)
-/usr/lib/postgresql/bin/.*	--	gen_context(system_u:object_r:postgresql_exec_t,s0)
+/usr/lib/postgresql/bin/.* --	gen_context(system_u:object_r:postgresql_exec_t,s0)
 
 ifdef(`distro_debian', `
 /usr/lib/postgresql/.*/bin/.*	--	gen_context(system_u:object_r:postgresql_exec_t,s0)
@@ -23,6 +26,10 @@
 /usr/share/jonas/pgsql(/.*)?		gen_context(system_u:object_r:postgresql_db_t,s0)
 ')
 
+ifdef(`distro_gentoo',`
+/usr/lib/postgresql-.*/bin/.*	--	gen_context(system_u:object_r:postgresql_exec_t,s0)
+')
+
 #
 # /var
 #
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/services/postgresql.if refpolicy/policy/modules/services/postgresql.if
--- refpolicy/policy/modules/services/postgresql.if	2012-05-18 19:59:12.000000000 +0200
+++ refpolicy/policy/modules/services/postgresql.if	2012-08-16 20:18:26.824450073 +0200
@@ -334,6 +334,24 @@
 	allow $1 postgresql_db_t:lnk_file { getattr read };
 ')
 
+#######################################
+## <summary>
+##	Execute postgresql in the calling domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access
+##	</summary>
+## </param>
+#
+interface(`postgresql_exec',`
+	gen_require(`
+		type postgresql_exec_t;
+	')
+
+	can_exec($1, postgresql_exec_t);
+')
+
 ########################################
 ## <summary>
 ##	Execute postgresql in the postgresql domain.
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/services/postgresql.te refpolicy/policy/modules/services/postgresql.te
--- refpolicy/policy/modules/services/postgresql.te	2012-07-25 20:33:04.000000000 +0200
+++ refpolicy/policy/modules/services/postgresql.te	2012-09-08 18:00:46.973551386 +0200
@@ -1,4 +1,4 @@
-policy_module(postgresql, 1.15.0)
+policy_module(postgresql, 1.15.2)
 
 gen_require(`
 	class db_database all_db_database_perms;
@@ -23,7 +23,7 @@
 ## Allow unprived users to execute DDL statement
 ## </p>
 ## </desc>
-gen_tunable(sepgsql_enable_users_ddl, true)
+gen_tunable(sepgsql_enable_users_ddl, false)
 
 ## <desc>
 ## <p>
@@ -37,7 +37,7 @@
 ## Allow database admins to execute DML statement
 ## </p>
 ## </desc>
-gen_tunable(sepgsql_unconfined_dbadm, true)
+gen_tunable(sepgsql_unconfined_dbadm, false)
 
 type postgresql_t;
 type postgresql_exec_t;
@@ -63,6 +63,7 @@
 
 type postgresql_var_run_t;
 files_pid_file(postgresql_var_run_t)
+init_daemon_run_dir(postgresql_var_run_t, "postgresql")
 
 # database clients attribute
 attribute sepgsql_admin_type;
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/services/xserver.fc refpolicy/policy/modules/services/xserver.fc
--- refpolicy/policy/modules/services/xserver.fc	2012-09-28 19:56:54.047040254 +0200
+++ refpolicy/policy/modules/services/xserver.fc	2012-09-28 19:51:40.830033021 +0200
@@ -19,11 +19,11 @@
 #
 # /etc
 #
-/etc/gdm/PostSession/.*	--	gen_context(system_u:object_r:xsession_exec_t,s0)
-/etc/gdm/PreSession/.*	--	gen_context(system_u:object_r:xsession_exec_t,s0)
-/etc/gdm/Xsession	--	gen_context(system_u:object_r:xsession_exec_t,s0)
+/etc/gdm(3)?/PostSession/.*	--	gen_context(system_u:object_r:xsession_exec_t,s0)
+/etc/gdm(3)?/PreSession/.*	--	gen_context(system_u:object_r:xsession_exec_t,s0)
+/etc/gdm(3)?/Xsession	--	gen_context(system_u:object_r:xsession_exec_t,s0)
 
-/etc/init\.d/xfree86-common --	gen_context(system_u:object_r:xserver_exec_t,s0)
+/etc/rc\.d/init\.d/xfree86-common --	gen_context(system_u:object_r:xserver_exec_t,s0)
 
 /etc/kde[34]?/kdm/Xstartup --	gen_context(system_u:object_r:xsession_exec_t,s0)
 /etc/kde[34]?/kdm/Xreset --	gen_context(system_u:object_r:xsession_exec_t,s0)
@@ -57,9 +57,10 @@
 # /usr
 #
 
+/usr/(s)?bin/gdm(3)?	--      gen_context(system_u:object_r:xdm_exec_t,s0)
 /usr/(s)?bin/gdm-binary	--	gen_context(system_u:object_r:xdm_exec_t,s0)
 /usr/(s)?bin/lxdm(-binary)? --	gen_context(system_u:object_r:xdm_exec_t,s0)
-/usr/(s)?bin/[xgkw]dm	--	gen_context(system_u:object_r:xdm_exec_t,s0)
+/usr/(s)?bin/[xkw]dm	--	gen_context(system_u:object_r:xdm_exec_t,s0)
 /usr/bin/gpe-dm		--	gen_context(system_u:object_r:xdm_exec_t,s0)
 /usr/bin/iceauth	--	gen_context(system_u:object_r:iceauth_exec_t,s0)
 /usr/bin/slim		--	gen_context(system_u:object_r:xdm_exec_t,s0)
@@ -90,18 +91,20 @@
 
 /var/[xgkw]dm(/.*)?		gen_context(system_u:object_r:xserver_log_t,s0)
 
+/var/lib/gdm(3)?(/.*)?		gen_context(system_u:object_r:xdm_var_lib_t,s0)
 /var/lib/lxdm(/.*)?		gen_context(system_u:object_r:xdm_var_lib_t,s0)
 /var/lib/[xkw]dm(/.*)?		gen_context(system_u:object_r:xdm_var_lib_t,s0)
 /var/lib/xkb(/.*)?		gen_context(system_u:object_r:xkb_var_lib_t,s0)
 
 /var/log/[kwx]dm\.log.*	--	gen_context(system_u:object_r:xserver_log_t,s0)
 /var/log/lxdm\.log	--	gen_context(system_u:object_r:xserver_log_t,s0)
-/var/log/gdm(/.*)?		gen_context(system_u:object_r:xserver_log_t,s0)
+/var/log/gdm(3)?(/.*)?		gen_context(system_u:object_r:xserver_log_t,s0)
 /var/log/slim\.log	--	gen_context(system_u:object_r:xserver_log_t,s0)
 /var/log/XFree86.*	--	gen_context(system_u:object_r:xserver_log_t,s0)
 /var/log/Xorg.*		--	gen_context(system_u:object_r:xserver_log_t,s0)
 
-/var/run/[gx]dm\.pid	--	gen_context(system_u:object_r:xdm_var_run_t,s0)
+/var/run/gdm(3)?\.pid	--	gen_context(system_u:object_r:xdm_var_run_t,s0)
+/var/run/xdm\.pid	--	gen_context(system_u:object_r:xdm_var_run_t,s0)
 /var/run/lxdm\.auth	--	gen_context(system_u:object_r:xdm_var_run_t,s0)
 /var/run/lxdm\.pid	--	gen_context(system_u:object_r:xdm_var_run_t,s0)
 /var/run/lxdm(/.*)?		gen_context(system_u:object_r:xdm_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/services/xserver.te refpolicy/policy/modules/services/xserver.te
--- refpolicy/policy/modules/services/xserver.te	2012-09-28 19:56:54.047040254 +0200
+++ refpolicy/policy/modules/services/xserver.te	2012-09-28 19:55:21.822038125 +0200
@@ -1,4 +1,4 @@
-policy_module(xserver, 3.8.0)
+policy_module(xserver, 3.8.2)
 
 gen_require(`
 	class x_drawable all_x_drawable_perms;
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/system/authlogin.if refpolicy/policy/modules/system/authlogin.if
--- refpolicy/policy/modules/system/authlogin.if	2012-09-28 19:56:54.177040257 +0200
+++ refpolicy/policy/modules/system/authlogin.if	2012-08-29 19:43:01.040670881 +0200
@@ -1765,9 +1765,9 @@
 ## <infoflow type="both" weight="10"/>
 #
 interface(`auth_use_nsswitch',`
-    gen_require(`
-        attribute nsswitch_domain;
-    ')
+	gen_require(`
+		attribute nsswitch_domain;
+	')
 
 	typeattribute $1 nsswitch_domain;
 ')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/system/authlogin.te refpolicy/policy/modules/system/authlogin.te
--- refpolicy/policy/modules/system/authlogin.te	2012-07-25 20:33:04.000000000 +0200
+++ refpolicy/policy/modules/system/authlogin.te	2012-07-28 22:50:12.435345391 +0200
@@ -405,7 +405,7 @@
 	xserver_rw_xdm_pipes(utempter_t)
 ')
 
-#######################################
+#########################################
 #
 # nsswitch_domain local policy
 #
@@ -426,7 +426,7 @@
 
 optional_policy(`
 	tunable_policy(`authlogin_nsswitch_use_ldap',`
-		ldap_stream_connect(nsswitch_domain)
+		 ldap_stream_connect(nsswitch_domain)
 	')
 ')
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/system/init.fc refpolicy/policy/modules/system/init.fc
--- refpolicy/policy/modules/system/init.fc	2012-09-28 19:56:54.063040254 +0200
+++ refpolicy/policy/modules/system/init.fc	2012-08-09 17:40:24.593873380 +0200
@@ -1,8 +1,6 @@
 #
 # /etc
 #
-/etc/init\.d/.*		--	gen_context(system_u:object_r:initrc_exec_t,s0)
-
 /etc/rc\.d/rc		--	gen_context(system_u:object_r:initrc_exec_t,s0)
 /etc/rc\.d/rc\.[^/]+	--	gen_context(system_u:object_r:initrc_exec_t,s0)
 
@@ -68,6 +66,7 @@
 /var/lib/init\.d(/.*)?		gen_context(system_u:object_r:initrc_state_t,s0)
 /var/lib/ip6?tables(/.*)?		gen_context(system_u:object_r:initrc_tmp_t,s0)
 /var/run/svscan\.pid	--	gen_context(system_u:object_r:initrc_var_run_t,s0)
+/var/run/openrc(/.*)?		gen_context(system_u:object_r:initrc_state_t,s0)
 ')
 
 ifdef(`distro_suse', `
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/system/init.if refpolicy/policy/modules/system/init.if
--- refpolicy/policy/modules/system/init.if	2012-09-28 19:56:54.069040255 +0200
+++ refpolicy/policy/modules/system/init.if	2012-08-14 19:31:06.389412257 +0200
@@ -417,6 +417,32 @@
 
 ########################################
 ## <summary>
+##	Mark the type as a daemon run dir
+## </summary>
+## <param name="rundirtype">
+##	<summary>
+##	Type to mark as a daemon run dir
+##	</summary>
+## </param>
+## <param name="filename">
+##	<summary>
+##	Name of the run dir directory
+##	</summary>
+## </param>
+#
+interface(`init_daemon_run_dir',`
+	gen_require(`
+		attribute daemonrundir;
+		type initrc_t;
+	')
+
+	typeattribute $1 daemonrundir;
+
+	files_pid_filetrans(initrc_t, $1, dir, $2)
+')
+
+########################################
+## <summary>
 ##	Execute init (/sbin/init) with a domain transition.
 ## </summary>
 ## <param name="domain">
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/system/init.te refpolicy/policy/modules/system/init.te
--- refpolicy/policy/modules/system/init.te	2012-09-28 19:56:54.088040255 +0200
+++ refpolicy/policy/modules/system/init.te	2012-08-16 13:12:40.311426439 +0200
@@ -29,6 +29,9 @@
 # Mark process types as daemons
 attribute daemon;
 
+# Mark file as daemon run dir
+attribute daemonrundir;
+
 #
 # init_t is the domain of the init process.
 #
@@ -243,6 +246,9 @@
 
 can_exec(initrc_t, init_script_file_type)
 
+create_dirs_pattern(initrc_t, daemonrundir, daemonrundir)
+setattr_dirs_pattern(initrc_t, daemonrundir, daemonrundir)
+
 domtrans_pattern(init_run_all_scripts_domain, initrc_exec_t, initrc_t)
 
 manage_dirs_pattern(initrc_t, initrc_state_t, initrc_state_t)
@@ -757,10 +763,10 @@
 	ifdef(`distro_redhat',`
 		mysql_manage_db_dirs(initrc_t)
 	')
-
+	mysql_read_config(initrc_t)
+	mysql_setattr_run_dirs(initrc_t)
 	mysql_stream_connect(initrc_t)
 	mysql_write_log(initrc_t)
-	mysql_read_config(initrc_t)
 ')
 
 optional_policy(`
@@ -852,8 +858,8 @@
 ')
 
 optional_policy(`
-	udev_rw_db(initrc_t)
-	udev_generic_pid_filetrans_run_dirs(initrc_t, "udev")
+	udev_create_db_dirs(initrc_t)
+	udev_pid_filetrans_db(initrc_t, dir, "rules.d")
 	udev_manage_pid_files(initrc_t)
 	udev_manage_pid_dirs(initrc_t)
 	udev_manage_rules_files(initrc_t)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/system/ipsec.fc refpolicy/policy/modules/system/ipsec.fc
--- refpolicy/policy/modules/system/ipsec.fc	2012-05-10 16:23:17.000000000 +0200
+++ refpolicy/policy/modules/system/ipsec.fc	2012-07-28 18:53:56.059315169 +0200
@@ -14,9 +14,9 @@
 
 /usr/lib/ipsec/_plutoload	-- 	gen_context(system_u:object_r:ipsec_mgmt_exec_t,s0)
 /usr/lib/ipsec/_plutorun	--	gen_context(system_u:object_r:ipsec_mgmt_exec_t,s0)
-/usr/lib/ipsec/eroute		--	gen_context(system_u:object_r:ipsec_exec_t,s0)
+/usr/lib/ipsec/eroute	--	gen_context(system_u:object_r:ipsec_exec_t,s0)
 /usr/lib/ipsec/klipsdebug	--	gen_context(system_u:object_r:ipsec_exec_t,s0)
-/usr/lib/ipsec/pluto		--	gen_context(system_u:object_r:ipsec_exec_t,s0)
+/usr/lib/ipsec/pluto	--	gen_context(system_u:object_r:ipsec_exec_t,s0)
 /usr/lib/ipsec/spi		--	gen_context(system_u:object_r:ipsec_exec_t,s0)
 
 /usr/libexec/ipsec/_plutoload	-- 	gen_context(system_u:object_r:ipsec_mgmt_exec_t,s0)
@@ -27,11 +27,6 @@
 /usr/libexec/ipsec/spi		--	gen_context(system_u:object_r:ipsec_exec_t,s0)
 /usr/libexec/nm-openswan-service -- 	gen_context(system_u:object_r:ipsec_mgmt_exec_t,s0)
 
-/usr/local/lib(64)?/ipsec/eroute --	gen_context(system_u:object_r:ipsec_exec_t,s0)
-/usr/local/lib(64)?/ipsec/klipsdebug -- gen_context(system_u:object_r:ipsec_exec_t,s0)
-/usr/local/lib(64)?/ipsec/pluto --	gen_context(system_u:object_r:ipsec_exec_t,s0)
-/usr/local/lib(64)?/ipsec/spi	--	gen_context(system_u:object_r:ipsec_exec_t,s0)
-
 /usr/sbin/ipsec			-- 	gen_context(system_u:object_r:ipsec_mgmt_exec_t,s0)
 /usr/sbin/racoon		--	gen_context(system_u:object_r:racoon_exec_t,s0)
 /usr/sbin/setkey		--	gen_context(system_u:object_r:setkey_exec_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/system/libraries.fc refpolicy/policy/modules/system/libraries.fc
--- refpolicy/policy/modules/system/libraries.fc	2012-05-10 16:26:34.000000000 +0200
+++ refpolicy/policy/modules/system/libraries.fc	2012-08-15 17:21:24.046562423 +0200
@@ -33,7 +33,7 @@
 /etc/ppp/plugins/rp-pppoe\.so 		--	gen_context(system_u:object_r:lib_t,s0)
 
 #
-# /lib(64)?
+# /lib
 #
 /lib					-d	gen_context(system_u:object_r:lib_t,s0)
 /lib/.*						gen_context(system_u:object_r:lib_t,s0)
@@ -113,7 +113,8 @@
 /usr/(.*/)?lib(/.*)?				gen_context(system_u:object_r:lib_t,s0)
 /usr/(.*/)?lib64(/.*)?				gen_context(system_u:object_r:lib_t,s0)
 
-/usr/(.*/)?lib(64)?(/.*)?/ld-[^/]*\.so(\.[^/]*)* gen_context(system_u:object_r:ld_so_t,s0)
+/usr/(.*/)?lib(/.*)?/ld-[^/]*\.so(\.[^/]*)* gen_context(system_u:object_r:ld_so_t,s0)
+/usr/(.*/)?lib64(/.*)?/ld-[^/]*\.so(\.[^/]*)* gen_context(system_u:object_r:ld_so_t,s0)
 
 /usr/(.*/)?nvidia/.+\.so(\..*)?		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
@@ -123,43 +124,43 @@
 /usr/lib/vlc/codec/librealvideo_plugin\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/vlc/codec/libdmo_plugin\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/vlc/codec/librealaudio_plugin\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/libtfmessbsp\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libtfmessbsp\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/xorg/libGL\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/X11R6/lib/libGL\.so.* 		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/libGL\.so(\.[^/]*)*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/catalyst/libGL\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libGL\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/catalyst/libGL\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/libADM5.*\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/libatiadlxx\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/win32/.*\.so(\.[^/]*)*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/win32/.*\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
 /usr/lib/ADM_plugins/videoFilter/.*\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 
-/usr/(.*/)?lib(64)?(/.*)?/nvidia/.+\.so(\..*)? -- gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib(/.*)?/nvidia/.+\.so(\..*)?	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/libsipphoneapi\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/(.*/)?lib(/.*)?/nvidia/.+\.so(\..*)? -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(/.*)?/nvidia/.+\.so(\..*)? --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libsipphoneapi\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/ati-fglrx/.+\.so(\..*)?	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/fglrx/.*\.so(\.[^/]*)*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/libjs\.so.*			--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/sse2/libx264\.so(\.[^/]*)* 	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib(/.*)?/libnvidia.+\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib(/.*)?/nvidia_drv.*\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/nero/plug-ins/libMP3\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/fglrx/.*\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libjs\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/sse2/libx264\.so(\.[^/]*)* 	-- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(/.*)?/libnvidia.+\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib(/.*)?/nvidia_drv.*\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/nero/plug-ins/libMP3\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/nvidia-graphics(-[^/]*/)?libGL(core)?\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/nvidia-graphics(-[^/]*/)?libnvidia.*\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/nvidia-graphics(-[^/]*/)?libXvMCNVIDIA\.so.* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/nvidia/libGL(core)?\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/xorg/modules/glesx\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/nvidia/libGL(core)?\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/xorg/modules/glesx\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 
-/usr/(local/)?.*\.so(\.[^/]*)*		--	gen_context(system_u:object_r:lib_t,s0)
-/usr/(local/)?lib(64)?/wine/.+\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/(local/)?lib(64)?/(sse2/)?libfame-.*\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/.*\.so(\.[^/]*)*		--	gen_context(system_u:object_r:lib_t,s0)
+/usr/lib/wine/.+\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/(sse2/)?libfame-.*\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/NX/lib/libXcomp\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/NX/lib/libjpeg\.so.* 		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
 /usr/X11R6/lib/libXvMCNVIDIA\.so.* 	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
 /usr/lib/xorg/modules/drivers/fglrx_drv\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/xorg/modules/drivers/nvidia_drv\.o --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/xorg/modules/drivers/nvidia_drv\.o -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/xorg/modules/extensions/nvidia(-[^/]*)?/libglx\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/xorg/modules/extensions/libglx\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/x11R6/lib/modules/extensions/libglx\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
@@ -180,11 +181,11 @@
 
 # Fedora Core packages: gstreamer-plugins, compat-libstdc++, Glide3, libdv
 # 	HelixPlayer, SDL, xorg-x11, xorg-x11-libs, Hermes, valgrind, openoffice.org-libs, httpd - php
-HOME_DIR/.*/plugins/nppdf\.so.* 	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/allegro/(.*/)?alleg-vga\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+HOME_DIR/.*/plugins/nppdf\.so.* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/allegro/(.*/)?alleg-vga\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/firefox-[^/]*/extensions(/.*)?/libqfaservices.so -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/firefox-[^/]*/plugins/nppdf.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/firefox/plugins/libractrl\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/firefox/plugins/libractrl\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/libFLAC\.so.*			--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/libfglrx_gamma\.so.* 		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/mozilla/plugins/nppdf\.so 	-- 	gen_context(system_u:object_r:textrel_shlib_t,s0)
@@ -193,66 +194,65 @@
 /usr/lib/nx/libjpeg\.so.* 		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/VBoxVMM\.so			--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
-/usr/lib/libstdc\+\+\.so\.2\.7\.2\.8	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libstdc\+\+\.so\.2\.7\.2\.8 --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/libg\+\+\.so\.2\.7\.2\.8	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/libgpac\.so.* 			--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libgpac\.so.* 		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/libglide3\.so.* 		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/libglide3-v[0-9]*\.so.* 	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/helix/plugins/[^/]*\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/helix/codecs/[^/]*\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/helix/plugins/[^/]*\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/helix/codecs/[^/]*\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/X11R6/lib/libfglrx_gamma\.so.* 	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/libHermes\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/valgrind/hp2ps			--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/valgrind/hp2ps		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/valgrind/stage2		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/valgrind/vg.*\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/.*/program/libicudata\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/.*/program/libsts645li\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/.*/program/libvclplug_gen645li\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/.*/program/libwrp645li\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/.*/program/libswd680li\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/.*/program/librecentfile\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/.*/program/libsvx680li\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/.*/program/libcomphelp4gcc3\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/.*/program/libsoffice\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/.*/program/libicudata\.so.* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/.*/program/libsts645li\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/.*/program/libvclplug_gen645li\.so -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/.*/program/libwrp645li\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/.*/program/libswd680li\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/.*/program/librecentfile\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/.*/program/libsvx680li\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/.*/program/libcomphelp4gcc3\.so -- gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/.*/program/libsoffice\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/(.*/)?pcsc/drivers(/.*)?/lib(cm2020|cm4000|SCR24x)\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 
 # Fedora Extras packages: ladspa, imlib2, ocaml
-/usr/lib/ladspa/analogue_osc_1416\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ladspa/bandpass_a_iir_1893\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ladspa/bandpass_iir_1892\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ladspa/butterworth_1902\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ladspa/fm_osc_1415\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ladspa/gsm_1215\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ladspa/gverb_1216\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ladspa/hermes_filter_1200\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ladspa/highpass_iir_1890\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ladspa/lowpass_iir_1891\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/analogue_osc_1416\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/bandpass_a_iir_1893\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/bandpass_iir_1892\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/butterworth_1902\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/fm_osc_1415\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/gsm_1215\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/gverb_1216\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/hermes_filter_1200\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/highpass_iir_1890\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/lowpass_iir_1891\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/ladspa/notch_iir_1894\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ladspa/pitch_scale_1193\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ladspa/pitch_scale_1194\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ladspa/sc1_1425\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ladspa/sc2_1426\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ladspa/sc3_1427\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ladspa/sc4_1882\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ladspa/se4_1883\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/sane/libsane-epkowa\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/ocaml/stublibs/dllnums\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/pitch_scale_1193\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/pitch_scale_1194\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/sc1_1425\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/sc2_1426\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/sc3_1427\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/sc4_1882\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ladspa/se4_1883\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/sane/libsane-epkowa\.so.* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/ocaml/stublibs/dllnums\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
 # Livna.org packages: xmms-mp3, ffmpeg, xvidcore, xine-lib, gsm, lame
-/usr/lib.*/libmpg123\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/local(/.*)?/libmpg123\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib.*/libmpg123\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/(/.*)?/libmpg123\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/codecs/drv[1-9c]\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/local/lib/codecs/drv[1-9c]\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 
-HOME_DIR/.*/plugins/nppdf\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+HOME_DIR/.*/plugins/nppdf\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 HOME_DIR/.mozilla/plugins/nprhapengine\.so.* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/.*/nprhapengine\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/local/(.*/)?nprhapengine\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/.*/nprhapengine\.so.*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/local/(.*/)?nprhapengine\.so.* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
 # Jai, Sun Microsystems (Jpackage SPRM)
 /usr/lib/libmlib_jai\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/libdivxdecore\.so\.0		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/libdivxencore\.so\.0		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libdivxdecore\.so\.0	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/libdivxencore\.so\.0	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
 /usr/lib/libdvdcss\.so.*		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
@@ -260,17 +260,16 @@
 
 # vmware
 /usr/lib/vmware/lib(/.*)?/libgdk-x11-.*\.so.* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/vmware/lib(/.*)?/HConfig\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/vmware/lib(/.*)?/HConfig\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/vmware/(.*/)?VmPerl\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/lib/vmware/lib(/.*)?/libvmware-gksu.*\.so.* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 
 /usr/lib/(virtualbox(-ose)?/)?(components/)?VBox.*\.so -- gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/virtualbox/.*\.so		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/virtualbox/.*\.so	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
 # Java, Sun Microsystems (JPackage SRPM)
-/usr/(.*/)?jre.*/.*\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/local/(.*/)?jre.*/.*\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/lib/(.*/)?jre.*/.*\.so(\.[^/]*)*	--	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/(.*/)?jre.*/.*\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/(.*/)?jre.*/.*\.so(\.[^/]*)* --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 
 /usr/(local/)?Adobe/(.*/)?intellinux/nppdf\.so -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/(local/)?Adobe/(.*/)?intellinux/sidecars/* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
@@ -279,7 +278,7 @@
 /usr/(local/)?Adobe/(.*/)?lib/[^/]*\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/(local/)?acroread/(.*/)?lib/[^/]*\.so(\.[^/]*)* -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/(local/)?Adobe/.*\.api		--	gen_context(system_u:object_r:textrel_shlib_t,s0)
-/usr/(local/)?lib/xchat/plugins/systray\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
+/usr/lib/xchat/plugins/systray\.so --	gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/(local/)?matlab.*/bin/glnx86/libmwlapack\.so -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/(local/)?matlab.*/bin/glnx86/(libmw(lapack|mathutil|services)|lapack|libmkl)\.so -- gen_context(system_u:object_r:textrel_shlib_t,s0)
 /usr/(local/)?matlab.*/sys/os/glnx86/libtermcap\.so -- gen_context(system_u:object_r:textrel_shlib_t,s0)
@@ -310,6 +309,6 @@
 /var/lib/samba/bin/.+\.so(\.[^/]*)*	-l	gen_context(system_u:object_r:lib_t,s0)
 ')
 
-/var/spool/postfix/lib(64)?(/.*)? 		gen_context(system_u:object_r:lib_t,s0)
+/var/spool/postfix/lib(/.*)? 		gen_context(system_u:object_r:lib_t,s0)
 /var/spool/postfix/usr(/.*)?			gen_context(system_u:object_r:lib_t,s0)
-/var/spool/postfix/lib(64)?/ld.*\.so.*	--	gen_context(system_u:object_r:ld_so_t,s0)
+/var/spool/postfix/lib/ld.*\.so.*	--	gen_context(system_u:object_r:ld_so_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/system/miscfiles.fc refpolicy/policy/modules/system/miscfiles.fc
--- refpolicy/policy/modules/system/miscfiles.fc	2012-09-28 19:56:54.144040256 +0200
+++ refpolicy/policy/modules/system/miscfiles.fc	2012-08-09 17:29:45.161847759 +0200
@@ -39,7 +39,7 @@
 /usr/local/man(/.*)?		gen_context(system_u:object_r:man_t,s0)
 /usr/local/share/man(/.*)?	gen_context(system_u:object_r:man_t,s0)
 
-/usr/local/share/fonts(/.*)?	gen_context(system_u:object_r:fonts_t,s0)
+/usr/local/share/fonts(/.*)?	gen_context(system_u:object_r:man_t,s0)
 
 /usr/man(/.*)?			gen_context(system_u:object_r:man_t,s0)
 
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/system/sysnetwork.te refpolicy/policy/modules/system/sysnetwork.te
--- refpolicy/policy/modules/system/sysnetwork.te	2012-09-28 19:56:54.154040257 +0200
+++ refpolicy/policy/modules/system/sysnetwork.te	2012-08-09 18:43:42.171025547 +0200
@@ -65,7 +65,10 @@
 
 # create pid file
 manage_files_pattern(dhcpc_t, dhcpc_var_run_t, dhcpc_var_run_t)
-files_pid_filetrans(dhcpc_t, dhcpc_var_run_t, file)
+create_dirs_pattern(dhcpc_t, dhcpc_var_run_t, dhcpc_var_run_t)
+# Create /var/run/dhcpc directory (state directory), needed for /run/dhcpc
+# Gets done through the dhcpcd-hooks
+files_pid_filetrans(dhcpc_t, dhcpc_var_run_t, { file dir })
 
 # Allow read/write to /etc/resolv.conf and /etc/ntp.conf. Note that any files
 # in /etc created by dhcpcd will be labelled net_conf_t.
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/system/udev.fc refpolicy/policy/modules/system/udev.fc
--- refpolicy/policy/modules/system/udev.fc	2012-09-28 19:56:54.097040255 +0200
+++ refpolicy/policy/modules/system/udev.fc	2012-07-17 17:31:55.765243315 +0200
@@ -30,8 +30,12 @@
 /usr/bin/udevadm	--	gen_context(system_u:object_r:udev_exec_t,s0)
 /usr/bin/udevinfo --	gen_context(system_u:object_r:udev_exec_t,s0)
 
+/usr/lib/systemd/systemd-udevd	--	gen_context(system_u:object_r:udev_exec_t,s0)
+
 /var/run/PackageKit/udev(/.*)? gen_context(system_u:object_r:udev_var_run_t,s0)
-/var/run/udev(/.*)?	gen_context(system_u:object_r:udev_tbl_t,s0)
+/var/run/udev(/.*)?		gen_context(system_u:object_r:udev_var_run_t,s0)
+/var/run/udev/rules\.d(/.*)?	gen_context(system_u:object_r:udev_tbl_t,s0)
+/var/run/udev/data(/.*)?	gen_context(system_u:object_r:udev_tbl_t,s0)
 
 ifdef(`distro_debian',`
 /var/run/xen-hotplug -d	gen_context(system_u:object_r:udev_var_run_t,s0)
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/system/udev.if refpolicy/policy/modules/system/udev.if
--- refpolicy/policy/modules/system/udev.if	2012-07-24 14:49:22.000000000 +0200
+++ refpolicy/policy/modules/system/udev.if	2012-08-14 19:31:16.865412676 +0200
@@ -132,6 +132,27 @@
 
 ########################################
 ## <summary>
+##	Read udev rules files
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`udev_read_rules_files',`
+	gen_require(`
+		type udev_rules_t;
+	')
+
+	files_search_etc($1) # /etc/udev/rules.d
+	udev_search_pids($1) # /run/udev/rules.d
+	read_files_pattern($1, udev_rules_t, udev_rules_t)
+')
+
+
+########################################
+## <summary>
 ##	Manage udev rules files
 ## </summary>
 ## <param name="domain">
@@ -200,6 +221,7 @@
 
 	files_search_etc($1)
 
+	# Device table files are beneith /run/udev
 	udev_search_pids($1)
 ')
 
@@ -224,7 +246,7 @@
 
 ########################################
 ## <summary>
-##	Search through udev pid content
+##	Create udev database directories
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -232,38 +254,50 @@
 ##	</summary>
 ## </param>
 #
-interface(`udev_search_pids',`
+interface(`udev_create_db_dirs',`
 	gen_require(`
+		type udev_tbl_t;
 		type udev_var_run_t;
 	')
 
-	files_search_pids($1)
-	search_dirs_pattern($1, udev_var_run_t, udev_var_run_t)
+	create_dirs_pattern($1, udev_var_run_t, udev_tbl_t)
 ')
 
+
+
 ########################################
 ## <summary>
-##	Create, read, write, and delete
-##	udev pid directories
+##	Write in /var/run/udev with the udev_tbl_t (udev database) file type
 ## </summary>
 ## <param name="domain">
 ##	<summary>
 ##	Domain allowed access.
 ##	</summary>
 ## </param>
+## <param name="class">
+## 	<summary>
+##	Classes on which the file transition should occur
+##	</summary>
+## </param>
+## <param name="name" optional="true">
+##	<summary>
+##	Name of the directory that the file transition will work on
+##	</summary>
+## </param>
 #
-interface(`udev_manage_pid_dirs',`
+interface(`udev_pid_filetrans_db',`
 	gen_require(`
+		type udev_tbl_t;
 		type udev_var_run_t;
 	')
 
-	files_search_var($1)
-	manage_dirs_pattern($1, udev_var_run_t, udev_var_run_t)
+	filetrans_pattern($1, udev_var_run_t, udev_tbl_t, $2, $3)
 ')
 
 ########################################
 ## <summary>
-##	Create directories in the run location with udev_var_run_t type
+##	Write dirs in /var/run with the udev_var_run file type.
+##	This method is deprecated in favor of the init_daemon_run_dir call.
 ## </summary>
 ## <param name="domain">
 ##	<summary>
@@ -271,19 +305,35 @@
 ##	</summary>
 ## </param>
 ## <param name="name" optional="true">
-## 	<summary>
-##	Name of the directory that is created
+##	<summary>
+##	Name of the directory that the file transition will work on
 ##	</summary>
 ## </param>
 #
 interface(`udev_generic_pid_filetrans_run_dirs',`
+	refpolicywarn(`$0($*) has been deprecated.')
+')
+
+########################################
+## <summary>
+## 	Search through udev pid files and directories
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`udev_search_pids',`
 	gen_require(`
 		type udev_var_run_t;
 	')
 
-	files_pid_filetrans($1, udev_var_run_t, dir, $2)
+	files_search_var_lib($1)
+	search_dirs_pattern($1, udev_var_run_t, udev_var_run_t)
 ')
 
+
 ########################################
 ## <summary>
 ##	Create, read, write, and delete
@@ -303,3 +353,23 @@
 	files_search_var_lib($1)
 	manage_files_pattern($1, udev_var_run_t, udev_var_run_t)
 ')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	udev run directories
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`udev_manage_pid_dirs',`
+	gen_require(`
+		type udev_var_run_t;
+	')
+
+	files_search_var_lib($1)
+	manage_dirs_pattern($1, udev_var_run_t, udev_var_run_t)
+')
diff -uNr -x '.git*' -x CVS -x '*.autogen*' -x '*.part' refpolicy/policy/modules/system/udev.te refpolicy/policy/modules/system/udev.te
--- refpolicy/policy/modules/system/udev.te	2012-09-28 19:56:54.158040257 +0200
+++ refpolicy/policy/modules/system/udev.te	2012-08-15 10:36:10.483588192 +0200
@@ -25,6 +25,7 @@
 
 type udev_var_run_t;
 files_pid_file(udev_var_run_t)
+init_daemon_run_dir(udev_var_run_t, "udev")
 
 ifdef(`enable_mcs',`
 	kernel_ranged_domtrans_to(udev_t, udev_exec_t, s0 - mcs_systemhigh)
@@ -74,6 +75,7 @@
 manage_dirs_pattern(udev_t, udev_var_run_t, udev_var_run_t)
 manage_files_pattern(udev_t, udev_var_run_t, udev_var_run_t)
 manage_lnk_files_pattern(udev_t, udev_var_run_t, udev_var_run_t)
+manage_sock_files_pattern(udev_t, udev_var_run_t, udev_var_run_t)
 files_pid_filetrans(udev_t, udev_var_run_t, { dir file })
 
 kernel_dgram_send(udev_t)
@@ -175,6 +177,8 @@
 
 userdom_dontaudit_search_user_home_content(udev_t)
 
+udev_pid_filetrans_db(udev_t, dir, "data")
+
 ifdef(`distro_gentoo',`
 	# during boot, init scripts use /dev/.rcsysinit
 	# existance to determine if we are in early booting
