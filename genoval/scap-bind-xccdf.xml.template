<?xml version="1.0" encoding="UTF-8"?>
<Benchmark xmlns="http://checklists.nist.gov/xccdf/1.1" xmlns:h="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="Gentoo-Security-Benchmark-1" xsi:schemaLocation="http://checklists.nist.gov/xccdf/1.1 xccdf-1.1.4.xsd" resolved="0">
  <status date="2012-04-20">draft</status>
  <title>BIND Security Benchmark</title>
  <description>
    The BIND name server is a popular, featureful name server. In this benchmark, we will 
    provide some pointers and tips for the secure configuration of BIND.
  </description>
  <platform idref="cpe:/o:gentoo:linux"/>
  <version>1</version>
  <model system="urn:xccdf:scoring:default"/>
  <model system="urn:xccdf:scoring:flat"/>
  <Profile id="Default">
    <title>Default server setup settings</title>
    <description>
      Default BIND configuration to check
    </description>
    <select idref="rule-named-nochroot" selected="true" />
    <select idref="rule-named-transfer" selected="true" />
    <select idref="rule-named-anytransfer" selected="true" />
  </Profile>
  <Group id="gr-intro">
    <title>Introduction</title>
    <description>
      ISC's BIND has been a popular name server since its inception, back in the 80s.
      Although it has seen its share of security vulnerabilities in the past, it is still
      a powerful and worthy name server to work with.
    </description>
    <Group id="gr-intro-using">
      <title>Using this guide</title>
      <description>
        The guide you are currently reading is the guide generated from this SCAP
        content (more specifically, the XCCDF document) using <h:b>openscap</h:b>,
        a free software implementation for handling SCAP content. Within Gentoo,
        the package <h:code>app-forensics/openscap</h:code> provides the tools, and
        the following command is used to generate the HTML output:
        <h:br />
        <h:pre>### Command to generate this guide ###
# <h:b>oscap xccdf generate guide scap-bind-xccdf.xml &gt; output.html</h:b>
        </h:pre>
        <h:br />
        Secondly, together with this XCCDF XML, you will also find an OVAL XML file.
        The two files combined allow you to automatically validate various settings as
        documented in the benchmark. 
	<h:br />
	<h:br />
	Export the environment variable <h:em>GENOVAL_NAMEDCONF</h:em> to the named configuration file.
	<h:pre>### Export the GENOVAL_NAMEDCONF variable ###
# <h:b>export GENOVAL_NAMEDCONF=/var/named/chroot/etc/bind/named.conf</h:b></h:pre>
        You can now test the benchmark against your configuration.
        <h:pre>### Testing the rules mentioned in the XCCDF document ###
# <h:b>oscap xccdf eval --profile Default scap-bind-xccdf.xml</h:b></h:pre>
        <h:br />
        To generate a full report in HTML as well, you can use the next command:
        <h:pre>### Testing the rules and generating an HTML report ###
# <h:b>oscap xccdf eval --profile Default --results xccdf-results.xml --report report.html scap-bind-xccdf.xml</h:b></h:pre>
        <h:br />
        Finally, this benchmark will suggest some settings which you do not want
        to enable. That is perfectly fine - even more, some settings might even
        raise eyebrows left and right. I'll try to document the reasoning behind
        the settings but you are free to deviate from them. If that is the case,
        you might want to disable the rules in the XCCDF document so that they are
        not checked on your system.
      </description>
    </Group>
    <Group id="gr-intro-profiles">
      <title>Available XCCDF Profiles</title>
      <description>
        As mentioned earlier, the XCCDF document supports multiple profiles. For the time
	being, one profile is defined:
	<h:br />
	<h:ul>
	  <h:li>Default contains all mentioned tests</h:li>
	</h:ul>
	Substitute the profile information in the commands above with the profile you want to test on.
      </description>
    </Group>
  </Group>
  <Group id="gt-config">
    <title>Configuration Settings</title>
    <description>
      In this section, we look at the configuration settings of a BIND server.
    </description>
    <Group id="gt-config-chroot">
      <title>Run BIND chrooted</title>
      <description>
        BIND should run in a chroot environment to reduce the impact of a succesful exploit.
      </description>
      <!-- @@GEN START rule-named-nochroot -->
      <!-- @@GEN END rule-named-nochroot -->
    </Group>
    <Group id="gt-config-user">
      <title>Non-root user</title>
      <description>
        The BIND server (named) should never run as root (or any other highly privileged account).
	If it does, then an exploited vulnerability might use the capabilities assigned to that user
	to extend the exploit even further.
      </description>
    </Group>
    <Group id="gt-config-transfer">
      <title>ACL on transfers</title>
      <description>
        Only allow transfers and updates from trusted sources. This can be accomplished by setting the 
	<h:code>allow-transfer</h:code> parameter in the <h:code>options</h:code> section:
	<h:pre>### Setting an allow-transfer directive ###
options {
  ...
  allow-transfer { allowed_client_IP; };
};</h:pre>
      </description>
      <!-- @@GEN START rule-named-transfer -->
      <!-- @@GEN END rule-named-transfer -->
      <!-- @@GEN START rule-named-anytransfer -->
      <!-- @@GEN END rule-named-anytransfer -->
    </Group>
  </Group>
</Benchmark>
