#!/bin/sh

# seshowif - Show the interface definition
seshowif() {
  INTERFACE="$1";
  pushd ${POLICY_LOCATION}/policy/modules > /dev/null 2>&1;
  for FILE in */*.if;
  do
    grep -A 9999 "\(interface(\`${INTERFACE}'\|template(\`${INTERFACE}'\)" ${FILE} | grep -B 9999 -m 1 "^')";
  done
  popd > /dev/null 2>&1;
}

# selist - List all templates/interfaces in the order allowed by refpolicy
gendeplist() {
  typeset POLICY_LOCATION="/home/swift/Development/Centralized/hardened-refpolicy";
  typeset DEPLIST=$1;
  [ -f ${DEPLIST} ] && > ${DEPLIST};
  pushd ${POLICY_LOCATION}/policy/modules > /dev/null 2>&1;
  for INTERFACE in $(egrep '^(interface|template)' */*.if | awk -F'`' '{print $2}' | sed -e "s:',::g" | sort);
  do
    printf "${INTERFACE}:" >> ${DEPLIST};
    for IFACE in $(seshowif ${INTERFACE} | egrep -v '^(interface|template)' | grep -v '^[ 	]*#' | grep -v gen_require | grep '(' | awk -F'(' '{print $1}');
    do
      printf "${IFACE}:" >> ${DEPLIST};
    done
    printf "\n" >> ${DEPLIST};
  done
  popd > /dev/null 2>&1;
}

if [ $# -ne 3 ];
then
  echo "Usage: $0 -r <domain> <file>"
  echo ""
  echo " -r Uses cache"
  echo " -R Regenerates the cache"
  exit 1;
fi

typeset LIST=~/.seduplicate.cache
typeset DOMAIN=$2;
typeset FILE=$3;

if [ "$1" = "-R" ];
then
  gendeplist ${LIST};
elif [ "$1" = "-r" ];
then
  if [ ! -f ${LIST} ];
  then
    echo "File ${LIST} does not exist.";
    exit 1;
  fi
else
  echo "Option $1 is not valid.";
fi

FILELIST=$(mktemp);
# Build file list, keep track of blocks
BLOCKID=0;
while read LINE;
do
  echo ${LINE} | grep -q 'ifdef(\`distro_gentoo';
  [ $? -eq 0 ] && continue;
  echo ${LINE} | grep -q '\(tunable_policy\|optional_policy\|ifdef\|ifndef\)';
  if [ $? -eq 0 ];
  then
    BLOCKID=$((${BLOCKID}+1));
  fi
  echo ${LINE} | grep -q "^[ 	]*',\`[ 	]*$";
  if [ $? -eq 0 ];
  then
    BLOCKID=$((${BLOCKID}+1));
  fi
  echo ${LINE} | grep -q "^[ 	]*')[ 	]*$";
  if [ $? -eq 0 ];
  then
    BLOCKID=0;
  fi
  echo ${LINE} | sed -e "s:$: \[${BLOCKID}\]:g" >> ${FILELIST};
done < ${FILE};

BLOCKID=0;
while read LINE;
do
  echo ${LINE} | grep -q 'ifdef(\`distro_gentoo';
  echo ${LINE} | grep -q '\(tunable_policy\|optional_policy\|ifdef\|ifndef\)';
  if [ $? -eq 0 ];
  then
    BLOCKID=$((${BLOCKID}+1));
    continue;
  fi
  echo ${LINE} | grep -q "^[ 	]*',\`[ 	]*$";
  if [ $? -eq 0 ];
  then
    BLOCKID=$((${BLOCKID}+1));
    continue;
  fi
  echo ${LINE} | grep -q "^[ 	]*')[ 	]*$";
  if [ $? -eq 0 ];
  then
    BLOCKID=0;
    continue;
  fi

  echo ${LINE} | grep -q ${DOMAIN} || continue;
  echo ${LINE} | grep -vq "ubac_constrained" || continue;
  echo ${LINE} | grep -vq "^[ 	]*allow " || continue;
  echo ${LINE} | grep -vq "^[ 	]*dontaudit " || continue;
  echo ${LINE} | grep -vq "^type " || continue;
  echo ${LINE} | sed -e "s:${DOMAIN}::g" | grep -vq "[a-z]*_t[, )]" || continue;
  echo ${LINE} | grep -vq "^[ 	]*#" || continue;
  echo ${LINE} | grep -vq ".*_type(" || continue;

  FUNC=$(echo ${LINE} | grep ${DOMAIN} | sed -e 's:^[ 	]*\([a-zA-Z_0-9]*\)(.*:\1:g' 2>/dev/null);
  # Looking in list for potential supersets
  SUPERSETS=$(grep ":${FUNC}:" ${LIST} | awk -F':' '{print $1}');
  for SUPERSET in ${SUPERSETS};
  do
    # Checking if one of these is also in the file
    MATCHBLOCK=$(grep "^[ 	]*${SUPERSET}(.*${DOMAIN}.*)" ${FILELIST});
    if [ $? -eq 0 ];
    then
      PREVBLOCKID=$(echo ${MATCHBLOCK} | sed -e 's:.*\[\([0-9]*\)\]$:\1:g');
      if [ ${BLOCKID} -eq ${PREVBLOCKID} ];
      then
        echo "Method ${FUNC} already provided by ${SUPERSET}"
      elif [ ${PREVBLOCKID} -eq 0 ];
      then
        echo "Method ${FUNC} already provided by ${SUPERSET} in master block.";
      else
        echo "Method ${FUNC} might be provided by ${SUPERSET} in other block.";
      fi
    fi
  done
  PREVBLOCKID=${BLOCKID};
done < ${FILE};

rm ${FILELIST};
