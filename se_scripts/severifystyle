#!/bin/sh

if [ $# -ne 2 ];
then
  echo "Usage: $0 <domain> <file>"
  exit 1;
fi

typeset LIST=$(mktemp);
typeset CMDLIST=$(mktemp);
typeset DOMAIN=$1;
typeset FILE=$2;
typeset PREV=0;
typeset NUM=0;
typeset PREVFUNC="";
typeset FUNC="";

selist -n > ${LIST};

# Order of interface calls, only for .te files
# First start with those direct matches (not within a block)
if [ "${FILE%%.te}" != "${FILE}" ];
then
  BLOCKID=0;
  PREVBLOCKID=0;
  while read LINE;
  do
    echo ${LINE} | grep -q '\(tunable_policy\|optional_policy\|ifdef\|ifndef\)';
    if [ $? -eq 0 ];
    then
      BLOCKID=${RANDOM}${RANDOM};
      continue;
    fi
    echo ${LINE} | grep -q "^[ 	]*',\`[ 	]*$";
    if [ $? -eq 0 ];
    then
      BLOCKID=${RANDOM}${RANDOM};
      continue;
    fi
    echo ${LINE} | grep -q "^[ 	]*')[ 	]*$";
    if [ $? -eq 0 ];
    then
      BLOCKID=0;
      continue;
    fi
    echo ${LINE} | grep -q ${DOMAIN} || continue;
    echo ${LINE} | grep -vq "ubac_constrained" || continue;
    echo ${LINE} | grep -vq "^[ 	]*allow " || continue;
    echo ${LINE} | grep -vq "^[ 	]*dontaudit " || continue;
    echo ${LINE} | grep -vq "^type " || continue;
    echo ${LINE} | sed -e "s:${DOMAIN}::g" | grep -vq "[a-z]*_t[, )]" || continue;
    echo ${LINE} | grep -vq "domain_type" || continue;

    # Store line
    echo "${BLOCKID}::${LINE}" >> ${CMDLIST};
  
    FUNC=$(echo ${LINE} | grep ${DOMAIN} | sed -e 's:^[ 	]*\([a-zA-Z_1-9]*\)(.*:\1:g' 2>/dev/null);
    NUM=$(grep "	${FUNC} " ${LIST} 2>/dev/null | awk '{print $1}');
    [[ -n "${NUM}" ]] && [[ ${NUM} -gt 0 ]] || continue;
    if [[ ${NUM} -lt ${PREV} ]] && [[ ${PREVBLOCKID} -eq ${BLOCKID} ]];
    then
      echo "Function ${FUNC} should be before ${PREVFUNC}";
    fi

    # Now check if a block has a rule that is also known in a 0-block (main)
    if [[ ${BLOCKID} -ne 0 ]];
    then
      grep -q "^0::${LINE}" ${CMDLIST};
      if [ $? -eq 0 ];
      then
        echo "Call ${LINE} is also known in a main block.";
      fi
    fi

    PREVFUNC="${FUNC}";
    PREV=${NUM};
    PREVBLOCKID=${BLOCKID};
  done < ${FILE};
fi

# Coding issues
grep -v '##' ${FILE} | grep -q '# ' && echo "In-line comments found in ${FILE}, verify that these are needed or not.";
grep -q '^[ 	][ 	]*$' ${FILE} && echo "Whitespace lines found in ${FILE}, these need to be removed!";
grep -q '#.*TODO' ${FILE} && echo "TODO entry in ${FILE}, these need to be removed!";
tail -1 ${FILE} | grep -q '^$' && echo "Last line is an empty line in ${FILE}, please remove.";

# Same for interface
FILE=${FILE%%.te}.if;
if [ -f ${FILE} ];
then
  grep -v '##' ${FILE} | grep -q '# ' && echo "In-line comments found in ${FILE}, verify that these are needed or not.";
  grep -q '^[ 	][ 	]*$' ${FILE} && echo "Whitespace lines found in ${FILE}, these need to be removed!";
  tail -1 ${FILE} | grep -q '^$' && echo "Last line is an empty line in ${FILE}, please remove.";
fi

rm ${LIST};
rm ${CMDLIST};
